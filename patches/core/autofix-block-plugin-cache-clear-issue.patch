From c0d7ca47d02e62b46718fe2f42284d2803429780 Mon Sep 17 00:00:00 2001
From: Sanket Jain <vagrant@local.alshaya.com>
Date: Wed, 18 Mar 2020 06:17:38 +0000
Subject: [PATCH] autofix plugin

---
 BlockManager.php | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/BlockManager.php b/BlockManager.php
index 026d810..026e4bc 100644
--- a/BlockManager.php
+++ b/BlockManager.php
@@ -9,6 +9,9 @@ use Drupal\Core\Plugin\CategorizingPluginManagerTrait;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Plugin\FilteredPluginManagerTrait;
 use Psr\Log\LoggerInterface;
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\Core\Url;
+use Drupal\Core\Site\Settings;
 
 /**
  * Manages discovery and instantiation of block plugins.
@@ -82,6 +85,38 @@ class BlockManager extends DefaultPluginManager implements BlockManagerInterface
    * {@inheritdoc}
    */
   public function getFallbackPluginId($plugin_id, array $configuration = []) {
+    // Checks if auto fix for block plugin is enabled.
+    if (Settings::get('auto_heal_discovery_cache', 1)) {
+      $discovery = \Drupal::cache("discovery"); 
+      $block_plugin_cache = $discovery->get("block_plugins")->data ?? [];
+
+      // Checks for empty cache for missing block plugins.
+      if (empty($block_plugin_cache['facets_summary_block:filter_bar']) 
+          || empty($block_plugin_cache['facets_summary_block:filter_bar_plp']) 
+            || empty($block_plugin_cache['facets_summary_block:filter_bar_promotions']) 
+              || empty($block_plugin_cache['views_exposed_filter_block:alshaya_product_list-block_1']) 
+                || empty($block_plugin_cache['views_exposed_filter_block:alshaya_product_list-block_2'])) {
+        \Drupal::logger('block_plugin_issue')
+              ->error('Auto-fixing discovery cache bin.');
+        // Deleting corrupted cache items.      
+        \Drupal::service('cache.discovery')->invalidateAll();
+
+        // Essentially, refresh the page by redirect.
+        $parameters = \Drupal::request()->query->all();
+        $path = URL::fromRoute('<current>', array($parameters))->toString();
+        $response = new RedirectResponse($path);
+        $request = \Drupal::request();
+
+        // Save the session so things like messages get saved.
+        $request->getSession()->save();
+        $response->prepare($request);
+
+        // Make sure to trigger kernel events.
+        \Drupal::service('kernel')->terminate($request, $response);
+        $response->send();
+        return;
+      }
+    }
     return 'broken';
   }
 
-- 
2.7.4

