diff --git a/core/lib/Drupal/Core/DrupalKernel.php b/core/lib/Drupal/Core/DrupalKernel.php
index ada9efec84..9951b1df2e 100644
--- a/core/lib/Drupal/Core/DrupalKernel.php
+++ b/core/lib/Drupal/Core/DrupalKernel.php
@@ -402,6 +402,17 @@ public static function findSitePath(Request $request, $require_settings = TRUE,
     $sites = [];
     include $app_root . '/sites/sites.php';
 
+    // Construct a key for storing the site path in apcu.
+    $prefix = 'sitepath_apcu';
+    $storage_key = implode(":", [$prefix, $script_name, $http_host, $app_root]);
+
+    // Check if we already have a cache entry containing site path in acpu.
+    $site_path = static::fetchValue($storage_key);
+
+    if (!empty($site_path)) {
+      return $site_path;
+    }
+
     $uri = explode('/', $script_name);
     $server = explode('.', implode('.', array_reverse(explode(':', rtrim($http_host, '.')))));
     for ($i = count($uri) - 1; $i > 0; $i--) {
@@ -411,13 +422,49 @@ public static function findSitePath(Request $request, $require_settings = TRUE,
           $dir = $sites[$dir];
         }
         if (file_exists($app_root . '/sites/' . $dir . '/settings.php') || (!$require_settings && file_exists($app_root . '/sites/' . $dir))) {
-          return "sites/$dir";
+          $path = "sites/$dir";
+          // In site-factory, files are in 'g' directory.
+          if (strpos($path, 'sites/g/files') !== FALSE) {
+            static::storeValue($storage_key, $path);
+          }
+          return $path;
         }
       }
     }
     return 'sites/default';
   }
 
+  /**
+   * Try to cache a value.
+   *
+   * @param $cid
+   *   The cache ID to use as the key.
+   * @param $value
+   *   The value to store.
+   */
+  protected static function storeValue($cid, $value) {
+    if (function_exists('apcu_add')) {
+      apcu_add($cid, $value);
+    }
+  }
+
+  /**
+   * Try to retrieve a stored value based on a key.
+   *
+   * @param string $key
+   *   The key associated with the value to retrieve.
+   *
+   * @return mixed|null
+   *   The value, or NULL.
+   */
+  protected static function fetchValue($key) {
+    if (function_exists('apcu_fetch')) {
+      return apcu_fetch($key);
+    }
+
+    return NULL;
+  }
+
   /**
    * {@inheritdoc}
    */
