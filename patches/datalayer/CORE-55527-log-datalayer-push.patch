diff --git a/README.md b/README.md
index 137c37d..9cb2ce3 100644
--- a/README.md
+++ b/README.md
@@ -199,6 +199,14 @@ if (typeof myVocab !== 'undefined' && myVocab.hasOwnProperty(specialTagTid)) {
 }
 ```

+## Altering data on client-side using event listeners
+It is possible to hook and alter the data before it is added to the page.
+```javascript
+document.addEventListener('dataLayerContentAlter', (e) => {
+  e.detail.data().cart_id = cartId;
+});
+```
+
 ## Language utilities
 If your project is multilingual this module provides several useful client-side tools...
 ```
diff --git a/datalayer.libraries.yml b/datalayer.libraries.yml
index d757470..fb29f2a 100644
--- a/datalayer.libraries.yml
+++ b/datalayer.libraries.yml
@@ -11,3 +11,12 @@ helper:
     /libraries/data-layer-helper/dist/data-layer-helper.js: {}
   dependencies:
     - core/jquery
+datapush:
+  version: 1.x
+  header: true
+  js:
+    js/datapush.js: {}
+  dependencies:
+    - core/jquery
+    - core/drupalSettings
+    - core/drupal
diff --git a/datalayer.module b/datalayer.module
index b84020f..202b686 100644
--- a/datalayer.module
+++ b/datalayer.module
@@ -75,16 +75,18 @@ function datalayer_page_attachments(array &$attachments) {
     $attachments['#attached']['html_head'] = [];
   }

-  $datalayer_attachment = datalayer_get_data_from_page();
   $attachments['#attached']['html_head'][] = [
     [
       '#type' => 'html_tag',
       '#tag' => 'script',
-      '#value' => 'window.dataLayer = window.dataLayer || []; window.dataLayer.push(' . Json::encode($datalayer_attachment) . ');',
+      '#value' => 'window.dataLayer = window.dataLayer || [];',
     ],
     'datalayers-js',
   ];

+  $attachments['#attached']['drupalSettings']['dataLayerContent'] = datalayer_get_data_from_page();
+  $attachments['#attached']['library'][] = 'datalayer/datapush';
+
   // Include data-layer-helper library.
   if (\Drupal::config('datalayer.settings')->get('lib_helper')) {
     $attachments['#attached']['library'][] = 'datalayer/helper';
diff --git a/js/datapush.js b/js/datapush.js
new file mode 100755
index 0000000..2d2dfe6
--- /dev/null
+++ b/js/datapush.js
@@ -0,0 +1,37 @@
+/**
+ * @file push initial data to data layer.
+ */
+
+ (function ($, Drupal, drupalSettings) {
+  'use strict';
+
+  Drupal.behaviors.dataPush = {
+    attach: function () {
+      $('body').once('datapush').each(function () {
+        try {
+          var dataLayerContent = drupalSettings.dataLayerContent;
+          if (Drupal.hasValue(dataLayerContent.event) && dataLayerContent.event == 'purchaseSuccess') {
+            Drupal.alshayaLogger('notice', 'Purchase success event before content alter: @datalayer.', {
+              '@datalayer': JSON.stringify(dataLayerContent),
+            });
+          }
+          var event = new CustomEvent('dataLayerContentAlter', {
+            detail: {
+              data: () => dataLayerContent
+            }
+          });
+          if (Drupal.hasValue(dataLayerContent.event) && dataLayerContent.event == 'purchaseSuccess') {
+            Drupal.alshayaLogger('notice', 'Purchase success event after content alter: @datalayer.', {
+              '@datalayer': JSON.stringify(dataLayerContent),
+            });
+          }
+          document.dispatchEvent(event);
+          window.dataLayer.push(dataLayerContent);
+        }
+        catch (e) {
+          Drupal.logJavascriptError('Error while pushing to datalayer.', e);
+        }
+      });
+    }
+  }
+})(jQuery, Drupal, drupalSettings);
diff --git a/tests/src/Functional/DataLayerFunctionalTest.php b/tests/src/Functional/DataLayerFunctionalTest.php
index 03051e1..2d768c7 100644
--- a/tests/src/Functional/DataLayerFunctionalTest.php
+++ b/tests/src/Functional/DataLayerFunctionalTest.php
@@ -47,7 +47,7 @@ class DataLayerFunctionalTest extends BrowserTestBase {
   public function testDataLayerVariableOutputByName() {
     $output = $this->drupalGet('node');
     $assert = $this->assertSession();
-    $assert->pageTextContains('window.dataLayer = window.dataLayer || []; window.dataLayer.push({');
+    $assert->pageTextContains('window.dataLayer = window.dataLayer || [];');
   }

   /**
@@ -59,6 +59,16 @@ class DataLayerFunctionalTest extends BrowserTestBase {
     $assert->pageTextContains('"dataLayer":{"defaultLang"');
   }

+  /**
+   * Test DataLayer datapush JS.
+   */
+  public function testDataLayerDatapushJs() {
+    $output = $this->drupalGet('node');
+    $assert = $this->assertSession();
+    $assert->pageTextContains('"dataLayerContent":{"drupalLanguage"');
+    $assert->pageTextContains('/js/datapush.js');
+  }
+
   /**
    * Tests basic admin form functionality.
    */
