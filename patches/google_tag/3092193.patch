diff --git a/google_tag.services.yml b/google_tag.services.yml
index b5b5251..307c6bc 100644
--- a/google_tag.services.yml
+++ b/google_tag.services.yml
@@ -2,3 +2,9 @@ services:
   google_tag.container_manager:
     class: Drupal\google_tag\Entity\ContainerManager
     arguments: ['@entity_type.manager', '@config.factory', '@file_system', '@cache.data', '@messenger', '@logger.factory']
+  cache.google_tag:
+   class: Drupal\Core\Cache\CacheBackendInterface
+   tags:
+     - { name: cache.bin }
+   factory: cache_factory:get
+   arguments: [google_tag]
diff --git a/src/Entity/Container.php b/src/Entity/Container.php
index e2d5d60..38dc2ed 100644
--- a/src/Entity/Container.php
+++ b/src/Entity/Container.php
@@ -3,6 +3,7 @@
 namespace Drupal\google_tag\Entity;
 
 use Drupal\Component\Render\FormattableMarkup;
+use Drupal\Core\Cache\Cache;
 use Drupal\Core\Condition\ConditionPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
@@ -581,7 +582,20 @@ EOS;
    *   The tag array.
    */
   public function inlineTag($type, $weight) {
-    $contents = $this->getSnippetContents($type);
+    // Use google_tag cache bin to get the contents.
+    // Note: File operations are generally heavier than cache operations and
+    // additionally we always have an option of memcache on top of this.
+    if ($contents = $this->getSnippetContents($type)) {
+      // Do nothing.
+    }
+    else {
+      $uri = $this->snippetURI($type);
+      $url = \Drupal::service('file_system')->realpath($uri);
+      $contents = @file_get_contents($url);
+
+      \Drupal::service('cache.google_tag')->set($this->snippetCid($type), $contents, Cache::PERMANENT, $this->getCacheTags());
+    }
+
     $attachment = [
       $contents ? [
         '#type' => 'html_tag',
@@ -617,7 +631,26 @@ EOS;
     // As markup, core removes the 'style' attribute from the noscript snippet.
     // With the inline template type, core does not alter the noscript snippet.
 
-    $contents = $this->getSnippetContents($type);
+    // Use google_tag cache bin to get the contents.
+    // Note: File operations are generally heavier than cache operations and
+    // additionally we always have an option of memcache on top of this.
+    if ($contents = $this->getSnippetContents($type)) {
+      // Do nothing.
+    }
+    else {
+      // @see https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Render!theme.api.php/group/theme_render/8.2.x
+      // The markup is passed through \Drupal\Component\Utility\Xss::filterAdmin()
+      // which strips known vectors while allowing a permissive list of HTML tags
+      // that are not XSS vectors. (e.g., <script> and <style> are not allowed.)
+      // As markup, core removes the 'style' attribute from the noscript snippet.
+      // With the inline template type, core does not alter the noscript snippet.
+      $uri = $this->snippetURI($type);
+      $url = \Drupal::service('file_system')->realpath($uri);
+      $contents = @file_get_contents($url);
+
+      \Drupal::service('cache.google_tag')->set($this->snippetCid($type), $contents, Cache::PERMANENT, $this->getCacheTags());
+    }
+
     $attachment = $contents ? [
       "google_tag_{$type}_tag__{$this->id()}" => [
         '#type' => 'inline_template',
@@ -638,7 +671,7 @@ EOS;
    *   The snippet contents.
    */
   public function getSnippetContents($type) {
-    $cache = \Drupal::service('cache.data')->get($this->snippetCid($type));
+    $cache = \Drupal::service('cache.google_tag')->get($this->snippetCid($type));
     return $cache ? $cache->data : '';
   }
 
