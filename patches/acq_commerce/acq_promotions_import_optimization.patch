From a5cdd5bf1804c373986a4234b5b4948fb38d790e Mon Sep 17 00:00:00 2001
From: piyuesh23 <piyuesh23@qed42.com>
Date: Sun, 20 Aug 2017 13:06:27 +0300
Subject: [PATCH] MMCPA-255: Fixing merge conflict.

---
 .../acq_promotion/src/AcqPromotionsManager.php     | 32 +++++++++++++---------
 1 file changed, 19 insertions(+), 13 deletions(-)

diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
index e0d9580e2344..22dfef24316d 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
@@ -11,7 +11,6 @@
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Queue\QueueFactory;
 use Drupal\node\Entity\Node;
-use Drupal\acq_sku\Entity\SKU;
 
 /**
  * Class AcqPromotionsManager.
@@ -336,13 +335,16 @@ public function processPromotions(array $promotions = []) {
       // Extract list of sku text attached with the promotion passed.
       $products = $promotion['products'];
       foreach ($products as $product) {
-        $fetched_promotion_skus[] = $product['product_sku'];
-        $fetched_promotion_sku_attach_data[$product['product_sku']] = [
-          'sku' => $product['product_sku'],
-        ];
+        if (!in_array($product['product_sku'], array_keys($fetched_promotion_skus))) {
+          $fetched_promotion_skus[$product['product_sku']] = $product['product_sku'];
 
-        if (($promotion['type'] === 'category') && isset($product['final_price'])) {
-          $fetched_promotion_sku_attach_data[$product['product_sku']]['final_price'] = $product['final_price'];
+          $fetched_promotion_sku_attach_data[$product['product_sku']] = [
+            'sku' => $product['product_sku'],
+          ];
+
+          if (($promotion['promotion_type'] === 'category') && isset($product['final_price'])) {
+            $fetched_promotion_sku_attach_data[$product['product_sku']]['final_price'] = $product['final_price'];
+          }
         }
       }
 
@@ -355,10 +357,15 @@ public function processPromotions(array $promotions = []) {
         $this->syncPromotionWithMiddlewareResponse($promotion, $promotion_node);
         $attached_skus = $this->getSkusForPromotion($promotion_node);
 
-        // Extract sku text from sku objects.
-        if (!empty($attached_skus)) {
-          foreach ($attached_skus as $attached_sku) {
-            $attached_promotion_skus[] = $attached_sku->getSku();
+        // Get list of skus for which promotions should be detached.
+        if (!empty($attached_promotion_skus)) {
+          $detach_promotion_skus = array_diff($attached_promotion_skus, $fetched_promotion_skus);
+
+          // Clear away skus that are already attached to current promotion.
+          foreach ($fetched_promotion_sku_attach_data as $key => $promotion_sku_data) {
+            if (in_array($key, $attached_promotion_skus)) {
+              unset($fetched_promotion_sku_attach_data[$key]);
+            }
           }
         }
 
@@ -386,8 +393,7 @@ public function processPromotions(array $promotions = []) {
       }
 
       // Attach promotions to skus.
-      if ($promotion_node && (!empty($fetched_promotion_skus))) {
-        $promotion_attach_queue = $this->queue->get('acq_promotion_attach_queue');
+      if ($promotion_node && (!empty($fetched_promotion_sku_attach_data))) {
         $data['promotion'] = $promotion_node->id();
         $chunks = array_chunk($fetched_promotion_sku_attach_data, $acq_promotion_attach_batch_size);
         foreach ($chunks as $chunk) {
-- 
2.10.1

From 31e4086cabeb662be0a19cd1eae7dfbd7e1da971 Mon Sep 17 00:00:00 2001
From: piyuesh23 <piyuesh23@qed42.com>
Date: Sun, 20 Aug 2017 10:23:46 +0300
Subject: [PATCH] MMCPA-255: Fixing merge conflict.

---
 .../acq_promotion/acq_promotion.services.yml       |  1 +
 .../acq_promotion/src/AcqPromotionsManager.php     | 53 ++++++++++++++--------
 2 files changed, 34 insertions(+), 20 deletions(-)

diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/acq_promotion.services.yml b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/acq_promotion.services.yml
index ecda31bdfea1..3da381be80be 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/acq_promotion.services.yml
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/acq_promotion.services.yml
@@ -9,3 +9,4 @@ services:
       - '@entity.repository'
       - '@queue'
       - '@config.factory'
+      - '@database'
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
index 22dfef24316d..5313f0e77a03 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_promotion/src/AcqPromotionsManager.php
@@ -4,6 +4,7 @@
 
 use Drupal\acq_commerce\Conductor\APIWrapper;
 use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Database\Driver\mysql\Connection;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ -67,6 +68,13 @@ class AcqPromotionsManager {
   protected $configFactory;
 
   /**
+   * Database connection service.
+   *
+   * @var \Drupal\Core\Database\Driver\mysql\Connection
+   */
+  protected $connection;
+
+  /**
    * Constructs a new AcqPromotionsManager object.
    *
    * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
@@ -83,6 +91,8 @@ class AcqPromotionsManager {
    *   Queue factory service.
    * @param \Drupal\Core\Config\ConfigFactory $configFactory
    *   Config factory service.
+   * @param Connection $connection
+   *   Database connection service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager,
                               APIWrapper $api_wrapper,
@@ -90,7 +100,8 @@ public function __construct(EntityTypeManagerInterface $entity_type_manager,
                               LanguageManager $languageManager,
                               EntityRepositoryInterface $entityRepository,
                               QueueFactory $queue,
-                              ConfigFactory $configFactory) {
+                              ConfigFactory $configFactory,
+                              Connection $connection) {
     $this->nodeStorage = $entity_type_manager->getStorage('node');
     $this->skuStorage = $entity_type_manager->getStorage('acq_sku');
     $this->apiWrapper = $api_wrapper;
@@ -99,6 +110,7 @@ public function __construct(EntityTypeManagerInterface $entity_type_manager,
     $this->entityRepository = $entityRepository;
     $this->queue = $queue;
     $this->configFactory = $configFactory;
+    $this->connection = $connection;
   }
 
   /**
@@ -147,16 +159,9 @@ protected function unpublishPromotions(array $validIDs = []) {
       $node->save();
 
       // Detach promotion from all skus.
-      $attached_skus = $this->getSkusForPromotion($node);
-
-      // Extract sku text from sku objects.
-      if (!empty($attached_skus)) {
-        foreach ($attached_skus as $attached_sku) {
-          $attached_promotion_skus[] = $attached_sku->getSku();
-        }
-      }
+      $attached_promotion_skus = $this->getSkusForPromotion($node);
 
-      if ($attached_skus) {
+      if (!empty($attached_promotion_skus)) {
         $data['skus'] = $attached_promotion_skus;
         $data['promotion'] = $node->id();
         $acq_promotion_detach_queue = $this->queue->get('acq_promotion_detach_queue');
@@ -211,13 +216,13 @@ public function getPromotionByRuleId($rule_id) {
    *   Array of sku objects attached with the promotion.
    */
   public function getSkusForPromotion(Node $promotion) {
-    $skus = [];
-    $query = $this->skuStorage->getQuery();
-    $query->condition('field_acq_sku_promotions', $promotion->id());
-    $sku_ids = $query->execute();
-    if (!empty($sku_ids)) {
-      $skus = SKU::loadMultiple($sku_ids);
-    }
+
+    $query = $this->connection->select('acq_sku__field_acq_sku_promotions', 'fasp');
+    $query->join('acq_sku_field_data', 'asfd', 'asfd.id = fasp.entity_id');
+    $query->condition('fasp.field_acq_sku_promotions_target_id', $promotion->id());
+    $query->fields('asfd', ['id', 'sku']);
+    $query->distinct();
+    $skus = $query->execute()->fetchAllKeyed(0, 1);
 
     return $skus;
   }
@@ -327,8 +332,15 @@ public function processPromotions(array $promotions = []) {
       ->get('acq_promotion.settings')
       ->get('promotion_attach_batch_size');
 
+    $promotion_detach_queue = $this->queue->get('acq_promotion_detach_queue');
+    $promotion_attach_queue = $this->queue->get('acq_promotion_attach_queue');
+
+    // Clear any outstanding items in queue before starting promotion import to
+    // avoid duplicate queues.
+    $promotion_detach_queue->deleteQueue();
+    $promotion_attach_queue->deleteQueue();
+
     foreach ($promotions as $promotion) {
-      $attached_promotion_skus = [];
       $fetched_promotion_skus = [];
       $fetched_promotion_sku_attach_data = [];
 
@@ -370,11 +382,12 @@ public function processPromotions(array $promotions = []) {
         }
 
         // Get list of skus for which promotions should be detached.
-        $detach_promotion_skus = array_diff($attached_promotion_skus, $fetched_promotion_skus);
+        if (!empty($attached_promotion_skus)) {
+          $detach_promotion_skus = array_diff($attached_promotion_skus, $fetched_promotion_skus);
+        }
 
         // Create a queue for removing promotions from skus.
         if (!empty($detach_promotion_skus)) {
-          $promotion_detach_queue = $this->queue->get('acq_promotion_detach_queue');
           $data['promotion'] = $promotion_node->id();
           $data['skus'] = $detach_promotion_skus;
           $promotion_detach_queue->createItem($data);
-- 
2.10.1

