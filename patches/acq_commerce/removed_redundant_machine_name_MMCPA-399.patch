diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
index 8604e09..a562ffe 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
@@ -38,9 +38,9 @@ function acq_sku_preprocess_acq_sku(&$variables) {
  * Function to allow custom modules to add base fields for acq_sku entity type.
  *
  * @param array $fields
- *   An associative array containing fields, each field must have:
- *   - machine_name: This must be the same as the attribute key.
- *   - label: Label to be used for admin forms and display.
+ *   An associative array containing field_machine_name as key and following
+ *   data in value:
+ *   - label: (Required) Label to be used for admin forms and display.
  *   - description: Description of the field to be used in admin forms.
  *   - cardinality: Number of values allowed to be stored.
  *   - type: Type of the field.
@@ -54,19 +54,19 @@ function acq_sku_add_base_fields(array $fields) {
   // Initialise with array if required.
   $additionalFields = empty($additionalFields) || !is_array($additionalFields) ? [] : $additionalFields;

-  foreach ($fields as $field) {
+  foreach ($fields as $machine_name => $field) {
     // Confirm we have minimum required data available to create the fields.
-    if (empty($field['machine_name']) || empty($field['label'])) {
-      throw new \Exception('Fields machine name and Label cannot be empty.');
+    if (empty($field['label'])) {
+      throw new \Exception('Field Label cannot be empty.');
     }

     // Check if the field is already available in config.
-    if (isset($additionalFields[$field['machine_name']])) {
+    if (isset($additionalFields[$machine_name])) {
       throw new \Exception('Field machine name used already.');
     }

     // Add the field to storedFields so we store them to config.
-    $additionalFields[$field['machine_name']] = $field;
+    $additionalFields[$machine_name] = $field;
   }

   // Store the fields in config.
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Entity/SKU.php b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Entity/SKU.php
index b6ceefa..f50152d 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Entity/SKU.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Entity/SKU.php
@@ -342,7 +342,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {

     // Check if we have additional fields to be added as base fields.
     if (!empty($additionalFields) && is_array($additionalFields)) {
-      foreach ($additionalFields as $field_info) {
+      foreach ($additionalFields as $machine_name => $field_info) {
         // Initialise the field variable.
         $field = NULL;

@@ -384,7 +384,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
         $field->setDisplayConfigurable('view', TRUE);

         // We will use attr prefix to avoid conflicts with default base fields.
-        $fields['attr_' . $field_info['machine_name']] = $field;
+        $fields['attr_' . $machine_name] = $field;
       }
     }

