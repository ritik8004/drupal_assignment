diff --git a/acq_commerce.api.php b/acq_commerce.api.php
new file mode 100644
index 0000000..958e794
--- /dev/null
+++ b/acq_commerce.api.php
@@ -0,0 +1,25 @@
+<?php
+
+/**
+ * @file
+ * Hooks specific to the acq_commerce module.
+ */
+
+/**
+ * @addtogroup hooks
+ * @{
+ */
+
+/**
+ * Alter customer data before sending to API.
+ *
+ * @param array $request_options
+ *   API request options to alter.
+ */
+function hook_acq_commerce_update_customer_api_request_alter(array &$request_options) {
+
+}
+
+/**
+ * @} End of "addtogroup hooks".
+ */
diff --git a/src/Conductor/APIWrapper.php b/src/Conductor/APIWrapper.php
index 5e37081..fa185b1 100644
--- a/src/Conductor/APIWrapper.php
+++ b/src/Conductor/APIWrapper.php
@@ -322,6 +322,9 @@ public function updateCustomer($customer_id, $first_name, $last_name, $email) {
       $opt['form_params']['customer[lastname]'] = $last_name;
       $opt['form_params']['customer[email]'] = $email;
 
+      // Invoke the alter hook to allow all modules to update the customer data.
+      \Drupal::moduleHandler()->alter('acq_commerce_update_customer_api_request', $opt);
+
       return ($client->post($endpoint, $opt));
     };
 
@@ -338,6 +341,38 @@ public function updateCustomer($customer_id, $first_name, $last_name, $email) {
   }
 
   /**
+   * Authenticate customer.
+   *
+   * @param string $email
+   *   Customer e-mail.
+   * @param string $password
+   *   Password.
+   *
+   * @return array
+   *   New customer array.
+   */
+  public function authenticateCustomer($email, $password) {
+    $endpoint = 'customer/' . $email;
+
+    $doReq = function ($client, $opt) use ($endpoint, $password) {
+      $opt['form_params']['password'] = $password;
+
+      return ($client->post($endpoint, $opt));
+    };
+
+    $customer = [];
+
+    try {
+      $customer = $this->tryAgentRequest($doReq, 'authenticateCustomer', 'customer');
+    }
+    catch (ConductorException $e) {
+      throw new \Exception($e->getMessage(), $e->getCode());
+    }
+
+    return $customer;
+  }
+
+  /**
    * Gets customer by email.
    *
    * @param string $email
