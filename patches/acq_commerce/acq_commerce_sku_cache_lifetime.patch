From f596790f00db33430ab4a877daabb36430b6deca Mon Sep 17 00:00:00 2001
From: piyuesh23 <piyuesh23@qed42.com>
Date: Tue, 29 Aug 2017 15:29:59 +0300
Subject: [PATCH] MMCPA-2204: Setting max cache lifetime for sku stocks +
 adding the same in config form.

---
 .../acq_commerce/modules/acq_sku/acq_sku.module    |  4 +++
 .../modules/acq_sku/acq_sku.routing.yml            |  8 +++++
 .../acq_sku/config/install/acq_sku.settings.yml    |  1 +
 .../modules/acq_sku/src/Form/SKUSettingsForm.php   | 38 +++++++++++++++++++---
 4 files changed, 47 insertions(+), 4 deletions(-)

diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
index f1f6b2812768..4d9578a04bd0 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.module
@@ -153,6 +153,10 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
         // Calculate the timestamp when we want the cache to expire.
         $expire = \Drupal::time()->getRequestTime() + $time;
 
+        $max_cache_lifetime = \Drupal::config('acq_sku.settings')->get('stock_cache_max_lifetime');
+
+        $expire = max($expire, $max_cache_lifetime);
+
         // Set the stock in cache.
         \Drupal::cache('stock')->set($cid, $stock, $expire);
       }
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.routing.yml b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.routing.yml
index 2047911d8ad0..d20c55d166a2 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.routing.yml
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.routing.yml
@@ -60,3 +60,11 @@ acq_sku.sync:
     _title: 'Synchronize Product / Category Data'
   requirements:
     _permission: 'access commerce administration pages'
+
+acq_sku.settings:
+  path: '/admin/commerce/sku/settings'
+  defaults:
+    _form: '\Drupal\acq_sku\Form\SKUSettingsForm'
+    _title: 'SKU Settings Form'
+  requirements:
+    _permission: 'access commerce administration pages'
\ No newline at end of file
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/acq_sku.settings.yml b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/acq_sku.settings.yml
index b67a4972e882..b1a4acd8fbc5 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/acq_sku.settings.yml
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/acq_sku.settings.yml
@@ -1 +1,2 @@
 stock_cache_multiplier: 600
+stock_cache_max_lifetime: 7200
\ No newline at end of file
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Form/SKUSettingsForm.php b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Form/SKUSettingsForm.php
index d781bdea07dd..7f7072e18f26 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Form/SKUSettingsForm.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/Form/SKUSettingsForm.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\acq_sku\Form;
 
-use Drupal\Core\Form\FormBase;
+use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -12,7 +12,18 @@
  *
  * @ingroup acq_sku
  */
-class SKUSettingsForm extends FormBase {
+class SKUSettingsForm extends ConfigFormBase {
+
+  /**
+   * Gets the configuration names that will be editable.
+   *
+   * @return array
+   *   An array of configuration object names that are editable if called in
+   *   conjunction with the trait's config() method.
+   */
+  protected function getEditableConfigNames() {
+    return ['acq_sku.settings'];
+  }
 
   /**
    * Returns a unique string identifying the form.
@@ -33,7 +44,10 @@ public function getFormId() {
    *   An associative array containing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    // Empty implementation of the abstract submit class.
+    $sku_settings = $this->config('acq_sku.settings');
+    $sku_settings->set('stock_cache_multiplier', $form_state->getValue('stock_cache_multiplier'));
+    $sku_settings->set('stock_cache_max_lifetime', $form_state->getValue('stock_cache_max_lifetime'));
+    $sku_settings->save();
   }
 
   /**
@@ -48,7 +62,23 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
    *   Form definition array.
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    $form['sku_settings']['#markup'] = 'Settings form for SKU. Manage field settings here.';
+    $form = parent::buildForm($form, $form_state);
+
+    $sku_settings = $this->config('acq_sku.settings');
+    $form['stock_cache_multiplier'] = [
+      '#type' => 'textfield',
+      '#title' => $this->t('Stock Cache Multiplier'),
+      '#description' => $this->t("Multiplier used while generating the cache expiration for SKU's stock"),
+      '#default_value' => $sku_settings->get('stock_cache_multiplier'),
+    ];
+
+    $form['stock_cache_max_lifetime'] = [
+      '#type' => 'textfield',
+      '#title' => $this->t('Stock Cache Max Lifetime'),
+      '#description' => $this->t("Max lifetime for the SKU's cache"),
+      '#default_value' => $sku_settings->get('stock_cache_max_lifetime'),
+    ];
+
     return $form;
   }
 
-- 
2.10.1

