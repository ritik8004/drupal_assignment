diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CustomerCartForm.php b/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CustomerCartForm.php
index 5a913d4..12b5459 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CustomerCartForm.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CustomerCartForm.php
@@ -30,6 +30,13 @@ class CustomerCartForm extends FormBase {
   protected $cartStorage;
 
   /**
+   * The success message to be displayed on coupon apply.
+   *
+   * @var string
+   */
+  protected $successMessage = NULL;
+
+  /**
    * Constructor.
    *
    * @param \Drupal\acq_cart\CartStorageInterface $cart_storage
@@ -188,7 +195,14 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
       $form_state->setRedirect('acq_checkout.form');
     }
     else {
-      drupal_set_message(t('Your cart has been updated.'));
+      // If we have success message available.
+      if (!is_null($this->successMessage)) {
+        drupal_set_message($this->successMessage);
+      }
+      else {
+        // Default show this message.
+        drupal_set_message(t('Your cart has been updated.'));
+      }
     }
   }
 
@@ -200,26 +214,30 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
    */
   private function updateCart(FormStateInterface $form_state) {
     try {
-      $this->cartStorage->updateCart();
+      $cart = $this->cartStorage->updateCart();
+      $response_message = $cart->get('response_message');
+      // We will have type of message like error or success.
+      if (!empty($response_message[1])) {
+        // If its success.
+        if ($response_message[1] == 'success') {
+          $this->successMessage = $response_message[0];
+        }
+        else if ($response_message[1] == 'error') {
+          // Set the error and require rebuild.
+          $form_state->setErrorByName('coupon', $response_message[0]);
+          $form_state->setRebuild(TRUE);
+
+          // Reset the cart.
+          $this->cart->setCoupon('');
+          $this->updateCart($form_state);
+        }
+      }
     }
     catch (\Exception $e) {
       // Dispatch event so action can be taken.
       $dispatcher = \Drupal::service('event_dispatcher');
       $event = new UpdateCartErrorEvent($e);
       $dispatcher->dispatch(UpdateCartErrorEvent::SUBMIT, $event);
-
-      if ($e->getMessage() == $this->t('Coupon code is not valid')->render()) {
-        // Set the error and require rebuild.
-        $form_state->setErrorByName('coupon', $this->t('This coupon code seems invalid or expired, please try new one.'));
-        $form_state->setRebuild(TRUE);
-
-        // Reset the cart.
-        $this->cart->setCoupon('');
-        $this->updateCart($form_state);
-      }
-      else {
-        // We will handle all other cases using event dispatcher.
-      }
     }
   }
 
