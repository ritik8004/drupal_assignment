diff --git a/modules/acq_sku/acq_sku.module b/modules/acq_sku/acq_sku.module
index 02482fc9e..648a11018 100644
--- a/modules/acq_sku/acq_sku.module
+++ b/modules/acq_sku/acq_sku.module
@@ -149,29 +149,32 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
 
       // Get the stock.
       $stock = $api_wrapper->skuStockCheck($sku_entity->getSku());
-
-      // Magento uses additional flag as well for out of stock.
-      if (isset($stock['is_in_stock']) && empty($stock['is_in_stock'])) {
-        $stock['quantity'] = 0;
-      }
-
-      // If cache multiplier is zero we don't cache the stock.
-      if ($cache_multiplier = \Drupal::config('acq_sku.settings')->get('stock_cache_multiplier')) {
-        $default_cache_lifetime = $stock['quantity'] ? $stock['quantity'] * $cache_multiplier : $cache_multiplier;
-        $max_cache_lifetime = \Drupal::config('acq_sku.settings')->get('stock_cache_max_lifetime');
-
-        // Calculate the timestamp when we want the cache to expire.
-        $stock_cache_lifetime = min($default_cache_lifetime, $max_cache_lifetime);
-        $expire = $stock_cache_lifetime + \Drupal::time()->getRequestTime();
-
-        // Set the stock in cache.
-        \Drupal::cache('stock')->set($cid, $stock, $expire);
-      }
     }
   }
   catch (ConductorException $e) {
     // Log the stock error, do not throw error if stock info is missing.
     \Drupal::logger('acq_sku')->emergency('Unable to get the stock for @sku : @message', ['@sku' => $sku_entity->getSku(), '@message' => $e->getMessage()]);
+
+    // We will cache this also for sometime to reduce load.
+    $stock['is_in_stock'] = FALSE;
+  }
+
+  // Magento uses additional flag as well for out of stock.
+  if (isset($stock['is_in_stock']) && empty($stock['is_in_stock'])) {
+    $stock['quantity'] = 0;
+  }
+
+  // If cache multiplier is zero we don't cache the stock.
+  if ($cache_multiplier = \Drupal::config('acq_sku.settings')->get('stock_cache_multiplier')) {
+    $default_cache_lifetime = $stock['quantity'] ? $stock['quantity'] * $cache_multiplier : $cache_multiplier;
+    $max_cache_lifetime = \Drupal::config('acq_sku.settings')->get('stock_cache_max_lifetime');
+
+    // Calculate the timestamp when we want the cache to expire.
+    $stock_cache_lifetime = min($default_cache_lifetime, $max_cache_lifetime);
+    $expire = $stock_cache_lifetime + \Drupal::time()->getRequestTime();
+
+    // Set the stock in cache.
+    \Drupal::cache('stock')->set($cid, $stock, $expire);
   }
 
   return $stock;
