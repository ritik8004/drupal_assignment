diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.services.yml b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.services.yml
index f7dc993..a40c5ac 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.services.yml
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/acq_sku.services.yml
@@ -8,7 +8,6 @@ services:
     arguments:
       - '@entity_type.manager'
       - '@acq_commerce.client_factory'
-      - '@entity.query'
       - '@logger.factory'

   acq_sku.product_options_manager:
@@ -22,7 +21,6 @@ services:
     class: Drupal\acq_sku\ConductorCategoryRepository
     arguments:
       - '@entity_type.manager'
-      - '@entity.query'
       - '@logger.factory'
       - 'acq_product_category'

diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.field.taxonomy_term.acq_product_category.field_category_include_menu.yml b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.field.taxonomy_term.acq_product_category.field_category_include_menu.yml
new file mode 100644
index 0000000..4dc8f09
--- /dev/null
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.field.taxonomy_term.acq_product_category.field_category_include_menu.yml
@@ -0,0 +1,22 @@
+langcode: en
+status: true
+dependencies:
+  config:
+    - field.storage.taxonomy_term.field_category_include_menu
+    - taxonomy.vocabulary.acq_product_category
+id: taxonomy_term.acq_product_category.field_category_include_menu
+field_name: field_category_include_menu
+entity_type: taxonomy_term
+bundle: acq_product_category
+label: 'Include in Menu'
+description: ''
+required: false
+translatable: true
+default_value:
+  -
+    value: 1
+default_value_callback: ''
+settings:
+  on_label: 'Yes'
+  off_label: 'No'
+field_type: boolean
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.storage.taxonomy_term.field_category_include_menu.yml b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.storage.taxonomy_term.field_category_include_menu.yml
new file mode 100644
index 0000000..dcd9904
--- /dev/null
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/config/install/field.storage.taxonomy_term.field_category_include_menu.yml
@@ -0,0 +1,17 @@
+langcode: en
+status: true
+dependencies:
+  module:
+    - taxonomy
+id: taxonomy_term.field_category_include_menu
+field_name: field_category_include_menu
+entity_type: taxonomy_term
+type: boolean
+settings: {  }
+module: core
+locked: false
+cardinality: 1
+translatable: true
+indexes: {  }
+persist_with_no_fields: false
+custom_storage: false
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryManager.php b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryManager.php
index e52da4b..a7c3bb6 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryManager.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryManager.php
@@ -3,7 +3,6 @@
 namespace Drupal\acq_sku;

 use Drupal\Core\Entity\EntityTypeManagerInterface;
-use Drupal\Core\Entity\Query\QueryFactory;
 use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\acq_commerce\Conductor\ClientFactory;

@@ -43,13 +42,6 @@ class ConductorCategoryManager implements CategoryManagerInterface {
   private $vocabulary;

   /**
-   * Drupal Entity Query Factory.
-   *
-   * @var \Drupal\Core\Entity\Query\QueryFactory
-   */
-  private $queryFactory;
-
-  /**
    * Result (create / update / failed) counts.
    *
    * @var array
@@ -63,16 +55,13 @@ class ConductorCategoryManager implements CategoryManagerInterface {
    *   EntityTypeManager object.
    * @param \Drupal\acq_commerce\Conductor\ClientFactory $client_factory
    *   ClientFactory object.
-   * @param \Drupal\Core\Entity\Query\QueryFactory $query_factory
-   *   QueryFactory object.
    * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
    *   LoggerFactory object.
    */
-  public function __construct(EntityTypeManagerInterface $entity_type_manager, ClientFactory $client_factory, QueryFactory $query_factory, LoggerChannelFactory $logger_factory) {
+  public function __construct(EntityTypeManagerInterface $entity_type_manager, ClientFactory $client_factory, LoggerChannelFactory $logger_factory) {

     $this->termStorage = $entity_type_manager->getStorage('taxonomy_term');
     $this->vocabStorage = $entity_type_manager->getStorage('taxonomy_vocabulary');
-    $this->queryFactory = $query_factory;
     $this->clientFactory = $client_factory;
     $this->logger = $logger_factory->get('acq_sku');
   }
@@ -221,11 +210,13 @@ private function syncCategory(array $categories, $parent = NULL) {
         continue;
       }

+      $langcode = acq_commerce_get_langcode_from_store_id($category['store_id']);
+
       $parent_data = ($parent) ? [$parent->id()] : [0];
       $position = (isset($category['position'])) ? (int) $category['position'] : 1;

       // Load existing term (if found).
-      $query = $this->queryFactory->get('taxonomy_term');
+      $query = $this->termStorage->getQuery();
       $group = $query->andConditionGroup()
         ->condition('field_commerce_id', $category['category_id'])
         ->condition('vid', $this->vocabulary->id());
@@ -234,25 +225,29 @@ private function syncCategory(array $categories, $parent = NULL) {
       $tids = $query->execute();

       if (count($tids) > 1) {
-
-        $this->logger->error(
-          'Multiple terms found for category id @cid',
-          ['@cid' => $category['category_id']]
-        );
-
+        $this->logger->error('Multiple terms found for category id @cid', ['@cid' => $category['category_id']]);
         $this->results['failed']++;
         continue;
-
       }
       elseif (count($tids) == 1) {
-
-        $this->logger->info('Updating category term @name [@id]',
-          ['@name' => $category['name'], '@id' => $category['category_id']]
-        );
+        $this->logger->info('Updating category term @name [@id]', [
+          '@name' => $category['name'],
+          '@id' => $category['category_id'],
+        ]);

         // Load and update the term entity.
+        /** @var \Drupal\taxonomy\Entity\Term $term */
         $term = $this->termStorage->load(array_shift($tids));
-        $term->name->value = $category['name'];
+
+        if (!$term->hasTranslation($langcode)) {
+          $term = $term->addTranslation($langcode);
+          $term->get('field_commerce_id')->setValue($category['category_id']);
+        }
+        else {
+          $term = $term->getTranslation($langcode);
+        }
+
+        $term->setName($category['name']);
         $term->parent = $parent_data;
         $term->weight->value = $position;

@@ -276,16 +268,20 @@ private function syncCategory(array $categories, $parent = NULL) {
         );

         $term = $this->termStorage->create([
-          'vid'               => $this->vocabulary->id(),
-          'name'              => $category['name'],
+          'vid' => $this->vocabulary->id(),
+          'name' => $category['name'],
           'field_commerce_id' => $category['category_id'],
-          'parent'            => $parent_data,
-          'weight'            => $position,
+          'parent' => $parent_data,
+          'weight' => $position,
+          'langcode' => $langcode,
         ]);

         $this->results['created']++;
       }

+      $term->get('field_category_include_menu')->setValue($category['in_menu']);
+      $term->get('description')->setValue($category['description']);
+
       $term->save();

       // Recurse to children categories.
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryRepository.php b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryRepository.php
index e2a8e37..9d46ad3 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryRepository.php
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_sku/src/ConductorCategoryRepository.php
@@ -42,29 +42,19 @@ class ConductorCategoryRepository implements CategoryRepositoryInterface {
   private $vocabulary;

   /**
-   * Drupal Entity Query Factory.
-   *
-   * @var \Drupal\Core\Entity\Query\QueryFactory
-   */
-  private $queryFactory;
-
-  /**
    * Constructor.
    *
    * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
    *   EntityTypeManager object.
-   * @param \Drupal\Core\Entity\Query\QueryFactory $query_factory
-   *   QueryFactory object.
    * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
    *   LoggerFactory object.
    * @param string $vocabulary
    *   Taxonomy Vocabulary for categories.
    */
-  public function __construct(EntityTypeManagerInterface $entity_type_manager, QueryFactory $query_factory, LoggerChannelFactory $logger_factory, $vocabulary = NULL) {
+  public function __construct(EntityTypeManagerInterface $entity_type_manager, LoggerChannelFactory $logger_factory, $vocabulary = NULL) {

     $this->termStorage = $entity_type_manager->getStorage('taxonomy_term');
     $this->vocabStorage = $entity_type_manager->getStorage('taxonomy_vocabulary');
-    $this->queryFactory = $query_factory;
     $this->logger = $logger_factory->get('acq_sku');

     if ($vocabulary) {
@@ -95,7 +85,7 @@ public function loadCategoryTerm($commerce_id) {
       return ($this->terms[$commerce_id]);
     }

-    $query = $this->queryFactory->get('taxonomy_term');
+    $query = $this->termStorage->getQuery();
     $group = $query->andConditionGroup()
       ->condition('field_commerce_id', $commerce_id)
       ->condition('vid', $this->vocabulary->id());
@@ -105,10 +95,7 @@ public function loadCategoryTerm($commerce_id) {

     if (count($tids) > 1) {

-      $this->logger->error(
-        'Multiple terms found for category id @cid',
-        ['@cid' => $category['category_id']]
-      );
+      $this->logger->error('Multiple terms found for category id @cid', ['@cid' => $commerce_id]);

       return (NULL);

diff --git a/docroot/modules/custom/alshaya_acm/alshaya_acm.drush.inc b/docroot/modules/custom/alshaya_acm/alshaya_acm.drush.inc
index b07e332..43bb247 100644
--- a/docroot/modules/custom/alshaya_acm/alshaya_acm.drush.inc
+++ b/docroot/modules/custom/alshaya_acm/alshaya_acm.drush.inc
@@ -35,10 +35,14 @@ function drush_alshaya_acm_offline_categories_sync() {
   drush_print(dt('Synchronizing all commerce categories, please wait...'));
   $container = \Drupal::getContainer();

-  module_load_include('data', 'alshaya_acm', 'includes/categories');
-  global $_alshaya_acm_categories;
+  $languages = \Drupal::languageManager()->getLanguages();
+  foreach ($languages as $langcode => $language) {
+    drush_print(dt('Dealing with @langcode ...', ['@langcode' => $langcode]));
+    module_load_include('data', 'alshaya_acm', 'includes/categories_' . $langcode);
+    global $_alshaya_acm_categories;

-  $container->get('acq_sku.category_manager')->synchronizeTreeOffline('acq_product_category', $_alshaya_acm_categories);
+    $container->get('acq_sku.category_manager')->synchronizeTreeOffline('acq_product_category', $_alshaya_acm_categories);
+  }
   drush_print(dt('Done.'));
 }
