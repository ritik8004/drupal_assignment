diff --git a/acq_commerce.config_translation.yml b/acq_commerce.config_translation.yml
index 6c5392f..862b412 100644
--- a/acq_commerce.config_translation.yml
+++ b/acq_commerce.config_translation.yml
@@ -3,3 +3,9 @@ acq_commerce.currency:
   base_route_name: acq_commerce.configuration.currency
   names:
     - acq_commerce.currency
+
+acq_commerce.store:
+  title: 'Store Settings'
+  base_route_name: acq_commerce.configuration.store
+  names:
+    - acq_commerce.store
diff --git a/acq_commerce.links.menu.yml b/acq_commerce.links.menu.yml
index df5546d..386f36b 100644
--- a/acq_commerce.links.menu.yml
+++ b/acq_commerce.links.menu.yml
@@ -25,3 +25,10 @@ acq_commerce.configuration.currency:
   parent: 'acq_commerce.configuration'
   description: 'Configure your Acquia Commerce Currency settings.'
   weight: 21
+
+acq_commerce.configuration.store:
+  title: 'Store Settings'
+  route_name: 'acq_commerce.configuration.store'
+  parent: 'acq_commerce.configuration'
+  description: 'Configure Store mapping.'
+  weight: 22
diff --git a/acq_commerce.links.task.yml b/acq_commerce.links.task.yml
new file mode 100644
index 0000000..b8e9494
--- /dev/null
+++ b/acq_commerce.links.task.yml
@@ -0,0 +1,14 @@
+acq_commerce.configuration.conductor:
+  title: 'Conductor Settings'
+  route_name: 'acq_commerce.configuration.conductor'
+  base_route: 'acq_commerce.configuration.conductor'
+
+acq_commerce.configuration.currency:
+  title: 'Currency Settings'
+  route_name: 'acq_commerce.configuration.currency'
+  base_route: 'acq_commerce.configuration.currency'
+
+acq_commerce.configuration.store:
+  title: 'Store Settings'
+  route_name: 'acq_commerce.configuration.store'
+  base_route: 'acq_commerce.configuration.store'
diff --git a/acq_commerce.routing.yml b/acq_commerce.routing.yml
index 3d4af8f..8c2bdeb 100644
--- a/acq_commerce.routing.yml
+++ b/acq_commerce.routing.yml
@@ -29,3 +29,11 @@ acq_commerce.configuration.currency:
     _title: 'Currency Settings'
   requirements:
     _permission: 'access commerce administration pages'
+
+acq_commerce.configuration.store:
+  path: '/admin/commerce/config/store-settings'
+  defaults:
+    _form: '\Drupal\acq_commerce\Form\StoreSettingsForm'
+    _title: 'Store Settings'
+  requirements:
+    _permission: 'access commerce administration pages'
diff --git a/config/install/acq_commerce.currency.yml b/config/install/acq_commerce.currency.yml
index a603eb2..f7709b4 100644
--- a/config/install/acq_commerce.currency.yml
+++ b/config/install/acq_commerce.currency.yml
@@ -1,4 +1,4 @@
 currency_code: '$'
 currency_code_position: 'before'
-decimal_points: 2
+decimal_points: '2'
 langcode: en
diff --git a/config/install/acq_commerce.store.yml b/config/install/acq_commerce.store.yml
new file mode 100644
index 0000000..be2a19c
--- /dev/null
+++ b/config/install/acq_commerce.store.yml
@@ -0,0 +1,2 @@
+store_id: '1'
+langcode: en
diff --git a/config/schema/acq_commerce.currency.yml b/config/schema/acq_commerce.currency.yml
new file mode 100644
index 0000000..8f61163
--- /dev/null
+++ b/config/schema/acq_commerce.currency.yml
@@ -0,0 +1,16 @@
+acq_commerce.currency:
+  type: config_object
+  label: 'Currency Settings'
+  mapping:
+    currency_code:
+      type: label
+      label: 'Currency Code'
+    currency_code_position:
+      type: label
+      label: 'Currency Code Position'
+    decimal_points:
+      type: label
+      label: 'Decimal Points'
+    langcode:
+      type: string
+      label: 'Language code'
diff --git a/config/schema/acq_commerce.schema.yml b/config/schema/acq_commerce.schema.yml
deleted file mode 100644
index 7d7408a..0000000
--- a/config/schema/acq_commerce.schema.yml
+++ /dev/null
@@ -1,12 +0,0 @@
-# Schema for the configuration files of the Acquia Commerce module.
-
-acq_commerce.currency:
-  type: config_object
-  label: 'Currency Settings'
-  mapping:
-    currency_code:
-      type: label
-      label: 'Currency Code'
-    currency_code_position:
-      type: label
-      label: 'Currency Code Position'
diff --git a/config/schema/acq_commerce.store.yml b/config/schema/acq_commerce.store.yml
new file mode 100644
index 0000000..7a65b0d
--- /dev/null
+++ b/config/schema/acq_commerce.store.yml
@@ -0,0 +1,10 @@
+acq_commerce.store:
+  type: config_object
+  label: 'Store Settings'
+  mapping:
+    store_id:
+      type: label
+      label: 'Store id'
+    langcode:
+      type: string
+      label: 'Language code'
diff --git a/src/Form/ConductorSettingsForm.php b/src/Form/ConductorSettingsForm.php
index 240e70a..150d1d5 100644
--- a/src/Form/ConductorSettingsForm.php
+++ b/src/Form/ConductorSettingsForm.php
@@ -6,7 +6,7 @@
 use Drupal\Core\Form\FormStateInterface;

 /**
- * Class OrderSettingsForm.
+ * Class ConductorSettingsForm.
  *
  * @package Drupal\acq_commerce\Form
  *
diff --git a/src/Form/StoreSettingsForm.php b/src/Form/StoreSettingsForm.php
new file mode 100644
index 0000000..a2b816f
--- /dev/null
+++ b/src/Form/StoreSettingsForm.php
@@ -0,0 +1,57 @@
+<?php
+
+namespace Drupal\acq_commerce\Form;
+
+use Drupal\Core\Form\ConfigFormBase;
+use Drupal\Core\Form\FormStateInterface;
+
+/**
+ * Class StoreSettingsForm.
+ *
+ * @package Drupal\acq_commerce\Form
+ *
+ * @ingroup acq_commerce
+ */
+class StoreSettingsForm extends ConfigFormBase {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getFormId() {
+    return 'acq_commerce_store_settings';
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getEditableConfigNames() {
+    return ['acq_commerce.store'];
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function submitForm(array &$form, FormStateInterface $form_state) {
+    $this->config('acq_commerce.store')
+      ->set('store_id', $form_state->getValue('store_id'))
+      ->save();
+
+    return parent::submitForm($form, $form_state);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function buildForm(array $form, FormStateInterface $form_state) {
+    $config = $this->config('acq_commerce.store');
+
+    $form['store_id'] = [
+      '#type' => 'textfield',
+      '#title' => $this->t('Store id'),
+      '#default_value' => $config->get('store_id'),
+    ];
+
+    return parent::buildForm($form, $form_state);
+  }
+
+}
diff --git a/acq_commerce.module b/acq_commerce.module
index 809cc63..16662b8 100644
--- a/acq_commerce.module
+++ b/acq_commerce.module
@@ -53,3 +53,65 @@ function template_preprocess_acq_commerce_price(array &$variables) {

   $variables['price'] = number_format($variables['price'], $config->get('decimal_points'));
 }
+
+/**
+ * Helper function to get mapping between all store ids and language codes.
+ *
+ * @return array
+ *   Mapping array.
+ */
+function acq_commerce_get_store_language_mapping() {
+  $mapping = [];
+
+  $languages = \Drupal::languageManager()->getLanguages();
+
+  // Prepare the alternate locale data.
+  foreach ($languages as $lang => $language) {
+    // For default language, we access the config directly.
+    if ($lang == \Drupal::languageManager()->getDefaultLanguage()->getId()) {
+      $config = \Drupal::config('acq_commerce.store');
+    }
+    // We get store id from translated config for other languages.
+    else {
+      $config = \Drupal::languageManager()->getLanguageConfigOverride($lang, 'acq_commerce.store');
+    }
+
+    $mapping[$lang] = $config->get('store_id');
+  }
+
+  return $mapping;
+}
+
+/**
+ * Helper function to get store id from language code.
+ *
+ * @param string $langcode
+ *   Language code to convert to store id.
+ *
+ * @return string|null
+ *   Store id if available as string or null.
+ */
+function acq_commerce_get_store_id_from_langcode($langcode) {
+  $mapping = acq_commerce_get_store_language_mapping();
+  return !empty($mapping[$langcode]) ? $mapping[$langcode] : NULL;
+}
+
+/**
+ * Helper function to get language code from store id.
+ *
+ * @param $store_id
+ *   Store id to convert to language code.
+ *
+ * @return string|null
+ *   Language code if available or null.
+ */
+function acq_commerce_get_langcode_from_store_id($store_id) {
+  $mapping = acq_commerce_get_store_language_mapping();
+  $mapping = array_flip($mapping);
+
+  if (empty($store_id)) {
+    return array_shift($mapping);
+  }
+
+  return !empty($mapping[$store_id]) ? $mapping[$store_id] : NULL;
+}
diff --git a/modules/acq_sku/config/install/views.view.manage_skus.yml b/modules/acq_sku/config/install/views.view.manage_skus.yml
new file mode 100644
index 0000000..dcca7fb
--- /dev/null
+++ b/modules/acq_sku/config/install/views.view.manage_skus.yml
@@ -0,0 +1,770 @@
+langcode: en
+status: true
+dependencies:
+  module:
+    - acq_sku
+    - user
+id: manage_skus
+label: 'Manage SKUs'
+module: views
+description: ''
+tag: ''
+base_table: acq_sku
+base_field: id
+core: 8.x
+display:
+  default:
+    display_plugin: default
+    id: default
+    display_title: Master
+    position: 0
+    display_options:
+      access:
+        type: perm
+        options:
+          perm: 'access commerce administration pages'
+      cache:
+        type: tag
+        options: {  }
+      query:
+        type: views_query
+        options:
+          disable_sql_rewrite: false
+          distinct: false
+          replica: false
+          query_comment: ''
+          query_tags: {  }
+      exposed_form:
+        type: basic
+        options:
+          submit_button: Apply
+          reset_button: false
+          reset_button_label: Reset
+          exposed_sorts_label: 'Sort by'
+          expose_sort_order: true
+          sort_asc_label: Asc
+          sort_desc_label: Desc
+      pager:
+        type: full
+        options:
+          items_per_page: 50
+          offset: 0
+          id: 0
+          total_pages: null
+          tags:
+            previous: ‹‹
+            next: ››
+            first: '« First'
+            last: 'Last »'
+          expose:
+            items_per_page: false
+            items_per_page_label: 'Items per page'
+            items_per_page_options: '5, 10, 25, 50'
+            items_per_page_options_all: false
+            items_per_page_options_all_label: '- All -'
+            offset: false
+            offset_label: Offset
+          quantity: 9
+      style:
+        type: table
+        options:
+          grouping: {  }
+          row_class: ''
+          default_row_class: true
+          override: true
+          sticky: false
+          caption: ''
+          summary: ''
+          description: ''
+          columns:
+            sku: sku
+            name: name
+            type: type
+            langcode: langcode
+            changed: changed
+            edit_acq_sku: edit_acq_sku
+          info:
+            sku:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: ''
+            name:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: priority-medium
+            type:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: priority-low
+            langcode:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: priority-low
+            changed:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: priority-medium
+            edit_acq_sku:
+              sortable: false
+              default_sort_order: asc
+              align: ''
+              separator: ''
+              empty_column: false
+              responsive: ''
+          default: changed
+          empty_table: false
+      row:
+        type: fields
+      fields:
+        sku:
+          id: sku
+          table: acq_sku
+          field: sku
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: SKU
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          click_sort_column: value
+          type: string
+          settings:
+            link_to_entity: false
+          group_column: value
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+          entity_type: acq_sku
+          entity_field: sku
+          plugin_id: field
+        name:
+          id: name
+          table: acq_sku
+          field: name
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: Name
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          click_sort_column: value
+          type: string
+          settings:
+            link_to_entity: true
+          group_column: value
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+          entity_type: null
+          entity_field: name
+          plugin_id: field
+        type:
+          id: type
+          table: acq_sku
+          field: type
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: 'SKU Type'
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          click_sort_column: target_id
+          type: entity_reference_label
+          settings:
+            link: false
+          group_column: target_id
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+          entity_type: acq_sku
+          entity_field: type
+          plugin_id: field
+        langcode:
+          id: langcode
+          table: acq_sku
+          field: langcode
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: Language
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          click_sort_column: value
+          type: language
+          settings:
+            link_to_entity: false
+            native_language: false
+          group_column: value
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+          entity_type: acq_sku
+          entity_field: langcode
+          plugin_id: field
+        changed:
+          id: changed
+          table: acq_sku
+          field: changed
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: 'Last modified'
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          click_sort_column: value
+          type: timestamp
+          settings:
+            date_format: short
+            custom_date_format: ''
+            timezone: ''
+          group_column: value
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+          entity_type: acq_sku
+          entity_field: changed
+          plugin_id: field
+        edit_acq_sku:
+          id: edit_acq_sku
+          table: acq_sku
+          field: edit_acq_sku
+          relationship: none
+          group_type: group
+          admin_label: ''
+          label: Action
+          exclude: false
+          alter:
+            alter_text: false
+            text: ''
+            make_link: false
+            path: ''
+            absolute: false
+            external: false
+            replace_spaces: false
+            path_case: none
+            trim_whitespace: false
+            alt: ''
+            rel: ''
+            link_class: ''
+            prefix: ''
+            suffix: ''
+            target: ''
+            nl2br: false
+            max_length: 0
+            word_boundary: true
+            ellipsis: true
+            more_link: false
+            more_link_text: ''
+            more_link_path: ''
+            strip_tags: false
+            trim: false
+            preserve_tags: ''
+            html: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_empty: false
+          empty_zero: false
+          hide_alter_empty: true
+          text: edit
+          entity_type: acq_sku
+          plugin_id: entity_link_edit
+      filters:
+        sku:
+          id: sku
+          table: acq_sku
+          field: sku
+          relationship: none
+          group_type: group
+          admin_label: ''
+          operator: contains
+          value: ''
+          group: 1
+          exposed: true
+          expose:
+            operator_id: sku_op
+            label: SKU
+            description: ''
+            use_operator: false
+            operator: sku_op
+            identifier: sku
+            required: false
+            remember: false
+            multiple: false
+            remember_roles:
+              authenticated: authenticated
+              anonymous: '0'
+              administrator: '0'
+              advanced_page_creator: '0'
+              advanced_page_reviewer: '0'
+              media_creator: '0'
+              acq_product_creator: '0'
+              media_manager: '0'
+              acq_product_reviewer: '0'
+              acq_promotion_creator: '0'
+              acq_promotion_reviewer: '0'
+              department_page_creator: '0'
+              department_page_reviewer: '0'
+              webmaster: '0'
+              reviewer: '0'
+              store_creator: '0'
+              store_reviewer: '0'
+          is_grouped: false
+          group_info:
+            label: ''
+            description: ''
+            identifier: ''
+            optional: true
+            widget: select
+            multiple: false
+            remember: false
+            default_group: All
+            default_group_multiple: {  }
+            group_items: {  }
+          entity_type: acq_sku
+          entity_field: sku
+          plugin_id: string
+        name:
+          id: name
+          table: acq_sku
+          field: name
+          relationship: none
+          group_type: group
+          admin_label: ''
+          operator: contains
+          value: ''
+          group: 1
+          exposed: true
+          expose:
+            operator_id: name_op
+            label: Name
+            description: ''
+            use_operator: false
+            operator: name_op
+            identifier: name
+            required: false
+            remember: false
+            multiple: false
+            remember_roles:
+              authenticated: authenticated
+              anonymous: '0'
+              administrator: '0'
+              advanced_page_creator: '0'
+              advanced_page_reviewer: '0'
+              media_creator: '0'
+              acq_product_creator: '0'
+              media_manager: '0'
+              acq_product_reviewer: '0'
+              acq_promotion_creator: '0'
+              acq_promotion_reviewer: '0'
+              department_page_creator: '0'
+              department_page_reviewer: '0'
+              webmaster: '0'
+              reviewer: '0'
+              store_creator: '0'
+              store_reviewer: '0'
+          is_grouped: false
+          group_info:
+            label: ''
+            description: ''
+            identifier: ''
+            optional: true
+            widget: select
+            multiple: false
+            remember: false
+            default_group: All
+            default_group_multiple: {  }
+            group_items: {  }
+          entity_type: acq_sku
+          entity_field: name
+          plugin_id: string
+        type:
+          id: type
+          table: acq_sku
+          field: type
+          relationship: none
+          group_type: group
+          admin_label: ''
+          operator: in
+          value: {  }
+          group: 1
+          exposed: true
+          expose:
+            operator_id: type_op
+            label: 'SKU Type'
+            description: ''
+            use_operator: false
+            operator: type_op
+            identifier: type
+            required: false
+            remember: false
+            multiple: false
+            remember_roles:
+              authenticated: authenticated
+              anonymous: '0'
+              administrator: '0'
+              advanced_page_creator: '0'
+              advanced_page_reviewer: '0'
+              media_creator: '0'
+              acq_product_creator: '0'
+              media_manager: '0'
+              acq_product_reviewer: '0'
+              acq_promotion_creator: '0'
+              acq_promotion_reviewer: '0'
+              department_page_creator: '0'
+              department_page_reviewer: '0'
+              webmaster: '0'
+              reviewer: '0'
+              store_creator: '0'
+              store_reviewer: '0'
+            reduce: false
+            argument: ''
+          is_grouped: false
+          group_info:
+            label: ''
+            description: ''
+            identifier: ''
+            optional: true
+            widget: select
+            multiple: false
+            remember: false
+            default_group: All
+            default_group_multiple: {  }
+            group_items: {  }
+          entity_type: acq_sku
+          entity_field: type
+          plugin_id: bundle
+        langcode:
+          id: langcode
+          table: acq_sku
+          field: langcode
+          relationship: none
+          group_type: group
+          admin_label: ''
+          operator: in
+          value: {  }
+          group: 1
+          exposed: true
+          expose:
+            operator_id: langcode_op
+            label: 'Language code'
+            description: ''
+            use_operator: false
+            operator: langcode_op
+            identifier: langcode
+            required: false
+            remember: false
+            multiple: false
+            remember_roles:
+              authenticated: authenticated
+              anonymous: '0'
+              administrator: '0'
+              advanced_page_creator: '0'
+              advanced_page_reviewer: '0'
+              media_creator: '0'
+              acq_product_creator: '0'
+              media_manager: '0'
+              acq_product_reviewer: '0'
+              acq_promotion_creator: '0'
+              acq_promotion_reviewer: '0'
+              department_page_creator: '0'
+              department_page_reviewer: '0'
+              webmaster: '0'
+              reviewer: '0'
+              store_creator: '0'
+              store_reviewer: '0'
+            reduce: false
+          is_grouped: false
+          group_info:
+            label: ''
+            description: ''
+            identifier: ''
+            optional: true
+            widget: select
+            multiple: false
+            remember: false
+            default_group: All
+            default_group_multiple: {  }
+            group_items: {  }
+          entity_type: acq_sku
+          entity_field: langcode
+          plugin_id: language
+      sorts: {  }
+      title: 'Manage SKUs'
+      header: {  }
+      footer: {  }
+      empty: {  }
+      relationships: {  }
+      arguments: {  }
+      display_extenders: {  }
+      filter_groups:
+        operator: AND
+        groups:
+          1: AND
+    cache_metadata:
+      max-age: 0
+      contexts:
+        - 'languages:language_content'
+        - 'languages:language_interface'
+        - url
+        - url.query_args
+        - user.permissions
+      tags: {  }
+  page_1:
+    display_plugin: page
+    id: page_1
+    display_title: Page
+    position: 1
+    display_options:
+      display_extenders: {  }
+      path: admin/commerce/skus
+    cache_metadata:
+      max-age: 0
+      contexts:
+        - 'languages:language_content'
+        - 'languages:language_interface'
+        - url
+        - url.query_args
+        - user.permissions
+      tags: {  }
diff --git a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
index d59f4b6..80caaab 100644
--- a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
+++ b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
@@ -5,6 +5,7 @@
 use Drupal\Core\Form\FormInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\acq_sku\Entity\SKU;
+use Drupal\Core\Language\LanguageInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Core\Link;

@@ -132,11 +133,14 @@ public function cartName($sku, array $cart) {
   public function getParentSku(SKU $sku) {
     $query = \Drupal::database()->select('acq_sku', 'acq_sku');
     $query->addField('acq_sku', 'sku');
-    $query->join(
-      'acq_sku__field_configured_skus',
-      'child_sku', 'acq_sku.id = child_sku.entity_id'
-    );
+    $query->join('acq_sku__field_configured_skus', 'child_sku', 'acq_sku.id = child_sku.entity_id');
     $query->condition("child_sku.field_configured_skus_value", $sku->getSku());
+
+    if (\Drupal::languageManager()->isMultilingual()) {
+      $query->condition('acq_sku.langcode', $sku->get('langcode')->getString());
+      $query->condition('child_sku.langcode', $sku->get('langcode')->getString());
+    }
+
     $parent_sku = $query->execute()->fetchField();

     if (empty($parent_sku)) {
@@ -149,20 +153,49 @@ public function getParentSku(SKU $sku) {
   /**
    * {@inheritdoc}
    */
-  public function getDisplayNode(SKU $sku) {
-    if ($parent_sku = $this->getParentSku($sku)) {
-      $sku = $parent_sku;
+  public function getDisplayNode(SKU $sku, $check_parent = TRUE, $create_translation = FALSE) {
+    if ($check_parent) {
+      if ($parent_sku = $this->getParentSku($sku)) {
+        $sku = $parent_sku;
+      }
     }

-    $query = \Drupal::entityQuery('node')
-      ->condition('type', 'acq_product')
-      ->condition('field_skus', $sku->getSku())
-      ->range(0, 1);
+    $query = \Drupal::entityQuery('node');
+    $query->condition('type', 'acq_product');
+    $query->condition('field_skus', $sku->getSku());
+
+    $query->range(0, 1);

     $result = $query->execute();
+
+    if (empty($result)) {
+      return NULL;
+    }
+
     $nid = reset($result);
+    $node = Node::load($nid);
+
+    // Check language checks if site is in multilingual mode.
+    if (\Drupal::languageManager()->isMultilingual()) {
+      // If language of SKU and node are the same, we return the node.
+      if ($node->language()->getId() == $sku->get('langcode')->getString()) {
+        return $node;
+      }
+
+      // If node has translation, we return the translation.
+      if ($node->hasTranslation($sku->get('langcode')->getString())) {
+        return $node->getTranslation($sku->get('langcode')->getString());
+      }
+
+      // If translation not available and create_translation flag is true.
+      if ($create_translation && $sku->get('langcode')->getString() != LanguageInterface::LANGCODE_NOT_SPECIFIED) {
+        return $node->addTranslation($sku->get('langcode')->getString());
+      }
+
+      return NULL;
+    }

-    return Node::load($nid);
+    return $node;
   }

 }
diff --git a/modules/acq_sku/src/AcquiaCommerce/SKUPluginInterface.php b/modules/acq_sku/src/AcquiaCommerce/SKUPluginInterface.php
index 4800a9a..75783a8 100644
--- a/modules/acq_sku/src/AcquiaCommerce/SKUPluginInterface.php
+++ b/modules/acq_sku/src/AcquiaCommerce/SKUPluginInterface.php
@@ -90,10 +90,15 @@ public function cartName($sku, array $cart);
    *
    * @param \Drupal\acq_sku\Entity\SKU $sku
    *   The object of product.
+   * @param bool $check_parent
+   *   Flag to check for parent sku or not (for configurable products).
+   * @param bool $create_translation
+   *   Flag to create translation if node available and translation not
+   *   available. Used during sync.
    *
    * @return \Drupal\node\Entity\Node|null
    *   Return object of Node or null if not found.
    */
-  public function getDisplayNode(SKU $sku);
+  public function getDisplayNode(SKU $sku, $check_parent = TRUE, $create_translation = FALSE);

 }
diff --git a/modules/acq_sku/src/Entity/Controller/SKUListBuilder.php b/modules/acq_sku/src/Entity/Controller/SKUListBuilder.php
index a6cda66..f11d230 100644
--- a/modules/acq_sku/src/Entity/Controller/SKUListBuilder.php
+++ b/modules/acq_sku/src/Entity/Controller/SKUListBuilder.php
@@ -4,6 +4,7 @@

 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
+use Drupal\Core\Language\LanguageInterface;

 /**
  * Provides a list controller for acq_sku entity.
@@ -26,8 +27,16 @@ public function render() {
   public function buildHeader() {
     $header['id'] = $this->t('ID');
     $header['sku'] = $this->t('SKU');
-    $header['name'] = $this->t('Name');
-    $header['price'] = $this->t('Price');
+    $header['title'] = $this->t('Name');
+    $header['type'] = $this->t('Type');
+
+    if (\Drupal::languageManager()->isMultilingual()) {
+      $header['language_name'] = [
+        'data' => $this->t('Language'),
+        'class' => [RESPONSIVE_PRIORITY_LOW],
+      ];
+    }
+
     return $header + parent::buildHeader();
   }

@@ -37,8 +46,26 @@ public function buildHeader() {
   public function buildRow(EntityInterface $entity) {
     $row['id'] = $entity->id();
     $row['sku'] = $entity->getSKU();
-    $row['name'] = $entity->link();
-    $row['price'] = $entity->price->value;
+
+    $langcode = $entity->language()->getId();
+
+    $uri = $entity->toUrl();
+    $options = $uri->getOptions();
+    $options += ($langcode != LanguageInterface::LANGCODE_NOT_SPECIFIED && isset($languages[$langcode]) ? ['language' => $languages[$langcode]] : []);
+    $uri->setOptions($options);
+    $row['title']['data'] = [
+      '#type' => 'link',
+      '#title' => $entity->label(),
+      '#suffix' => ' ' . render($mark),
+      '#url' => $uri,
+    ];
+
+    $row['type'] = $entity->bundle();
+
+    $language_manager = \Drupal::languageManager();
+    if ($language_manager->isMultilingual()) {
+      $row['language_name'] = $language_manager->getLanguageName($langcode);
+    }

     return $row + parent::buildRow($entity);
   }
diff --git a/modules/acq_sku/src/Entity/SKU.php b/modules/acq_sku/src/Entity/SKU.php
index 94bac44..5f1b517 100644
--- a/modules/acq_sku/src/Entity/SKU.php
+++ b/modules/acq_sku/src/Entity/SKU.php
@@ -236,93 +236,49 @@ public function getPluginInstance() {
   }

   /**
-   * Query to get ids of given skus.
-   *
-   * @param array $sku
-   *   an Array of sku.
-   *
-   * @return array|int
-   *   The SKU ids.
-   */
-  public static function getSkuIds(array $sku) {
-    $query = \Drupal::entityQuery('acq_sku')->condition('sku', $sku, 'IN');
-    $ids = $query->execute();
-
-    return $ids;
-  }
-
-  /**
    * Loads a SKU Entity from SKU.
    *
    * @param string $sku
    *   SKU to load.
+   * @param string $langcode
+   *   Language code.
+   * @param bool $log_not_found
+   *   Log errors when store not found. Can be false during sync.
    *
    * @return \Drupal\acq_sku\Entity\SKU|null
    *   Found SKU
    */
-  public static function loadFromSku($sku) {
-    $ids = SKU::getSkuIds([$sku]);
-
-    if (count($ids) != 1) {
-      \Drupal::logger('acq_sku')->error(
-        'Duplicate product or non-existent SKU @sku found while loading.',
-        ['@sku' => $sku]
-      );
-      return NULL;
-    }
+  public static function loadFromSku($sku, $langcode = '', $log_not_found = TRUE) {
+    $query = \Drupal::entityQuery('acq_sku');
+    $query->condition('sku', $sku, 'IN');

-    $id = array_shift($ids);
-    $sku = SKU::load($id);
-
-    return $sku;
-  }
-
-  /**
-   * Get all the cross sell sku of given skus.
-   *
-   * @param array $sku
-   *   An array of sku.
-   *
-   * @return array
-   *   Return array of cross sell skus.
-   */
-  public static function getCrossSellSkus(array $sku) {
-    $ids = SKU::getSkuIds($sku);
-    $skus = SKU::loadMultiple($ids);
-
-    $crossskus = [];
-    foreach ($skus as $sku) {
-      $crosssell = $sku->getCrossSell();
-      foreach ($crosssell as $item) {
-        $crossskus[] = $item['value'];
+    if (\Drupal::languageManager()->isMultilingual()) {
+      if (empty($langcode)) {
+        $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
       }
+
+      $query->condition('langcode', $langcode);
     }

-    return $crossskus;
-  }
+    $ids = $query->execute();

-  /**
-   * Get all the up sell sku of given skus.
-   *
-   * @param array $sku
-   *   An array of sku.
-   *
-   * @return array
-   *   Return array of up sell skus.
-   */
-  public static function getUpSellSkus(array $sku) {
-    $ids = SKU::getSkuIds($sku);
-    $skus = SKU::loadMultiple($ids);
-
-    $upsellskus = [];
-    foreach ($skus as $sku) {
-      $upSell = $sku->getUpSell();
-      foreach ($upSell as $item) {
-        $upsellskus[] = $item['value'];
+    if (count($ids) == 0) {
+      // We don't log the error while doing sync.
+      if ($log_not_found) {
+        \Drupal::logger('acq_sku')->error('No SKU found for @sku.', ['@sku' => $sku]);
       }
+
+      return NULL;
+    }
+    // For multiple entries, we just log the error and continue with first one.
+    elseif (count($ids) > 1) {
+      \Drupal::logger('acq_sku')->error('Duplicate SKUs found while loading for @sku.', ['@sku' => $sku]);
     }

-    return $upsellskus;
+    $id = array_shift($ids);
+    $sku = SKU::load($id);
+
+    return $sku;
   }

   /**
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index 31f3696..fc54f5b 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -136,15 +136,15 @@ public function post(array $products = []) {
     $failed = 0;

     foreach ($products as $product) {
-      $display = NULL;
+      $langcode = acq_commerce_get_langcode_from_store_id($product['store_id']);

       if (!isset($product['type'])) {
         continue;
       }

-      $query = $this->queryFactory->get('acq_sku_type')
-        ->condition('id', $product['type'])
-        ->count();
+      $query = $this->queryFactory->get('acq_sku_type');
+      $query->condition('id', $product['type']);
+      $query->count();

       $has_bundle = $query->execute();

@@ -165,97 +165,38 @@ public function post(array $products = []) {
         continue;
       }

-      $query = $this->queryFactory->get('acq_sku')
-        ->condition('sku', $product['sku']);
-      $sku_ids = $query->execute();
-
-      if (count($sku_ids) > 1) {
-        $this->logger->error(
-          'Duplicate product SKU @sku found.',
-          ['@sku' => $product['sku']]
-        );
-        $failed++;
-        continue;
-      }
-
-      if (count($sku_ids) > 0) {
-        $sku_id = array_shift($sku_ids);
-        $sku = $em->load($sku_id);
-
-        if (!$sku->id()) {
-          $this->logger->error(
-            'Loading product SKU @sku failed.',
-            ['@sku' => $product['sku']]
-          );
-          $failed++;
-          continue;
-        }
-
-        // Load associated product display node.
-        $query = $this->queryFactory->get('node')
-          ->condition('type', 'acq_product')
-          ->condition('field_skus', $product['sku']);
-        $nids = $query->execute();
-
-        if (!count($nids)) {
-          if ($product['visibility'] == 1) {
-            $this->logger->info(
-              'Existing product SKU @sku has no display node, creating.',
-              ['@sku' => $product['sku']]
-            );
-
-            $display = $this->createDisplayNode($product);
-          }
-        }
-        else {
-          $this->updateNodeCategories($nids, $product);
-        }
-
-        $sku->name->value = $product['name'];
-        $sku->price->value = $product['price'];
-        $sku->special_price->value = $product['special_price'];
-        $sku->final_price->value = $product['final_price'];
-
-        $sku->attributes = $this->formatProductAttributes($product['attributes']);
-
-        $sku->media = serialize($product['extension']['media']);
-
-        $this->logger->info(
-          'Updating product SKU @sku.',
-          ['@sku' => $product['sku']]
-        );
-
+      if ($sku = SKU::loadFromSku($product['sku'], $langcode, FALSE)) {
+        $this->logger->info('Updating product SKU @sku.', ['@sku' => $product['sku']]);
         $updated++;
       }
       else {
+        /** @var \Drupal\acq_sku\Entity\SKU $sku */
         $sku = $em->create([
           'type' => $product['type'],
           'sku' => $product['sku'],
-          'name' => html_entity_decode($product['name']),
-          'price' => $product['price'],
-          'special_price' => $product['special_price'],
-          'final_price' => $product['final_price'],
-          'attributes' => $this->formatProductAttributes($product['attributes']),
-          'media' => serialize($product['extension']['media']),
         ]);

-        if ($product['visibility'] == 1) {
-          $display = $this->createDisplayNode($product);
+        if ($langcode) {
+          $sku->langcode = $langcode;
         }

-        $this->logger->info(
-          'Creating product SKU @sku.',
-          ['@sku' => $product['sku']]
-        );
+        $this->logger->info('Creating product SKU @sku.', ['@sku' => $product['sku']]);

         $created++;
       }

+      $sku->name->value = html_entity_decode($product['name']);
+      $sku->price->value = $product['price'];
+      $sku->special_price->value = $product['special_price'];
+      $sku->final_price->value = $product['final_price'];
+      $sku->attributes = $this->formatProductAttributes($product['attributes']);
+      $sku->media = serialize($product['extension']['media']);
+
       // Update the fields based on the values from attributes.
-      $this->updateAttributeFields($sku, $product['attributes']);
+      $this->updateFields('attributes', $sku, $product['attributes']);

       // Update the fields based on the values from extension.
-      $this->updateExtensionFields($sku, $product['extension']);
+      $this->updateFields('extension', $sku, $product['extension']);

       // Update upsell linked SKUs.
       $this->updateLinkedSkus('upsell', $sku, $product['linked']);
@@ -266,19 +207,44 @@ public function post(array $products = []) {
       // Update related linked SKUs.
       $this->updateLinkedSkus('related', $sku, $product['linked']);

-      $plugin_manager = \Drupal::service('plugin.manager.sku');
-      $plugin_definition = $plugin_manager->pluginFromSKU($sku);
-
-      if (!empty($plugin_definition)) {
-        $class = $plugin_definition['class'];
-        $plugin = new $class();
-        $plugin->processImport($sku, $product);
-      }
+      /** @var \Drupal\acq_sku\AcquiaCommerce\SKUPluginBase $plugin */
+      $plugin = $sku->getPluginInstance();
+      $plugin->processImport($sku, $product);

       $sku->save();

-      if ($display) {
-        $display->save();
+      if ($product['visibility'] == 1) {
+        $node = $plugin->getDisplayNode($sku, FALSE, TRUE);
+
+        if (empty($node)) {
+          $node = $this->createDisplayNode($product, $langcode);
+        }
+
+        $node->get('title')->setValue(html_entity_decode($product['name']));
+
+        $description = (isset($product['attributes']['description'])) ? $product['attributes']['description'] : '';
+        $node->get('body')->setValue([
+          'value' => $description,
+          'format' => 'rich_text',
+        ]);
+
+        $categories = (isset($product['categories'])) ? $product['categories'] : [];
+        $categories = $this->formatCategories($categories);
+        $node->field_category = $categories;
+
+        $node->setPublished(TRUE);
+
+        // Invoke the alter hook to allow all modules to update the node.
+        \Drupal::moduleHandler()->alter('acq_sku_product_node', $node, $product);
+
+        $node->save();
+      }
+      else {
+        if ($node = $plugin->getDisplayNode($sku, FALSE, FALSE)) {
+          $node->setPublished(FALSE);
+          $node->save;
+        }
+
       }
     }

@@ -299,32 +265,23 @@ public function post(array $products = []) {
    *
    * @param array $product
    *   Product data.
+   * @param string $langcode
+   *   Language code.
    *
    * @return \Drupal\Core\Entity\EntityInterface
    *   Node object.
    */
-  private function createDisplayNode(array $product) {
-
-    $description = (isset($product['attributes']['description'])) ? $product['attributes']['description'] : '';
-
-    $categories = (isset($product['categories'])) ? $product['categories'] : [];
-    $categories = $this->formatCategories($categories);
-
-    $node = $this->entityManager->getStorage('node')->create([
+  private function createDisplayNode(array $product, $langcode = '') {
+    $data = [
       'type' => 'acq_product',
-      'title' => html_entity_decode($product['name']),
-      'body' => [
-        'value' => $description,
-        'format' => 'rich_text',
-      ],
       'field_skus' => [$product['sku']],
-      'field_category' => $categories,
-    ]);
+    ];

-    $node->setPublished(FALSE);
+    if ($langcode) {
+      $data['langcode'] = $langcode;
+    }

-    // Invoke the alter hook to allow all modules to update the node.
-    \Drupal::moduleHandler()->alter('acq_sku_product_node', $node, $product);
+    $node = $this->entityManager->getStorage('node')->create($data);

     return $node;
   }
@@ -373,7 +330,7 @@ private function formatProductAttributes(array $attributes) {

       $formatted[] = [
         'key' => $name,
-        'value' => substr((string) $value, 0, 100),
+        'value' => utf8_encode(substr((string) $value, 0, 100)),
       ];
     }

@@ -381,34 +338,6 @@ private function formatProductAttributes(array $attributes) {
   }

   /**
-   * UpdateNodeCategories.
-   *
-   * Update the assigned categories for display nodes (by ID).
-   *
-   * @param int[] $nids
-   *   Node IDs.
-   * @param array $product
-   *   Product Data.
-   */
-  private function updateNodeCategories(array $nids, array $product) {
-
-    $categories = (isset($product['categories'])) ? $product['categories'] : [];
-    $categories = $this->formatCategories($categories);
-
-    foreach ($nids as $nid) {
-      $node = $this->entityManager->getStorage('node')->load($nid);
-      if ($node && $node->id()) {
-        $node->field_category = $categories;
-
-        // Invoke the alter hook to allow all modules to update the node.
-        \Drupal::moduleHandler()->alter('acq_sku_product_node', $node, $product);
-
-        $node->save();
-      }
-    }
-  }
-
-  /**
    * Update linked Skus.
    *
    * Prepare the field value for linked type (upsell, crosssell, etc.).
@@ -456,73 +385,23 @@ private function updateLinkedSkus($type, SKU &$sku, array $linked) {
    *
    * Update the fields based on the values from attributes.
    *
+   * @param string $parent
+   *   Fields to get from this parent will be processed.
    * @param Drupal\acq_sku\Entity\SKU $sku
    *   The root SKU.
-   * @param array $attributes
-   *   The attributes to set.
-   */
-  private function updateAttributeFields(SKU $sku, array $attributes) {
-    $additionalFields = \Drupal::config('acq_sku.base_field_additions')->getRawData();
-
-    // Loop through all the attributes available for this particular SKU.
-    foreach ($attributes as $key => $value) {
-      // Check if attribute is required by us.
-      if (isset($additionalFields[$key])) {
-        $field = $additionalFields[$key];
-
-        if ($field['parent'] != 'attributes') {
-          continue;
-        }
-
-        $field_key = 'attr_' . $key;
-
-        switch ($field['type']) {
-          case 'attribute':
-            $value = $field['cardinality'] != 1 ? explode(',', $value) : [$value];
-            foreach ($value as $index => $val) {
-              if ($term = $this->productOptionsManager->loadProductOptionByOptionId($key, $val)) {
-                $sku->{$field_key}->set($index, $term->getName());
-              }
-              else {
-                $sku->{$field_key}->set($index, $val);
-              }
-            }
-            break;
-
-          case 'string':
-            $value = $field['cardinality'] != 1 ? explode(',', $value) : $value;
-            $sku->{$field_key}->setValue($value);
-            break;
-
-          case 'text_long':
-            $value = isset($field['serialize']) ? serialize($value) : $value;
-            $sku->{$field_key}->setValue($value);
-            break;
-        }
-      }
-    }
-  }
-
-  /**
-   * Update extension fields.
-   *
-   * Update the fields based on the values from extension.
-   *
-   * @param \Drupal\acq_sku\Entity\SKU $sku
-   *   The root SKU.
-   * @param array $attributes
-   *   The attributes to set.
+   * @param array $values
+   *   The product attributes/extensions to get value from.
    */
-  private function updateExtensionFields(SKU $sku, array $attributes) {
+  private function updateFields($parent, SKU $sku, array $values) {
     $additionalFields = \Drupal::config('acq_sku.base_field_additions')->getRawData();

     // Loop through all the attributes available for this particular SKU.
-    foreach ($attributes as $key => $value) {
+    foreach ($values as $key => $value) {
       // Check if attribute is required by us.
       if (isset($additionalFields[$key])) {
         $field = $additionalFields[$key];

-        if ($field['parent'] != 'extension') {
+        if ($field['parent'] != $parent) {
           continue;
         }

diff --git a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
index 80caaab..0b4edd3 100644
--- a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
+++ b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
@@ -134,11 +134,10 @@ public function getParentSku(SKU $sku) {
     $query = \Drupal::database()->select('acq_sku', 'acq_sku');
     $query->addField('acq_sku', 'sku');
     $query->join('acq_sku__field_configured_skus', 'child_sku', 'acq_sku.id = child_sku.entity_id');
-    $query->condition("child_sku.field_configured_skus_value", $sku->getSku());
+    $query->condition('child_sku.field_configured_skus_value', $sku->getSku());
 
     if (\Drupal::languageManager()->isMultilingual()) {
       $query->condition('acq_sku.langcode', $sku->get('langcode')->getString());
-      $query->condition('child_sku.langcode', $sku->get('langcode')->getString());
     }
 
     $parent_sku = $query->execute()->fetchField();
diff --git a/modules/acq_sku/config/install/views.view.manage_skus.yml b/modules/acq_sku/config/install/views.view.manage_skus.yml
index dcca7fb..a1eac72 100644
--- a/modules/acq_sku/config/install/views.view.manage_skus.yml
+++ b/modules/acq_sku/config/install/views.view.manage_skus.yml
@@ -9,7 +9,7 @@ label: 'Manage SKUs'
 module: views
 description: ''
 tag: ''
-base_table: acq_sku
+base_table: acq_sku_field_data
 base_field: id
 core: 8.x
 display:
@@ -77,27 +77,27 @@ display:
           summary: ''
           description: ''
           columns:
-            sku: sku
             name: name
+            sku: sku
             type: type
             langcode: langcode
             changed: changed
-            edit_acq_sku: edit_acq_sku
+            operations: operations
           info:
-            sku:
+            name:
               sortable: false
               default_sort_order: asc
               align: ''
               separator: ''
               empty_column: false
-              responsive: ''
-            name:
+              responsive: priority-medium
+            sku:
               sortable: false
               default_sort_order: asc
               align: ''
               separator: ''
               empty_column: false
-              responsive: priority-medium
+              responsive: ''
             type:
               sortable: false
               default_sort_order: asc
@@ -111,34 +111,32 @@ display:
               align: ''
               separator: ''
               empty_column: false
-              responsive: priority-low
+              responsive: ''
             changed:
               sortable: false
               default_sort_order: asc
               align: ''
               separator: ''
               empty_column: false
-              responsive: priority-medium
-            edit_acq_sku:
-              sortable: false
-              default_sort_order: asc
+              responsive: priority-low
+            operations:
               align: ''
               separator: ''
               empty_column: false
               responsive: ''
-          default: changed
+          default: '-1'
           empty_table: false
       row:
         type: fields
       fields:
-        sku:
-          id: sku
-          table: acq_sku
-          field: sku
+        name:
+          id: name
+          table: acq_sku_field_data
+          field: name
           relationship: none
           group_type: group
           admin_label: ''
-          label: SKU
+          label: Name
           exclude: false
           alter:
             alter_text: false
@@ -182,7 +180,7 @@ display:
           click_sort_column: value
           type: string
           settings:
-            link_to_entity: false
+            link_to_entity: true
           group_column: value
           group_columns: {  }
           group_rows: true
@@ -193,17 +191,17 @@ display:
           multi_type: separator
           separator: ', '
           field_api_classes: false
-          entity_type: acq_sku
-          entity_field: sku
+          entity_type: null
+          entity_field: name
           plugin_id: field
-        name:
-          id: name
-          table: acq_sku
-          field: name
+        sku:
+          id: sku
+          table: acq_sku_field_data
+          field: sku
           relationship: none
           group_type: group
           admin_label: ''
-          label: Name
+          label: SKU
           exclude: false
           alter:
             alter_text: false
@@ -247,7 +245,7 @@ display:
           click_sort_column: value
           type: string
           settings:
-            link_to_entity: true
+            link_to_entity: false
           group_column: value
           group_columns: {  }
           group_rows: true
@@ -258,17 +256,17 @@ display:
           multi_type: separator
           separator: ', '
           field_api_classes: false
-          entity_type: null
-          entity_field: name
+          entity_type: acq_sku
+          entity_field: sku
           plugin_id: field
         type:
           id: type
-          table: acq_sku
+          table: acq_sku_field_data
           field: type
           relationship: none
           group_type: group
           admin_label: ''
-          label: 'SKU Type'
+          label: 'SKU type'
           exclude: false
           alter:
             alter_text: false
@@ -328,12 +326,12 @@ display:
           plugin_id: field
         langcode:
           id: langcode
-          table: acq_sku
+          table: acq_sku_field_data
           field: langcode
           relationship: none
           group_type: group
           admin_label: ''
-          label: Language
+          label: 'Translation language'
           exclude: false
           alter:
             alter_text: false
@@ -378,7 +376,7 @@ display:
           type: language
           settings:
             link_to_entity: false
-            native_language: false
+            native_language: true
           group_column: value
           group_columns: {  }
           group_rows: true
@@ -394,7 +392,7 @@ display:
           plugin_id: field
         changed:
           id: changed
-          table: acq_sku
+          table: acq_sku_field_data
           field: changed
           relationship: none
           group_type: group
@@ -443,7 +441,7 @@ display:
           click_sort_column: value
           type: timestamp
           settings:
-            date_format: short
+            date_format: medium
             custom_date_format: ''
             timezone: ''
           group_column: value
@@ -459,14 +457,14 @@ display:
           entity_type: acq_sku
           entity_field: changed
           plugin_id: field
-        edit_acq_sku:
-          id: edit_acq_sku
+        operations:
+          id: operations
           table: acq_sku
-          field: edit_acq_sku
+          field: operations
           relationship: none
           group_type: group
           admin_label: ''
-          label: Action
+          label: Operations
           exclude: false
           alter:
             alter_text: false
@@ -507,14 +505,14 @@ display:
           hide_empty: false
           empty_zero: false
           hide_alter_empty: true
-          text: edit
+          destination: true
           entity_type: acq_sku
-          plugin_id: entity_link_edit
+          plugin_id: entity_operations
       filters:
-        sku:
-          id: sku
-          table: acq_sku
-          field: sku
+        name:
+          id: name
+          table: acq_sku_field_data
+          field: name
           relationship: none
           group_type: group
           admin_label: ''
@@ -523,12 +521,12 @@ display:
           group: 1
           exposed: true
           expose:
-            operator_id: sku_op
-            label: SKU
+            operator_id: name_op
+            label: Name
             description: ''
             use_operator: false
-            operator: sku_op
-            identifier: sku
+            operator: name_op
+            identifier: name
             required: false
             remember: false
             multiple: false
@@ -563,12 +561,12 @@ display:
             default_group_multiple: {  }
             group_items: {  }
           entity_type: acq_sku
-          entity_field: sku
+          entity_field: name
           plugin_id: string
-        name:
-          id: name
-          table: acq_sku
-          field: name
+        sku:
+          id: sku
+          table: acq_sku_field_data
+          field: sku
           relationship: none
           group_type: group
           admin_label: ''
@@ -577,12 +575,12 @@ display:
           group: 1
           exposed: true
           expose:
-            operator_id: name_op
-            label: Name
+            operator_id: sku_op
+            label: SKU
             description: ''
             use_operator: false
-            operator: name_op
-            identifier: name
+            operator: sku_op
+            identifier: sku
             required: false
             remember: false
             multiple: false
@@ -617,11 +615,11 @@ display:
             default_group_multiple: {  }
             group_items: {  }
           entity_type: acq_sku
-          entity_field: name
+          entity_field: sku
           plugin_id: string
         type:
           id: type
-          table: acq_sku
+          table: acq_sku_field_data
           field: type
           relationship: none
           group_type: group
@@ -632,7 +630,7 @@ display:
           exposed: true
           expose:
             operator_id: type_op
-            label: 'SKU Type'
+            label: 'SKU type'
             description: ''
             use_operator: false
             operator: type_op
@@ -677,7 +675,7 @@ display:
           plugin_id: bundle
         langcode:
           id: langcode
-          table: acq_sku
+          table: acq_sku_field_data
           field: langcode
           relationship: none
           group_type: group
@@ -688,7 +686,7 @@ display:
           exposed: true
           expose:
             operator_id: langcode_op
-            label: 'Language code'
+            label: 'Translation language'
             description: ''
             use_operator: false
             operator: langcode_op
@@ -730,7 +728,22 @@ display:
           entity_type: acq_sku
           entity_field: langcode
           plugin_id: language
-      sorts: {  }
+      sorts:
+        changed:
+          id: changed
+          table: acq_sku_field_data
+          field: changed
+          relationship: none
+          group_type: group
+          admin_label: ''
+          order: DESC
+          exposed: false
+          expose:
+            label: ''
+          granularity: second
+          entity_type: acq_sku
+          entity_field: changed
+          plugin_id: date
       title: 'Manage SKUs'
       header: {  }
       footer: {  }
@@ -738,10 +751,6 @@ display:
       relationships: {  }
       arguments: {  }
       display_extenders: {  }
-      filter_groups:
-        operator: AND
-        groups:
-          1: AND
     cache_metadata:
       max-age: 0
       contexts:
diff --git a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
index 0b4edd3..a513e6c 100644
--- a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
+++ b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
@@ -136,17 +136,13 @@ public function getParentSku(SKU $sku) {
     $query->join('acq_sku__field_configured_skus', 'child_sku', 'acq_sku.id = child_sku.entity_id');
     $query->condition('child_sku.field_configured_skus_value', $sku->getSku());
 
-    if (\Drupal::languageManager()->isMultilingual()) {
-      $query->condition('acq_sku.langcode', $sku->get('langcode')->getString());
-    }
-
     $parent_sku = $query->execute()->fetchField();
 
     if (empty($parent_sku)) {
       return NULL;
     }
 
-    return SKU::loadFromSku($parent_sku);
+    return SKU::loadFromSku($parent_sku, $sku->language()->getId());
   }
 
   /**
@@ -177,21 +173,21 @@ public function getDisplayNode(SKU $sku, $check_parent = TRUE, $create_translati
     // Check language checks if site is in multilingual mode.
     if (\Drupal::languageManager()->isMultilingual()) {
       // If language of SKU and node are the same, we return the node.
-      if ($node->language()->getId() == $sku->get('langcode')->getString()) {
+      if ($node->language()->getId() == $sku->language()->getId()) {
         return $node;
       }
 
       // If node has translation, we return the translation.
-      if ($node->hasTranslation($sku->get('langcode')->getString())) {
-        return $node->getTranslation($sku->get('langcode')->getString());
+      if ($node->hasTranslation($sku->language()->getId())) {
+        return $node->getTranslation($sku->language()->getId());
       }
 
       // If translation not available and create_translation flag is true.
-      if ($create_translation && $sku->get('langcode')->getString() != LanguageInterface::LANGCODE_NOT_SPECIFIED) {
-        return $node->addTranslation($sku->get('langcode')->getString());
+      if ($create_translation) {
+        return $node->addTranslation($sku->language()->getId());
       }
 
-      return NULL;
+      throw new \Exception(new FormattableMarkup('Node translation not found of @sku for @langcode', ['@sku' => $sku, '@langcode' => $sku->language()->getId()]), 404);
     }
 
     return $node;
diff --git a/modules/acq_sku/src/Entity/SKU.php b/modules/acq_sku/src/Entity/SKU.php
index 5f1b517..ea64e82 100644
--- a/modules/acq_sku/src/Entity/SKU.php
+++ b/modules/acq_sku/src/Entity/SKU.php
@@ -30,13 +30,17 @@
  *     "access" = "Drupal\acq_sku\SKUAccessControlHandler",
  *   },
  *   base_table = "acq_sku",
+ *   data_table = "acq_sku_field_data",
+ *   translatable = TRUE,
+ *   common_reference_target = TRUE,
  *   admin_permission = "administer commerce sku entity",
  *   fieldable = TRUE,
  *   entity_keys = {
  *     "id" = "id",
  *     "label" = "name",
- *     "uuid" = "uuid",
- *     "bundle" = "type"
+ *     "bundle" = "type",
+ *     "langcode" = "langcode",
+ *     "uuid" = "uuid"
  *   },
  *   bundle_entity_type = "acq_sku_type",
  *   bundle_label = @Translation("SKU type"),
@@ -244,25 +248,21 @@ public function getPluginInstance() {
    *   Language code.
    * @param bool $log_not_found
    *   Log errors when store not found. Can be false during sync.
+   * @param bool $create_translation
+   *   Create translation and return if entity available but translation is not.
    *
    * @return \Drupal\acq_sku\Entity\SKU|null
    *   Found SKU
    */
-  public static function loadFromSku($sku, $langcode = '', $log_not_found = TRUE) {
-    $query = \Drupal::entityQuery('acq_sku');
-    $query->condition('sku', $sku, 'IN');
-
-    if (\Drupal::languageManager()->isMultilingual()) {
-      if (empty($langcode)) {
-        $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
-      }
-
-      $query->condition('langcode', $langcode);
+  public static function loadFromSku($sku, $langcode = '', $log_not_found = TRUE, $create_translation = FALSE) {
+    if (empty($langcode)) {
+      $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
     }
 
-    $ids = $query->execute();
+    $storage = \Drupal::entityTypeManager()->getStorage('acq_sku');
+    $skus = $storage->loadByProperties(['sku' => $sku]);
 
-    if (count($ids) == 0) {
+    if (count($skus) == 0) {
       // We don't log the error while doing sync.
       if ($log_not_found) {
         \Drupal::logger('acq_sku')->error('No SKU found for @sku.', ['@sku' => $sku]);
@@ -271,14 +271,25 @@ public static function loadFromSku($sku, $langcode = '', $log_not_found = TRUE)
       return NULL;
     }
     // For multiple entries, we just log the error and continue with first one.
-    elseif (count($ids) > 1) {
+    elseif (count($skus) > 1) {
       \Drupal::logger('acq_sku')->error('Duplicate SKUs found while loading for @sku.', ['@sku' => $sku]);
     }
 
-    $id = array_shift($ids);
-    $sku = SKU::load($id);
+    $sku_entity = array_shift($skus);
+
+    if (\Drupal::languageManager()->isMultilingual()) {
+      if ($sku_entity->hasTranslation($langcode)) {
+        $sku_entity = $sku_entity->getTranslation($langcode);
+      }
+      elseif ($create_translation) {
+        $sku_entity = $sku_entity->addTranslation($langcode, ['sku' => $sku]);
+      }
+      else {
+        throw new \Exception(new FormattableMarkup('SKU translation not found of @sku for @langcode', ['@sku' => $sku, '@langcode' => $langcode]), 404);
+      }
+    }
 
-    return $sku;
+    return $sku_entity;
   }
 
   /**
@@ -370,25 +381,12 @@ public function setOwner(UserInterface $account) {
    * in the GUI. The behaviour of the widgets used can be determined here.
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    $fields['type'] = BaseFieldDefinition::create('entity_reference')
-      ->setLabel(t('SKU Type'))
-      ->setDescription(t('The SKU type.'))
-      ->setSetting('target_type', 'acq_sku_type')
-      ->setReadOnly(TRUE);
-
-    $fields['id'] = BaseFieldDefinition::create('integer')
-      ->setLabel(t('ID'))
-      ->setDescription(t('The ID of the SKU entity.'))
-      ->setReadOnly(TRUE);
-
-    $fields['uuid'] = BaseFieldDefinition::create('uuid')
-      ->setLabel(t('UUID'))
-      ->setDescription(t('The UUID of the SKU entity.'))
-      ->setReadOnly(TRUE);
+    $fields = parent::baseFieldDefinitions($entity_type);
 
     $fields['name'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Name'))
       ->setDescription(t("The SKU's human-friendly name."))
+      ->setTranslatable(TRUE)
       ->setSettings([
         'default_value' => '',
         'max_length' => 255,
@@ -409,6 +407,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['sku'] = BaseFieldDefinition::create('string')
       ->setLabel(t('SKU'))
       ->setDescription(t('The SKU.'))
+      ->setTranslatable(TRUE)
       ->setRequired(TRUE)
       ->setSettings([
         'default_value' => '',
@@ -430,6 +429,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['price'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Display Price'))
       ->setDescription(t('Display Price of this SKU.'))
+      ->setTranslatable(TRUE)
       ->setDisplayOptions('view', [
         'label' => 'above',
         'type' => 'string',
@@ -445,18 +445,21 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['special_price'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Special Price'))
       ->setDescription(t('Special Price of this SKU.'))
+      ->setTranslatable(TRUE)
       ->setDisplayConfigurable('form', TRUE)
       ->setDisplayConfigurable('view', TRUE);
 
     $fields['final_price'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Final Price'))
       ->setDescription(t('Final Price of this SKU.'))
+      ->setTranslatable(TRUE)
       ->setDisplayConfigurable('form', TRUE)
       ->setDisplayConfigurable('view', TRUE);
 
     $fields['crosssell'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Cross sell SKU'))
       ->setDescription(t('Reference to all Cross sell SKUs.'))
+      ->setTranslatable(TRUE)
       ->setDisplayOptions('form', [
         'type' => 'string_textfield',
         'weight' => 5,
@@ -467,6 +470,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['upsell'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Up sell SKU'))
       ->setDescription(t('Reference to all up sell SKUs.'))
+      ->setTranslatable(TRUE)
       ->setDisplayOptions('form', [
         'type' => 'string_textfield',
         'weight' => 6,
@@ -477,6 +481,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['related'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Related SKU'))
       ->setDescription(t('Reference to all related SKUs.'))
+      ->setTranslatable(TRUE)
       ->setDisplayOptions('form', [
         'type' => 'string_textfield',
         'weight' => 7,
@@ -487,6 +492,7 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['image'] = BaseFieldDefinition::create('image')
       ->setLabel(t('Image'))
       ->setDescription(t('Product image'))
+      ->setTranslatable(TRUE)
       ->setDisplayOptions('view', [
         'label' => 'hidden',
         'type' => 'image',
@@ -502,27 +508,27 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
     $fields['media'] = BaseFieldDefinition::create('text_long')
       ->setLabel(t('Media'))
       ->setDescription(t('Store all the media files info.'))
+      ->setTranslatable(TRUE)
       ->setDisplayConfigurable('form', TRUE)
       ->setDisplayConfigurable('view', TRUE);
 
     $fields['attributes'] = BaseFieldDefinition::create('key_value')
       ->setLabel(t('Attributes'))
       ->setDescription(t('Non-Drupal native product data.'))
+      ->setTranslatable(TRUE)
       ->setCardinality(-1)
       ->setDisplayConfigurable('form', TRUE)
       ->setDisplayConfigurable('view', TRUE);
 
-    $fields['langcode'] = BaseFieldDefinition::create('language')
-      ->setLabel(t('Language code'))
-      ->setDescription(t('The language code of Product entity.'));
-
     $fields['created'] = BaseFieldDefinition::create('created')
       ->setLabel(t('Created'))
-      ->setDescription(t('The time that the entity was created.'));
+      ->setDescription(t('The time that the entity was created.'))
+      ->setTranslatable(TRUE);
 
     $fields['changed'] = BaseFieldDefinition::create('changed')
       ->setLabel(t('Changed'))
-      ->setDescription(t('The time that the entity was last edited.'));
+      ->setDescription(t('The time that the entity was last edited.'))
+      ->setTranslatable(TRUE);
 
     // Get all the fields added by other modules and add them as base fields.
     $additionalFields = \Drupal::config('acq_sku.base_field_additions')->getRawData();
@@ -591,6 +597,8 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
         $field_info['description'] = empty($field_info['description']) ? 1 : $field_info['description'];
         $field->setDescription($field_info['description']);
 
+        $field->setTranslatable(TRUE);
+
         // Update cardinality with default value if empty.
         $field_info['cardinality'] = empty($field_info['cardinality']) ? 1 : $field_info['cardinality'];
         $field->setCardinality($field_info['cardinality']);
diff --git a/modules/acq_sku/src/Plugin/Field/FieldType/SKUFieldType.php b/modules/acq_sku/src/Plugin/Field/FieldType/SKUFieldType.php
index cdac69d..ec57e8b 100644
--- a/modules/acq_sku/src/Plugin/Field/FieldType/SKUFieldType.php
+++ b/modules/acq_sku/src/Plugin/Field/FieldType/SKUFieldType.php
@@ -148,7 +148,7 @@ public function isEmpty() {
   public function get($property_name) {
     // Since we are doing reference in custom way, we load the value here.
     if ($property_name === 'entity' && !isset($this->values[$property_name])) {
-      $value = $this->values[$property_name] = SKU::loadFromSku($this->values['value']);
+      $value = $this->values[$property_name] = SKU::loadFromSku($this->values['value'], $this->getLangcode());
       $this->properties[$property_name] = $this->getTypedDataManager()->getPropertyInstance($this, $property_name, $value);
     }
 
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index fc54f5b..9a95af3 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -165,7 +165,7 @@ public function post(array $products = []) {
         continue;
       }
 
-      if ($sku = SKU::loadFromSku($product['sku'], $langcode, FALSE)) {
+      if ($sku = SKU::loadFromSku($product['sku'], $langcode, FALSE, TRUE)) {
         $this->logger->info('Updating product SKU @sku.', ['@sku' => $product['sku']]);
         $updated++;
       }
@@ -174,12 +174,9 @@ public function post(array $products = []) {
         $sku = $em->create([
           'type' => $product['type'],
           'sku' => $product['sku'],
+          'langcode' => $langcode,
         ]);
 
-        if ($langcode) {
-          $sku->langcode = $langcode;
-        }
-
         $this->logger->info('Creating product SKU @sku.', ['@sku' => $product['sku']]);
 
         $created++;
