diff --git a/modules/acq_sku/src/ConductorCategoryManager.php b/modules/acq_sku/src/ConductorCategoryManager.php
index 94e14bebf..abc4c127b 100644
--- a/modules/acq_sku/src/ConductorCategoryManager.php
+++ b/modules/acq_sku/src/ConductorCategoryManager.php
@@ -138,6 +138,18 @@ public function synchronizeTreeOffline($vocabulary, array $categories) {
    * {@inheritdoc}
    */
   public function synchronizeCategory($vocabulary, array $categories) {
+    // Increase timeout as we will be using locks.
+    set_time_limit(600);
+
+    $lock = \Drupal::lock();
+
+    // Acquire lock to ensure parallel processes are executed one by one.
+    do {
+      // We should be done in 120 seconds max, categories are always pushed
+      // one by one.
+      $synchronizeCategoryLock = $lock->acquire('synchronizeCategory', 120);
+    } while (!$synchronizeCategoryLock);
+
     $this->resetResults();
     $this->loadVocabulary($vocabulary);
 
@@ -180,6 +192,9 @@ public function synchronizeCategory($vocabulary, array $categories) {
     // Recurse the category tree and create / update nodes.
     $this->syncCategory([$categories], $parent);
 
+    // Release the lock.
+    $lock->release('synchronizeCategory');
+
     return ($this->results);
   }
 
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index a8d4e394c..a9763fbf0 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -129,6 +129,18 @@ public static function create(ContainerInterface $container, array $configuratio
    *   HTTP Response object.
    */
   public function post(array $products = []) {
+    // Increase timeout as we will be using locks.
+    set_time_limit(600);
+
+    $lock = \Drupal::lock();
+
+    // Acquire lock to ensure parallel processes are executed one by one.
+    do {
+      // We should be done in 120 seconds max, products are always pushed
+      // in batches.
+      $synchronizeProductsLock = $lock->acquire('synchronizeProducts', 120);
+    } while (!$synchronizeProductsLock);
+
     $em = $this->entityManager->getStorage('acq_sku');
     $created = 0;
     $updated = 0;
@@ -302,6 +314,9 @@ public function post(array $products = []) {
       }
     }
 
+    // Release the lock.
+    $lock->release('synchronizeProducts');
+
     if (isset($fps)) {
       foreach ($fps as $fp) {
         fclose($fp);
diff --git a/modules/acq_sku/src/ConductorCategoryManager.php b/modules/acq_sku/src/ConductorCategoryManager.php
index abc4c127b..e5ec40791 100644
--- a/modules/acq_sku/src/ConductorCategoryManager.php
+++ b/modules/acq_sku/src/ConductorCategoryManager.php
@@ -138,18 +138,6 @@ public function synchronizeTreeOffline($vocabulary, array $categories) {
    * {@inheritdoc}
    */
   public function synchronizeCategory($vocabulary, array $categories) {
-    // Increase timeout as we will be using locks.
-    set_time_limit(600);
-
-    $lock = \Drupal::lock();
-
-    // Acquire lock to ensure parallel processes are executed one by one.
-    do {
-      // We should be done in 120 seconds max, categories are always pushed
-      // one by one.
-      $synchronizeCategoryLock = $lock->acquire('synchronizeCategory', 120);
-    } while (!$synchronizeCategoryLock);
-
     $this->resetResults();
     $this->loadVocabulary($vocabulary);
 
@@ -192,9 +180,6 @@ public function synchronizeCategory($vocabulary, array $categories) {
     // Recurse the category tree and create / update nodes.
     $this->syncCategory([$categories], $parent);
 
-    // Release the lock.
-    $lock->release('synchronizeCategory');
-
     return ($this->results);
   }
 
@@ -265,6 +250,10 @@ private function resetResults() {
    *   Parent Category.
    */
   private function syncCategory(array $categories, $parent = NULL) {
+    // Increase timeout as we will be using locks.
+    set_time_limit(600);
+
+    $lock = \Drupal::lock();
 
     // Remove top level item (Default Category) from the categories, if its set
     // in configuration and category is with no parent.
@@ -287,6 +276,14 @@ private function syncCategory(array $categories, $parent = NULL) {
         continue;
       }
 
+      $lock_key = 'syncCategory' . $category['category_id'];
+
+      // Acquire lock to ensure parallel processes are executed one by one.
+      do {
+        $lock_acquired = $lock->acquire($lock_key);
+      } while (!$lock_acquired);
+
+
       $parent_data = ($parent) ? [$parent->id()] : [0];
       $position = (isset($category['position'])) ? (int) $category['position'] : 1;
 
@@ -363,6 +360,9 @@ private function syncCategory(array $categories, $parent = NULL) {
 
       $term->save();
 
+      // Release the lock.
+      $lock->release($lock_key);
+
       // Recurse to children categories.
       $childCats = (isset($category['children'])) ? $category['children'] : [];
       $this->syncCategory($childCats, $term);
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index a9763fbf0..662cfa343 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -134,13 +134,6 @@ public function post(array $products = []) {
 
     $lock = \Drupal::lock();
 
-    // Acquire lock to ensure parallel processes are executed one by one.
-    do {
-      // We should be done in 120 seconds max, products are always pushed
-      // in batches.
-      $synchronizeProductsLock = $lock->acquire('synchronizeProducts', 120);
-    } while (!$synchronizeProductsLock);
-
     $em = $this->entityManager->getStorage('acq_sku');
     $created = 0;
     $updated = 0;
@@ -195,6 +188,13 @@ public function post(array $products = []) {
         continue;
       }
 
+      $lock_key = 'synchronizeProduct' . $product['sku'];
+
+      // Acquire lock to ensure parallel processes are executed one by one.
+      do {
+        $lock_acquired = $lock->acquire($lock_key);
+      } while (!$lock_acquired);
+
       if ($sku = SKU::loadFromSku($product['sku'], $langcode, FALSE, TRUE)) {
         if ($product['status'] != 1) {
           $this->logger->info('Removing disabled SKU from system: @sku.', ['@sku' => $product['sku']]);
@@ -312,10 +312,10 @@ public function post(array $products = []) {
           // Do nothing, we may not have the node available in system.
         }
       }
-    }
 
-    // Release the lock.
-    $lock->release('synchronizeProducts');
+      // Release the lock.
+      $lock->release($lock_key);
+    }
 
     if (isset($fps)) {
       foreach ($fps as $fp) {
diff --git a/modules/acq_sku/src/ConductorCategoryManager.php b/modules/acq_sku/src/ConductorCategoryManager.php
index e5ec40791..05cdc38ab 100644
--- a/modules/acq_sku/src/ConductorCategoryManager.php
+++ b/modules/acq_sku/src/ConductorCategoryManager.php
@@ -250,9 +250,6 @@ private function resetResults() {
    *   Parent Category.
    */
   private function syncCategory(array $categories, $parent = NULL) {
-    // Increase timeout as we will be using locks.
-    set_time_limit(600);
-
     $lock = \Drupal::lock();
 
     // Remove top level item (Default Category) from the categories, if its set
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index 662cfa343..3e84ea6db 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -129,9 +129,6 @@ public static function create(ContainerInterface $container, array $configuratio
    *   HTTP Response object.
    */
   public function post(array $products = []) {
-    // Increase timeout as we will be using locks.
-    set_time_limit(600);
-
     $lock = \Drupal::lock();
 
     $em = $this->entityManager->getStorage('acq_sku');
