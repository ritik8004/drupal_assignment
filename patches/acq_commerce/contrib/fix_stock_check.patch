diff --git a/modules/acq_cart/src/CartSessionStorage.php b/modules/acq_cart/src/CartSessionStorage.php
index 5b77ea16a..2569ec603 100644
--- a/modules/acq_cart/src/CartSessionStorage.php
+++ b/modules/acq_cart/src/CartSessionStorage.php
@@ -204,7 +204,7 @@ public function updateCart($create_new = TRUE) {
       }
       catch (\Exception $e) {
         // Restore the cart only if exception is not related to API being down.
-        if (!acq_commerce_is_api_down_error($e)) {
+        if (!acq_commerce_is_exception_api_down_exception($e)) {
           $this->restoreCart($cart_id);
         }
 
diff --git a/modules/acq_sku/acq_sku.drush.inc b/modules/acq_sku/acq_sku.drush.inc
index 787e2b96b..28706055b 100644
--- a/modules/acq_sku/acq_sku.drush.inc
+++ b/modules/acq_sku/acq_sku.drush.inc
@@ -281,20 +281,11 @@ function drush_acq_sku_clean_stock_cache() {
   // Check if we are asked to clear cache of specific SKU.
   if ($sku = drush_get_option('sku', '')) {
     if ($sku_entity = SKU::loadFromSku($sku)) {
-      // Clear stock cache for particular sku in all languages.
-      foreach ($sku_entity->getTranslationLanguages() as $langcode => $language) {
-        $sku_entity_to_clear_stock = $sku_entity->getTranslation($langcode);
+      acq_sku_clear_sku_stock_cache($sku_entity);
 
-        // Get the stock cache id.
-        $stock_cid = acq_sku_get_stock_cache_id($sku_entity_to_clear_stock);
-
-        // Invalidate particular cache.
-        \Drupal::cache('stock')->invalidate($stock_cid);
-
-        drush_print(dt('Invalidated stock cache for @stock_cid.', [
-          '@stock_cid' => $stock_cid,
-        ]));
-      }
+      drush_print(dt('Invalidated stock cache for @sku.', [
+        '@sku' => $sku,
+      ]));
     }
 
     return;
diff --git a/modules/acq_sku/acq_sku.module b/modules/acq_sku/acq_sku.module
index 8df596b91..fcab6790a 100644
--- a/modules/acq_sku/acq_sku.module
+++ b/modules/acq_sku/acq_sku.module
@@ -9,6 +9,7 @@
  */
 
 use Drupal\acq_sku\Entity\SKU;
+use Drupal\Core\Cache\Cache;
 use Drupal\Core\Render\Element;
 use Drupal\acq_commerce\Conductor\ConductorException;
 
@@ -136,7 +137,7 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
     $cache = \Drupal::cache('stock')->get($cid);
 
     // If information is cached.
-    if (!$reset && !empty($cache)) {
+    if ($reset && !empty($cache)) {
       $stock = $cache->data;
     }
     else {
@@ -149,6 +150,11 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
       // Get the stock.
       $stock = $api_wrapper->skuStockCheck($sku_entity->getSku());
 
+      // Magento uses additional flag as well for out of stock.
+      if (isset($stock['is_in_stock']) && empty($stock['is_in_stock'])) {
+        $stock['quantity'] = 0;
+      }
+
       // If cache multiplier is zero we don't cache the stock.
       if ($cache_multiplier = \Drupal::config('acq_sku.settings')->get('stock_cache_multiplier')) {
         $default_cache_lifetime = $stock['quantity'] ? $stock['quantity'] * $cache_multiplier : $cache_multiplier;
@@ -170,3 +176,20 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
 
   return $stock;
 }
+
+/**
+ * Clear stock cache of particular SKU.
+ *
+ * @param \Drupal\acq_sku\Entity\SKU $sku_entity
+ *   SKU Entity object.
+ */
+function acq_sku_clear_sku_stock_cache(SKU $sku_entity) {
+  foreach ($sku_entity->getTranslationLanguages() as $langcode => $language) {
+    $sku_entity_to_reset_stock = $sku_entity->getTranslation($langcode);
+    $cid = acq_sku_get_stock_cache_id($sku_entity_to_reset_stock);
+    \Drupal::cache('stock')->invalidate($cid);
+  }
+
+  // Clear product and forms related to sku.
+  Cache::invalidateTags(['acq_sku:' . $sku_entity->id()]);
+}
diff --git a/modules/acq_sku/acq_sku.module b/modules/acq_sku/acq_sku.module
index fcab6790a..02482fc9e 100644
--- a/modules/acq_sku/acq_sku.module
+++ b/modules/acq_sku/acq_sku.module
@@ -137,7 +137,7 @@ function acq_sku_get_sku_stock(SKU $sku_entity, $reset = FALSE) {
     $cache = \Drupal::cache('stock')->get($cid);
 
     // If information is cached.
-    if ($reset && !empty($cache)) {
+    if (!$reset && !empty($cache)) {
       $stock = $cache->data;
     }
     else {
