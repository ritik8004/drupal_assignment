diff --git a/acq_commerce.module b/acq_commerce.module
index 21cc93227..e6ccf0ab5 100644
--- a/acq_commerce.module
+++ b/acq_commerce.module
@@ -126,7 +126,7 @@ function acq_commerce_get_store_id_from_langcode($langcode) {
 /**
  * Helper function to get language code from store id.
  *
- * @param $store_id
+ * @param string $store_id
  *   Store id to convert to language code.
  *
  * @return string|null
@@ -142,3 +142,16 @@ function acq_commerce_get_langcode_from_store_id($store_id) {
 
   return !empty($mapping[$store_id]) ? $mapping[$store_id] : NULL;
 }
+
+/**
+ * Function to return global error message to be used when API is down.
+ *
+ * Not adding this to config or creating form, this can be updated using
+ * translation interface.
+ *
+ * @return string
+ *   Error message string.
+ */
+function acq_commerce_api_down_global_error_message() {
+  return t('Sorry, something went wrong and we are unable to process your request right now. Please try again later.')->render();
+}
diff --git a/modules/acq_cart/src/CartSessionStorage.php b/modules/acq_cart/src/CartSessionStorage.php
index fac22e05a..4b35d4caf 100644
--- a/modules/acq_cart/src/CartSessionStorage.php
+++ b/modules/acq_cart/src/CartSessionStorage.php
@@ -203,7 +203,10 @@ public function updateCart($create_new = TRUE) {
         $cartObject = (object) $this->apiWrapper->updateCart($cart_id, $update);
       }
       catch (\Exception $e) {
-        $this->restoreCart($cart_id);
+        if ($e->getCode() != 500) {
+          $this->restoreCart($cart_id);
+        }
+
         throw $e;
       }
 
diff --git a/modules/acq_cart/src/Form/CustomerCartForm.php b/modules/acq_cart/src/Form/CustomerCartForm.php
index d556e7e34..4fa7b9c19 100644
--- a/modules/acq_cart/src/Form/CustomerCartForm.php
+++ b/modules/acq_cart/src/Form/CustomerCartForm.php
@@ -236,6 +236,12 @@ private function updateCart(FormStateInterface $form_state) {
       }
     }
     catch (\Exception $e) {
+      if ($e->getCode() == 500) {
+        drupal_set_message($e->getMessage(), 'error');
+        $form_state->setErrorByName('custom', $e->getMessage());
+        $form_state->setRebuild(TRUE);
+      }
+
       // Dispatch event so action can be taken.
       $dispatcher = \Drupal::service('event_dispatcher');
       $event = new UpdateCartErrorEvent($e);
diff --git a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
index bc36a640e..3616d9fb5 100644
--- a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
+++ b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
@@ -175,6 +175,17 @@ public function addToCartSubmit(array &$form, FormStateInterface $form_state) {
 
     if ($tree_pointer instanceof SKU) {
       $cart = \Drupal::service('acq_cart.cart_storage')->getCart();
+
+      if (empty($cart)) {
+        $e = new \Exception(acq_commerce_api_down_global_error_message(), 500);
+
+        // Dispatch event so action can be taken.
+        $dispatcher = \Drupal::service('event_dispatcher');
+        $event = new AddToCartErrorEvent($e);
+        $dispatcher->dispatch(AddToCartErrorEvent::SUBMIT, $event);
+        return;
+      }
+
       $options = [];
       $label_parts = [];
       $configurables_form = $form['ajax']['configurables'];
diff --git a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
index 7bbb7bb6e..c98b38a03 100644
--- a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
+++ b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
@@ -53,6 +53,17 @@ public function addToCartForm(array $form, FormStateInterface $form_state, SKU $
    */
   public function addToCartSubmit(array &$form, FormStateInterface $form_state) {
     $cart = \Drupal::service('acq_cart.cart_storage')->getCart();
+
+    if (empty($cart)) {
+      $e = new \Exception(acq_commerce_api_down_global_error_message(), 500);
+
+      // Dispatch event so action can be taken.
+      $dispatcher = \Drupal::service('event_dispatcher');
+      $event = new AddToCartErrorEvent($e);
+      $dispatcher->dispatch(AddToCartErrorEvent::SUBMIT, $event);
+      return;
+    }
+
     $sku_entity = SKU::load($form_state->getValue('sku_id'));
     $sku = $sku_entity->getSku();
     $quantity = $form_state->getValue('quantity');
diff --git a/src/Conductor/AgentRequestTrait.php b/src/Conductor/AgentRequestTrait.php
index 3228b9aa3..f55088c5f 100644
--- a/src/Conductor/AgentRequestTrait.php
+++ b/src/Conductor/AgentRequestTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\acq_commerce\Conductor;
 
+use Acquia\Hmac\Exception\MalformedResponseException;
+use GuzzleHttp\Exception\ConnectException;
 use GuzzleHttp\TransferStats;
 use GuzzleHttp\Exception\RequestException;
 
@@ -96,6 +98,30 @@ function (TransferStats $stats) use ($logger, $action) {
       /** @var \GuzzleHttp\Psr7\Response $result */
       $result = $doReq($client, $reqOpts);
     }
+    catch (ConnectException $e) {
+      $mesg = sprintf(
+        '%s: ConnectException during request: (%d) - %s',
+        $action,
+        $e->getCode(),
+        $e->getMessage()
+      );
+
+      $logger->error($mesg);
+
+      throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
+    }
+    catch (MalformedResponseException $e) {
+      $mesg = sprintf(
+        '%s: MalformedResponseException during request: (%d) - %s',
+        $action,
+        $e->getCode(),
+        $e->getMessage()
+      );
+
+      $logger->error($mesg);
+
+      throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
+    }
     catch (RequestException $e) {
       $mesg = sprintf(
         '%s: Exception during request: (%d) - %s',
@@ -105,8 +131,14 @@ function (TransferStats $stats) use ($logger, $action) {
       );
 
       $logger->error($mesg);
+
+      if ($e->getCode() == 404) {
+        throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
+      }
+
       throw new ConductorException($mesg, $e->getCode(), $e);
     }
+
     $response = json_decode($result->getBody(), TRUE);
     if (($response === NULL) || (!isset($response['success']))) {
       $mesg = sprintf(
diff --git a/acq_commerce.module b/acq_commerce.module
index e6ccf0ab5..636c6fc40 100644
--- a/acq_commerce.module
+++ b/acq_commerce.module
@@ -5,6 +5,8 @@
  * Provides base hooks to the base Acquia Commerce connector.
  */
 
+use Drupal\acq_commerce\Conductor\APIWrapper;
+
 /**
  * For the all.
  */
@@ -144,6 +146,32 @@ function acq_commerce_get_langcode_from_store_id($store_id) {
 }
 
 /**
+ * Helper function to check if exception is related to API being down.
+ *
+ * @param \Exception $e
+ *   Exception object.
+ *
+ * @return bool
+ *   True if exception is related to API being down.
+ */
+function acq_commerce_is_exception_api_down_exception(\Exception $e) {
+  return acq_commerce_is_code_api_down_code($e->getCode());
+}
+
+/**
+ * Helper function to check if exception code is related to API being down.
+ *
+ * @param int $code
+ *   Exception code.
+ *
+ * @return bool
+ *   True if exception code is related to API being down.
+ */
+function acq_commerce_is_code_api_down_code($code) {
+  return ($code == APIWrapper::API_DOWN_ERROR_CODE);
+}
+
+/**
  * Function to return global error message to be used when API is down.
  *
  * Not adding this to config or creating form, this can be updated using
diff --git a/modules/acq_cart/src/CartSessionStorage.php b/modules/acq_cart/src/CartSessionStorage.php
index 4b35d4caf..5b77ea16a 100644
--- a/modules/acq_cart/src/CartSessionStorage.php
+++ b/modules/acq_cart/src/CartSessionStorage.php
@@ -203,7 +203,8 @@ public function updateCart($create_new = TRUE) {
         $cartObject = (object) $this->apiWrapper->updateCart($cart_id, $update);
       }
       catch (\Exception $e) {
-        if ($e->getCode() != 500) {
+        // Restore the cart only if exception is not related to API being down.
+        if (!acq_commerce_is_api_down_error($e)) {
           $this->restoreCart($cart_id);
         }
 
diff --git a/src/Conductor/APIWrapper.php b/src/Conductor/APIWrapper.php
index d5181e580..93695009a 100644
--- a/src/Conductor/APIWrapper.php
+++ b/src/Conductor/APIWrapper.php
@@ -15,6 +15,11 @@ class APIWrapper {
   use \Drupal\acq_commerce\Conductor\AgentRequestTrait;
 
   /**
+   * Error code used internally for API Down cases.
+   */
+  const API_DOWN_ERROR_CODE = 600;
+
+  /**
    * Store ID.
    *
    * @var mixed
diff --git a/src/Conductor/AgentRequestTrait.php b/src/Conductor/AgentRequestTrait.php
index f55088c5f..9a8ad5dd3 100644
--- a/src/Conductor/AgentRequestTrait.php
+++ b/src/Conductor/AgentRequestTrait.php
@@ -98,45 +98,30 @@ function (TransferStats $stats) use ($logger, $action) {
       /** @var \GuzzleHttp\Psr7\Response $result */
       $result = $doReq($client, $reqOpts);
     }
-    catch (ConnectException $e) {
-      $mesg = sprintf(
-        '%s: ConnectException during request: (%d) - %s',
-        $action,
-        $e->getCode(),
-        $e->getMessage()
-      );
-
-      $logger->error($mesg);
-
-      throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
-    }
-    catch (MalformedResponseException $e) {
-      $mesg = sprintf(
-        '%s: MalformedResponseException during request: (%d) - %s',
-        $action,
-        $e->getCode(),
-        $e->getMessage()
-      );
-
-      $logger->error($mesg);
+    catch (\Exception $e) {
+      $class = get_class($e);
 
-      throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
-    }
-    catch (RequestException $e) {
       $mesg = sprintf(
-        '%s: Exception during request: (%d) - %s',
+        '%s: %s during request: (%d) - %s',
         $action,
+        $class,
         $e->getCode(),
         $e->getMessage()
       );
 
       $logger->error($mesg);
 
-      if ($e->getCode() == 404) {
-        throw new \Exception(acq_commerce_api_down_global_error_message(), 500);
+      if ($e->getCode() == 404
+        || $e instanceof MalformedResponseException
+        || $e instanceof ConnectException) {
+        throw new \Exception(acq_commerce_api_down_global_error_message(), APIWrapper::API_DOWN_ERROR_CODE);
+      }
+      elseif ($e instanceof RequestException) {
+        throw new ConductorException($mesg, $e->getCode(), $e);
+      }
+      else {
+        throw $e;
       }
-
-      throw new ConductorException($mesg, $e->getCode(), $e);
     }
 
     $response = json_decode($result->getBody(), TRUE);
diff --git a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
index 62c689f36..6a3f47741 100644
--- a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
+++ b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Configurable.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\acq_sku\Plugin\AcquiaCommerce\SKUType;
 
+use Drupal\acq_commerce\Conductor\APIWrapper;
 use Drupal\acq_sku\AcquiaCommerce\SKUPluginBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\FormStateInterface;
@@ -180,7 +181,7 @@ public function addToCartSubmit(array &$form, FormStateInterface $form_state) {
       // Call above is to create cart if empty, we except a new or old cart here
       // and it can be empty if server is not working or in maintenance mode.
       if (empty($cart)) {
-        $e = new \Exception(acq_commerce_api_down_global_error_message(), 500);
+        $e = new \Exception(acq_commerce_api_down_global_error_message(), APIWrapper::API_DOWN_ERROR_CODE);
 
         // Dispatch event so action can be taken.
         $dispatcher = \Drupal::service('event_dispatcher');
diff --git a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
index 2088bc2f8..b456782bf 100644
--- a/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
+++ b/modules/acq_sku/src/Plugin/AcquiaCommerce/SKUType/Simple.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\acq_sku\Plugin\AcquiaCommerce\SKUType;
 
+use Drupal\acq_commerce\Conductor\APIWrapper;
 use Drupal\acq_sku\AcquiaCommerce\SKUPluginBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\FormStateInterface;
@@ -58,7 +59,7 @@ public function addToCartSubmit(array &$form, FormStateInterface $form_state) {
     // Call above is to create cart if empty, we except a new or old cart here
     // and it can be empty if server is not working or in maintenance mode.
     if (empty($cart)) {
-      $e = new \Exception(acq_commerce_api_down_global_error_message(), 500);
+      $e = new \Exception(acq_commerce_api_down_global_error_message(), APIWrapper::API_DOWN_ERROR_CODE);
 
       // Dispatch event so action can be taken.
       $dispatcher = \Drupal::service('event_dispatcher');
diff --git a/modules/acq_cart/src/Form/CustomerCartForm.php b/modules/acq_cart/src/Form/CustomerCartForm.php
index 4fa7b9c19..356309a02 100644
--- a/modules/acq_cart/src/Form/CustomerCartForm.php
+++ b/modules/acq_cart/src/Form/CustomerCartForm.php
@@ -236,7 +236,7 @@ private function updateCart(FormStateInterface $form_state) {
       }
     }
     catch (\Exception $e) {
-      if ($e->getCode() == 500) {
+      if (acq_commerce_is_exception_api_down_exception($e)) {
         drupal_set_message($e->getMessage(), 'error');
         $form_state->setErrorByName('custom', $e->getMessage());
         $form_state->setRebuild(TRUE);
diff --git a/src/Conductor/AgentRequestTrait.php b/src/Conductor/AgentRequestTrait.php
index 9a8ad5dd3..c27178a0b 100644
--- a/src/Conductor/AgentRequestTrait.php
+++ b/src/Conductor/AgentRequestTrait.php
@@ -143,6 +143,23 @@ function (TransferStats $stats) use ($logger, $action) {
         $result->getBody()
       ));
 
+      // Process the response to check if error is downtime error
+      // from Magento.
+      $errors = [];
+      if (preg_match('/response:(.*)/i', $result->getBody(), $errors)) {
+        if (isset($errors[1])) {
+          $error = json_decode(strtolower($errors[1]), TRUE);
+
+          if (isset($error['status'])) {
+            $error_code = (int) $error['status'];
+
+            if ($error_code >= 500 && $error_code < 600) {
+              throw new \Exception(acq_commerce_api_down_global_error_message(), APIWrapper::API_DOWN_ERROR_CODE);
+            }
+          }
+        }
+      }
+
       throw new ConductorResultException($response);
     }
 
