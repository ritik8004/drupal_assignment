diff --git a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
index c64a8e4b3..673c4675e 100644
--- a/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
+++ b/modules/acq_sku/src/AcquiaCommerce/SKUPluginBase.php
@@ -187,7 +187,7 @@ public function getDisplayNode(SKU $sku, $check_parent = TRUE, $create_translati
         return $node->addTranslation($sku->language()->getId());
       }
 
-      throw new \Exception(new FormattableMarkup('Node translation not found of @sku for @langcode', ['@sku' => $sku, '@langcode' => $sku->language()->getId()]), 404);
+      throw new \Exception(new FormattableMarkup('Node translation not found of @sku for @langcode', ['@sku' => $sku->id(), '@langcode' => $sku->language()->getId()]), 404);
     }
 
     return $node;
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index e2884c404..64623bafd 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -252,11 +252,15 @@ public function post(array $products = []) {
         $node->save();
       }
       else {
-        if ($node = $plugin->getDisplayNode($sku, FALSE, FALSE)) {
+        try {
+          // Un-publish if node available.
+          $node = $plugin->getDisplayNode($sku, FALSE, FALSE);
           $node->setPublished(FALSE);
-          $node->save;
+          $node->save();
+        }
+        catch (\Exception $e) {
+          // Do nothing, we may not have the node available in system.
         }
-
       }
     }
 
diff --git a/src/Conductor/IngestAPIWrapper.php b/src/Conductor/IngestAPIWrapper.php
index 81adcfda1..1e09a1f28 100644
--- a/src/Conductor/IngestAPIWrapper.php
+++ b/src/Conductor/IngestAPIWrapper.php
@@ -29,6 +29,7 @@ public function __construct(ClientFactory $client_factory, ConfigFactoryInterfac
     $this->apiVersion = $config_factory->get('acq_commerce.conductor')->get('api_version');
     $this->debug = $config_factory->get('acq_commerce.conductor')->get('debug');
     $this->debugDir = $config_factory->get('acq_commerce.conductor')->get('debug_dir');
+    $this->product_page_size = $config_factory->get('acq_commerce.conductor')->get('product_page_size');
   }
 
   /**
@@ -47,9 +48,15 @@ public function productFullSync($skus = '') {
         fclose($fp);
       }
 
+      $product_page_size = (int) $this->product_page_size;
+
       $endpoint = $this->apiVersion . '/ingest/product/sync';
 
-      $doReq = function ($client, $opt) use ($endpoint, $store_id, $skus) {
+      $doReq = function ($client, $opt) use ($endpoint, $store_id, $skus, $product_page_size) {
+        if ($product_page_size > 0) {
+          $opt['query']['product_page_size'] = $product_page_size;
+        }
+
         if (!empty($skus)) {
           $opt['query']['skus'] = $skus;
         }
diff --git a/src/Conductor/IngestAPIWrapper.php b/src/Conductor/IngestAPIWrapper.php
index 1e09a1f28..d131e0232 100644
--- a/src/Conductor/IngestAPIWrapper.php
+++ b/src/Conductor/IngestAPIWrapper.php
@@ -54,7 +54,7 @@ public function productFullSync($skus = '') {
 
       $doReq = function ($client, $opt) use ($endpoint, $store_id, $skus, $product_page_size) {
         if ($product_page_size > 0) {
-          $opt['query']['product_page_size'] = $product_page_size;
+          $opt['query']['page_size'] = $product_page_size;
         }
 
         if (!empty($skus)) {
diff --git a/src/Form/ConductorSettingsForm.php b/src/Form/ConductorSettingsForm.php
index 59527b94a..32282cdb4 100644
--- a/src/Form/ConductorSettingsForm.php
+++ b/src/Form/ConductorSettingsForm.php
@@ -41,7 +41,7 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
       ->set('hmac_secret', $form_state->getValue('hmac_secret'))
       ->set('timeout', (int) $form_state->getValue('timeout'))
       ->set('verify_ssl', (bool) $form_state->getValue('verify_ssl'))
-      ->set('product_page_size', (int) $form_state->getValue('page_size'))
+      ->set('product_page_size', (int) $form_state->getValue('product_page_size'))
       ->set('filter_root_category', (bool) $form_state->getValue('filter_root_category'))
       ->save();
 
