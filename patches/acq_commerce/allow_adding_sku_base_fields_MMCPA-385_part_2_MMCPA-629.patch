diff --git a/modules/acq_sku/acq_sku.module b/modules/acq_sku/acq_sku.module
index 68ec7b3..8668d29 100644
--- a/modules/acq_sku/acq_sku.module
+++ b/modules/acq_sku/acq_sku.module
@@ -43,6 +43,7 @@ function acq_sku_preprocess_acq_sku(&$variables) {
  * @param array $fields
  *   An associative array containing field_machine_name as key and following
  *   data in value:
+ *   - parent: (Required) Parent key in the array where to look for data.
  *   - label: (Required) Label to be used for admin forms and display.
  *   - description: Description of the field to be used in admin forms.
  *   - cardinality: Number of values allowed to be stored.
@@ -51,6 +52,7 @@ function acq_sku_preprocess_acq_sku(&$variables) {
  *   - configurable: Whether the field is part of configurable options.
  *   - visible_view: Whether the field should be visible while viewing content.
  *   - visible_form: Whether the field should be visible in form.
+ *   - serialize: (Optional) Should the data be stored as serialized.
  */
 function acq_sku_add_base_fields(array $fields) {
   // Get the fields from config.
diff --git a/modules/acq_sku/src/Entity/SKU.php b/modules/acq_sku/src/Entity/SKU.php
index 266d157..ba4e445 100644
--- a/modules/acq_sku/src/Entity/SKU.php
+++ b/modules/acq_sku/src/Entity/SKU.php
@@ -444,6 +444,25 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
             }
             break;
 
+          case 'text_long':
+            $field = BaseFieldDefinition::create('text_long');
+
+            if ($field_info['visible_view']) {
+              $field->setDisplayOptions('view', [
+                'label' => 'hidden',
+                'type' => 'text_default',
+                'weight' => $weight,
+              ]);
+            }
+
+            if ($field_info['visible_form']) {
+              $field->setDisplayOptions('form', [
+                'type' => 'text_textfield',
+                'weight' => $weight,
+              ]);
+            }
+            break;
+
           case 'image':
             $field = BaseFieldDefinition::create('image');
             if ($field_info['visible_view']) {
diff --git a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
index f2f3f10..8b66cc5 100644
--- a/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
+++ b/modules/acq_sku/src/Plugin/rest/resource/ProductSyncResource.php
@@ -237,6 +237,9 @@ public function post(array $products = []) {
       // Update the fields based on the values from attributes.
       $this->updateAttributeFields($sku, $product['attributes']);
 
+      // Update the fields based on the values from extension.
+      $this->updateExtensionFields($sku, $product['extension']);
+
       // Update upsell linked SKUs.
       $this->updateLinkedSkus('upsell', $sku, $product['linked']);
 
@@ -453,6 +456,10 @@ private function updateAttributeFields(SKU $sku, array $attributes) {
       if (isset($additionalFields[$key])) {
         $field = $additionalFields[$key];
 
+        if ($field['parent'] != 'attributes') {
+          continue;
+        }
+
         $value = $field['cardinality'] != 1 ? explode(',', $value) : $value;
         $field_key = 'attr_' . $key;
 
@@ -461,6 +468,55 @@ private function updateAttributeFields(SKU $sku, array $attributes) {
             $sku->{$field_key}->setValue($value);
             break;
 
+          case 'text_long':
+            $value = isset($field['serialize']) ? serialize($value) : $value;
+            $sku->{$field_key}->setValue($value);
+            break;
+
+          case 'image':
+            // We will manage this post save.
+            break;
+        }
+      }
+    }
+  }
+
+  /**
+   * Update extension fields.
+   *
+   * Update the fields based on the values from extension.
+   *
+   * @param \Drupal\acq_sku\Entity\SKU $sku
+   *   The root SKU.
+   * @param array $attributes
+   *   The attributes to set.
+   */
+  private function updateExtensionFields(SKU $sku, array $attributes) {
+    $additionalFields = \Drupal::config('acq_sku.base_field_additions')->getRawData();
+
+    // Loop through all the attributes available for this particular SKU.
+    foreach ($attributes as $key => $value) {
+      // Check if attribute is required by us.
+      if (isset($additionalFields[$key])) {
+        $field = $additionalFields[$key];
+
+        if ($field['parent'] != 'extension') {
+          continue;
+        }
+
+        $field_key = 'attr_' . $key;
+
+        switch ($field['type']) {
+          case 'string':
+            $value = $field['cardinality'] != 1 ? explode(',', $value) : $value;
+            $sku->{$field_key}->setValue($value);
+            break;
+
+          case 'text_long':
+            $value = isset($field['serialize']) ? serialize($value) : $value;
+            $sku->{$field_key}->setValue($value);
+            break;
+
           case 'image':
             // We will manage this post save.
             break;
@@ -493,10 +549,6 @@ private function updateAttributeFieldsPostSave(SKU $sku, array $attributes) {
         $field_key = 'attr_' . $key;
 
         switch ($field['type']) {
-          case 'string':
-            // Already managed in pre-save.
-            break;
-
           case 'image':
             // Initialise queue manager if not already done.
             if (empty($this->downloadImagesQueueManager)) {
diff --git a/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.module b/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.module
index a17efde..ec82f56 100644
--- a/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.module
+++ b/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.module
@@ -107,15 +107,24 @@ function alshaya_acm_product_node_view(array &$build, EntityInterface $entity, E
       }
 
       alshaya_acm_product_get_gallery($build, $skuEntity);
+
+      $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder($skuEntity->getEntityTypeId());
+      $build['short_description'] = !empty($skuEntity->get('attr_short_description')->getString()) ? $viewBuilder->viewField($skuEntity->get('attr_short_description')) : [];
+
     }
     elseif ($view_mode == 'teaser') {
 
       // Get the image.
       $build['image_url'] = [];
-      $sku_media = alshaya_acm_product_get_sku_media($skuEntity);
+      $sku_media = alshaya_acm_product_get_sku_media($skuEntity, TRUE);
       if ($sku_media) {
-        $imageEntity = array_shift($sku_media);
-        $build['image_url']['#markup'] = ImageStyle::load('192x168')->buildUrl($imageEntity->getFileUri());
+        $build['image'] = [
+          '#theme' => 'image_style',
+          '#style_name' => '192x168',
+          '#uri' => $sku_media['file']->getFileUri(),
+          '#title' => $sku_media['label'],
+          '#alt' => $sku_media['label'],
+        ];
       }
 
       // Get the price.
@@ -133,16 +142,23 @@ function alshaya_acm_product_node_view(array &$build, EntityInterface $entity, E
           '#price' => $special_price,
         ];
       }
+
+      $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder($skuEntity->getEntityTypeId());
+      $build['short_description'] = !empty($skuEntity->get('attr_short_description')->getString()) ? $viewBuilder->viewField($skuEntity->get('attr_short_description')) : [];
     }
     elseif ($view_mode == 'modal') {
       // Get the image.
       // @TODO: We need to display the full slider and zoom box.
       $build['image_url'] = NULL;
       $sku_media = alshaya_acm_product_get_sku_media($skuEntity);
+
       if ($sku_media) {
         $imageEntity = array_shift($sku_media);
         $build['image_url']['#markup'] = ImageStyle::load('192x168')->buildUrl($imageEntity->getFileUri());
       }
+
+      $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder($skuEntity->getEntityTypeId());
+      $build['short_description'] = !empty($skuEntity->get('attr_short_description')->getString()) ? $viewBuilder->viewField($skuEntity->get('attr_short_description')) : [];
     }
   }
 }
diff --git a/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.utility.inc b/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.utility.inc
index d539d1a..1854ab9 100644
--- a/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.utility.inc
+++ b/docroot/modules/custom/alshaya_acm_product/alshaya_acm_product.utility.inc
@@ -20,19 +20,25 @@
  * @return array
  *   Array of media files.
  */
-function alshaya_acm_product_get_product_media($productId) {
+function alshaya_acm_product_get_product_media($productId, $first_image_only = FALSE) {
   // Load product from id.
   $product = Node::load($productId);
 
   if ($product instanceof Node) {
     // Get SKU from product.
-    $skuEntity = $product->get('field_skus')
+    $sku_entity = $product->get('field_skus')
       ->first()
       ->get('entity')
       ->getValue();
 
-    return alshaya_acm_product_get_sku_media($skuEntity);
+    // Get the processed media data for the SKU.
+    $media = alshaya_acm_product_get_sku_media($sku_entity, $first_image_only);
+
+    // We return all media items.
+    return $media;
   }
+
+  // We didn't find any media files, returning null.
   return NULL;
 }
 
@@ -45,25 +51,128 @@ function alshaya_acm_product_get_product_media($productId) {
  * @return array
  *   Array of media files.
  */
-function alshaya_acm_product_get_sku_media($sku) {
+function alshaya_acm_product_get_sku_media($sku, $first_image_only = FALSE) {
   $media = [];
 
-  $skuEntity = is_object($sku) ? $sku : SKU::loadFromSku($sku);
+  $sku_entity = is_object($sku) ? $sku : SKU::loadFromSku($sku);
+
+  if (!($sku_entity instanceof SKU)) {
+    return [];
+  }
+
+  if($media_data = $sku_entity->get('attr_media')->getString()) {
+    $update_sku = FALSE;
+
+    $media_data_full = unserialize($media_data);
+
+    if (empty($media_data_full)) {
+      return [];
+    }
+
+    //@TODO: Remove this hard coded fix after getting answer why we have empty
+    // second array index and why all media come in first array index.
+    $media_data = reset($media_data_full);
+
+    foreach ($media_data as &$data) {
+      if ($data['media_type'] == 'image') {
+        if (empty($data['fid'])) {
+          try {
+            // Prepare the File object when we access it the first time.
+            $data['fid'] = alshaya_acm_product_download_sku_media_image($data, $sku_entity);
+            $update_sku = TRUE;
+          }
+          catch (\Exception $e) {
+            \Drupal::logger('alshaya_acm_product')->error($e->getMessage());
+
+          }
+        }
+
+        $data['file'] = File::load($data['fid']);
+
+        if (empty($data['label'])) {
+          $data['label'] = $sku_entity->label();
+        }
+      }
 
-  if ($skuEntity instanceof SKU) {
-    // For now we load only the image field.
-    $imageField = $skuEntity->get('attr_image')->getValue();
+      $media[$data['position']] = $data;
+    }
 
-    // We will return the array of File objects.
-    foreach ($imageField as $image) {
-      $media[] = File::load($image['target_id']);
+    if ($update_sku) {
+      //@TODO: Remove this hard coded fix after getting answer why we have empty
+      // second array index and why all media come in first array index.
+      $media_data_full[0] = $media_data;
+      $sku_entity->get('attr_media')->setValue(serialize($media_data_full));
+      $sku_entity->save();
     }
   }
 
+  // Sort them by position again to ensure it works everytime.
+  ksort($media);
+
+  if ($first_image_only) {
+    // We loop through all the media items and return the first image.
+    foreach ($media as $media_item) {
+      if ($media_item['media_type'] == 'image') {
+        return $media_item;
+      }
+    }
+
+    // We didn't find any image media so returning null.
+    return NULL;
+  }
+
   return $media;
 }
 
 /**
+ * Function to save image file into public dir.
+ *
+ * @param array $data
+ *  File data.
+ * @param \Drupal\acq_sku\Entity\SKU $sku
+ *   SKU entity.
+ * @return int
+ *   File id.
+ */
+function alshaya_acm_product_download_sku_media_image(array $data, SKU $sku) {
+  // Preparing args for all info/error messages.
+  $args = ['@file' => $data['file'], '@sku_id' => $sku->id()];
+
+  // Download the file contents.
+  $file_data = file_get_contents($data['file']);
+
+  // Check to ensure errors like 404, 403, etc. are catched and empty file
+  // not saved in SKU.
+  if (empty($file_data)) {
+    throw new \Exception(new FormattableMarkup('Failed to download file "@file" for SKU id @sku_id.', $args));
+  }
+
+  // Get the path part in the url, remove hostname.
+  $path = parse_url($data['file'], PHP_URL_PATH);
+
+  // Remove slashes from start and end.
+  $path = trim($path, '/');
+
+  // Get the file name.
+  $file_name = basename($path);
+
+  // Prepare the directory path.
+  $directory = 'public://acm/' . str_replace('/' . $file_name, '', $path);
+
+  // Prepare the directory.
+  file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
+
+  // Save the file as file entity.
+  /** @var \Drupal\file\Entity\File $file */
+  if ($file = file_save_data($file_data, $directory . '/' . $file_name, FILE_EXISTS_REPLACE)) {
+    return $file->id();
+  }
+  else {
+    throw new \Exception(new FormattableMarkup('Failed to save file "@file" for SKU id @sku_id.', $args));
+  }
+}
+
+/**
  * Utility function to return media files for a SKU.
  *
  * @param mixed $sku
@@ -75,9 +184,9 @@ function alshaya_acm_product_get_sku_media($sku) {
 function alshaya_acm_product_get_sku_configurable_values($sku) {
   $configurableFieldValues = [];
 
-  $skuEntity = is_object($sku) ? $sku : SKU::loadFromSku($sku);
+  $sku_entity = is_object($sku) ? $sku : SKU::loadFromSku($sku);
 
-  if ($skuEntity instanceof SKU) {
+  if ($sku_entity instanceof SKU) {
     $fields = \Drupal::config('alshaya_acm_product.sku_base_fields')
       ->get('fields');
     $configurableFields = array_filter($fields, function ($field) {
@@ -87,10 +196,10 @@ function alshaya_acm_product_get_sku_configurable_values($sku) {
     foreach ($configurableFields as $key => $field) {
       $fieldKey = 'attr_' . $key;
 
-      if ($skuEntity->get($fieldKey)->getString()) {
+      if ($sku_entity->get($fieldKey)->getString()) {
         $configurableFieldValues[$fieldKey] = [
-          'label' => $skuEntity->get($fieldKey)->getFieldDefinition()->getLabel(),
-          'value' => $skuEntity->get($fieldKey)->getString(),
+          'label' => $sku_entity->get($fieldKey)->getFieldDefinition()->getLabel(),
+          'value' => $sku_entity->get($fieldKey)->getString(),
         ];
       }
     }
@@ -143,14 +252,21 @@ function alshaya_acm_product_get_parent_sku_by_sku($sku) {
  *
  * @param array $build
  *   Build array to add the gallery and zoom elements to.
- * @param \Drupal\acq_commerce\SKUInterface $skuEntity
+ * @param \Drupal\acq_commerce\SKUInterface $sku_entity
  *   SKU Entity for which we want to display the media.
  */
-function alshaya_acm_product_get_gallery(array &$build, SKUInterface $skuEntity) {
+function alshaya_acm_product_get_gallery(array &$build, SKUInterface $sku_entity) {
   \Drupal::moduleHandler()->loadInclude('alshaya_product_zoom', 'inc', 'alshaya_product_zoom.utility');
 
   // Fetch media.
-  $media = alshaya_acm_product_get_sku_media($skuEntity);
+  $media = alshaya_acm_product_get_sku_media($sku_entity);
+
+  // Avoid notices and warnings in local.
+  if (empty($media)) {
+    return [];
+  }
+
+  $main_image = [];
 
   // Fetch settings.
   $settings = alshaya_product_zoom_cloudzoom_default_settings();
@@ -159,55 +275,62 @@ function alshaya_acm_product_get_gallery(array &$build, SKUInterface $skuEntity)
   $slide_style = $settings['slide_style'];
 
   // Create our thumbnails to be rendered for zoom.
-  foreach ($media as $delta => $image) {
-    $file_uri = $image->getFileUri();
-    // Show original full image in the modal inside a draggable container.
-    $original_image = $image->url();
-    if ($delta == 0) {
-      $imageZoom = ImageStyle::load($zoom_style)->buildUrl($file_uri);
-      $imageMedium = ImageStyle::load($slide_style)->buildUrl($file_uri);
-      $main_image = [
-        'zoomurl' => $imageZoom,
-        'mediumurl' => $imageMedium,
-      ];
-    }
-    $imageSmall = ImageStyle::load($thumbnail_style)->buildUrl($file_uri);
-    $imageZoom = ImageStyle::load($zoom_style)->buildUrl($file_uri);
-    $imageMedium = ImageStyle::load($slide_style)->buildUrl($file_uri);
-    $thumbnails[] = [
-      'thumburl' => $imageSmall,
-      'mediumurl' => $imageMedium,
-      'zoomurl' => $imageZoom,
-      'fullurl' => $original_image,
-      'type' => 'image',
-    ];
-  }
-  // @TODO: Get video data.
-  $video = [];
-  $videos = [
-    'https://www.youtube.com/embed/Fcnl1UBgECE',
-    'https://www.youtube.com/embed/vm89kGqKqO0',
-  ];
-  foreach ($videos as $video) {
-    if (strpos($video, 'youtube')) {
+  foreach ($media as $delta => $media_item) {
+    if ($media_item['media_type'] == 'image') {
+
+      $file_uri = $media_item['file']->getFileUri();
+
+      // Show original full image in the modal inside a draggable container.
+      $original_image = $media_item['file']->url();
+
+      if (empty($main_image)) {
+        $image_zoom = ImageStyle::load($zoom_style)->buildUrl($file_uri);
+        $image_medium = ImageStyle::load($slide_style)->buildUrl($file_uri);
+        $main_image = [
+          'zoomurl' => $image_zoom,
+          'mediumurl' => $image_medium,
+        ];
+      }
+
+      $image_small = ImageStyle::load($thumbnail_style)->buildUrl($file_uri);
+      $image_zoom = ImageStyle::load($zoom_style)->buildUrl($file_uri);
+      $image_medium = ImageStyle::load($slide_style)->buildUrl($file_uri);
+
       $thumbnails[] = [
-        'thumburl' => 'https://img.youtube.com/vi/' . alshaya_product_zoom_getyoutubeid($video) . '/hqdefault.jpg',
-        'url' => $video,
-        'type' => 'youtube',
-        'width' => 81,
-        'height' => 81,
+        'thumburl' => $image_small,
+        'mediumurl' => $image_medium,
+        'zoomurl' => $image_zoom,
+        'fullurl' => $original_image,
+        'label' => $media_item['label'],
+        'type' => 'image',
       ];
     }
-    else {
-      $thumbnails[] = [
-        'url' => $video,
-        'type' => 'vimeo',
-        'width' => 81,
-        'height' => 81,
-      ];
+    elseif ($media_item['media_type'] == 'video') {
+      if (strpos($media_item['video_provider'], 'youtube')) {
+        $thumbnails[] = [
+          'thumburl' => 'https://img.youtube.com/vi/' . alshaya_product_zoom_getyoutubeid($media_item['video_url']) . '/hqdefault.jpg',
+          'url' => $media_item['video_url'],
+          'type' => 'youtube',
+          // @TODO: should this be config?
+          'width' => 81,
+          // @TODO: should this be config?
+          'height' => 81,
+        ];
+      }
+      else {
+        $thumbnails[] = [
+          'url' => $media_item['video_url'],
+          'type' => 'vimeo',
+          // @TODO: should this be config?
+          'width' => 81,
+          // @TODO: should this be config?
+          'height' => 81,
+        ];
+      }
     }
   }
 
+  // @TODO: should this be config?
   $pager_flag = count($thumbnails) > 5 ? 'pager-yes' : 'pager-no';
 
   $build['gallery'] = [
diff --git a/docroot/modules/custom/alshaya_acm_product/config/install/alshaya_acm_product.sku_base_fields.yml b/docroot/modules/custom/alshaya_acm_product/config/install/alshaya_acm_product.sku_base_fields.yml
index d0cc9c9..68bab4d 100644
--- a/docroot/modules/custom/alshaya_acm_product/config/install/alshaya_acm_product.sku_base_fields.yml
+++ b/docroot/modules/custom/alshaya_acm_product/config/install/alshaya_acm_product.sku_base_fields.yml
@@ -1,6 +1,7 @@
 fields:
   # Field for color attribute.
   color:
+    parent: 'attributes'
     label: 'Color'
     description: 'Color attribute for the product.'
     cardinality: -1
@@ -11,6 +12,7 @@ fields:
 
   # Field for size attribute.
   size:
+    parent: 'attributes'
     label: 'Size'
     description: 'Size attribute for the product.'
     cardinality: -1
@@ -21,6 +23,7 @@ fields:
 
   # Field for special_price attribute.
   special_price:
+    parent: 'attributes'
     label: 'Special price'
     description: 'Special price attribute for the product.'
     cardinality: 1
@@ -31,6 +34,7 @@ fields:
 
   # Field for base image attribute.
   image:
+    parent: 'attributes'
     label: 'Image'
     description: 'Base image attribute for the product.'
     cardinality: -1
@@ -39,22 +43,25 @@ fields:
     visible_view: 0
     visible_form: 1
 
-  # Field for small image attribute.
-  small_image:
-    label: 'Small image'
-    description: 'Small image attribute for the product.'
+  # Field to store media info.
+  short_description:
+    parent: 'attributes'
+    label: 'Short description'
+    description: 'Store the short description here.'
     cardinality: -1
-    type: 'image'
+    type: 'text_long'
     configurable: 0
     visible_view: 0
     visible_form: 1
 
-  # Field for thumbnail image attribute.
-  thumbnail:
-    label: 'Thumbnail'
-    description: 'Thumbnail image attribute for the product.'
+  # Field to store media info.
+  media:
+    parent: 'extension'
+    label: 'Media'
+    description: 'Store all the media files info.'
     cardinality: -1
-    type: 'image'
+    type: 'text_long'
     configurable: 0
     visible_view: 0
     visible_form: 1
+    serialize: 1
diff --git a/docroot/themes/custom/alshaya_white_label/templates/node/node--acq-product--teaser.html.twig b/docroot/themes/custom/alshaya_white_label/templates/node/node--acq-product--teaser.html.twig
index c5b0eff..822f784 100644
--- a/docroot/themes/custom/alshaya_white_label/templates/node/node--acq-product--teaser.html.twig
+++ b/docroot/themes/custom/alshaya_white_label/templates/node/node--acq-product--teaser.html.twig
@@ -8,8 +8,8 @@ view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
 
 <article{{ attributes }}>
   <a class="use-ajax above-mobile-block" data-dialog-type="modal" data-dialog-options='{"width":"auto"}' href="{{ path('alshaya_acm_product.product_modal', {'node': node.id}) }}">
-    {% if content.image_url is not null %}
-      <img src={{ content.image_url }} />
+    {% if content.image is not null %}
+      {{ content.image }}
     {% endif %}
 
     {{ title_prefix }}
