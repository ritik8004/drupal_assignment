diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.links.menu.yml b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.links.menu.yml
new file mode 100644
index 0000000..c8a603f
--- /dev/null
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.links.menu.yml
@@ -0,0 +1,6 @@
+acq_cart.configuration:
+  title: 'Cart Configuration'
+  route_name: 'acq_cart.cart_config'
+  parent: 'acq_commerce.configuration'
+  description: 'Configure your Acquia Commerce Cart settings.'
+  weight: 22
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.module b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.module
index 888e0bb..62d4414 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.module
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.module
@@ -3,6 +3,7 @@
 use Drupal\acq_cart\Entity\Order;
 use Drupal\acq_cart\Entity\LineItem;
 use Drupal\acq_product\Entity\Product;
+use Drupal\Core\Form\FormStateInterface;
 
 /**
  * @file
@@ -45,3 +46,15 @@ function acq_cart_theme($existing, $type, $theme, $path) {
     ),
   );
 }
+
+/**
+ * Implements hook_form_FORM_ID_alter
+ */
+function acq_cart_form_customer_cart_form_alter(&$form, FormStateInterface $form_state) {
+  foreach ($form['cart'] as $id => $items) {
+    if (isset($item['quantity'])) {
+      $form['cart'][$id]['quantity']['#type'] = 'select';
+      $form['cart'][$id]['quantity']['#options'] = range(0, \Drupal::config('acq_cart.config')->get('max_cart_qty'));
+    }
+  }
+}
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.routing.yml b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.routing.yml
index 39694c3..a734cb9 100644
--- a/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.routing.yml
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/acq_cart.routing.yml
@@ -13,3 +13,11 @@ acq_cart.getMiniCartRender:
     _title: 'Cart'
   requirements:
     _permission: 'access content'
+
+acq_cart.cart_config:
+  path: '/admin/commerce/config/cart'
+  defaults:
+    _form: '\Drupal\acq_cart\Form\CartConfigForm'
+    _title: 'Cart Configuration'
+  requirements:
+    _permission: 'access commerce administration pages'
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/config/install/acq_cart.config.yml b/docroot/modules/commerce/acq_commerce/modules/acq_cart/config/install/acq_cart.config.yml
new file mode 100644
index 0000000..e57c049
--- /dev/null
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/config/install/acq_cart.config.yml
@@ -0,0 +1 @@
+max_cart_qty: '10'
diff --git a/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CartConfigForm.php b/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CartConfigForm.php
new file mode 100644
index 0000000..5cb258d
--- /dev/null
+++ b/docroot/modules/commerce/acq_commerce/modules/acq_cart/src/Form/CartConfigForm.php
@@ -0,0 +1,55 @@
+<?php
+
+namespace Drupal\acq_cart\Form;
+
+use Drupal\Core\Form\ConfigFormBase;
+use Drupal\Core\Form\FormStateInterface;
+
+/**
+ * Class CartConfigForm
+ */
+class CartConfigForm extends ConfigFormBase {
+
+  /**
+   * {@inheritDoc}
+   */
+  public function getFormId() {
+    return 'acq_cart_config';
+  }
+
+  /**
+   * {@inheritDoc}
+   */
+  public function getEditableConfigNames()
+  {
+    return ['acq_cart.config'];
+  }
+
+  /**
+   * {@inheritDoc}
+   */
+  public function submitForm(array &$form, FormStateInterface $form_state) {
+
+    $this->config('acq_cart.config')
+      ->set('max_cart_qty', $form_state->getValue('max_cart_qty'))
+      ->save();
+
+    return parent::submitForm($form, $form_state);
+  }
+
+  /**
+   * {@inheritDoc}
+   */
+  public function buildForm(array $form, FormStateInterface $form_state) {
+    $config = $this->config('acq_cart.config');
+    $form['max_cart_qty'] = array(
+      '#type' => 'textfield',
+      '#description' => $this->t('Maximum number of products user can buy from cart page.'),
+      '#title' => $this->t('Maximum Cart Quantity'),
+      '#required' => TRUE,
+      '#default_value' => $config->get('max_cart_qty'),
+    );
+
+    return parent::buildForm($form, $form_state);
+  }
+}
