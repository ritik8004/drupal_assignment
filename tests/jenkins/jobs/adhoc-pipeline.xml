<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Runs pipeline with custom parameters</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.34">
      <autoRebuild>true</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Tags</name>
          <description>You can provide multiple tags separated by comma i.e. @tag_a,@tag_b
If you want to limit to a Feature that contains only specified tags, use @tag_a&amp;&amp;@tag_b
To exclude tags use ~@tag_b
</description>
          <defaultValue>@smoke</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Brand</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>vs</string>
              <string>hm</string>
              <string>cos</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Market</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ae</string>
              <string>kw</string>
              <string>sa</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TargetEnv</name>
          <description>Environment</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>uat</string>
              <string>qa</string>
              <string>live</string>
              <string>local</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Language</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>en</string>
              <string>ar</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Device</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>desktop</string>
              <string>mobile</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3536.vb_8a_6628079d5">
    <script>pipeline {
    agent any

    environment {
        CONTAINER = &apos;jenkins_appserver&apos;
    }

    stages {
        stage(&apos;Preparation&apos;) {
            environment {
                SITE = &quot;${Brand}-${Market}-${TargetEnv}-${Language}&quot;
            }
            steps {
                // Run Behat rebuild script
                sh &apos;docker exec -t ${CONTAINER} sh -c &quot;cd /behat &amp;&amp; ./behat-build.sh --rebuild=TRUE --site=${SITE}&quot;&apos;
            }
        }
        stage(&apos;Test&apos;) {
            environment {
                PROFILE = &quot;${Brand}-${Market}-${TargetEnv}-${Language}-${Device}&quot;
            }
            steps {
                // Run Behat tests
                sh &apos;docker exec -t ${CONTAINER} sh -c \&quot;cd /behat &amp;&amp; ./bin/behat --profile=${PROFILE} --format cucumber_json --tags=\&quot;${Tags}\&quot; \&quot;&apos;
            }
        }
    }
    post {
        always {
            // Copy cucumber report into workspace
            sh &apos;cp -a /tmp/cucumber &quot;${WORKSPACE}/&quot;&apos;
            // Report
            cucumber buildStatus: &apos;UNSTABLE&apos;,
                    classifications: [
                            [key: &apos;Commit&apos;, value: &apos;&lt;a href=&quot;${GERRIT_CHANGE_URL}&quot;&gt;${GERRIT_PATCHSET_REVISION}&lt;/a&gt;&apos;],
                            [key: &apos;Submitter&apos;, value: &apos;${GERRIT_PATCHSET_UPLOADER_NAME}&apos;]
                    ],
                    reportTitle: &apos;Final Report&apos;,
                    jsonReportDirectory: &apos;cucumber&apos;,
                    fileIncludePattern: &apos;**/reportdefault.json&apos;,
                    sortingMethod: &apos;ALPHABETICAL&apos;,
                    trendsLimit: 100
        }
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
