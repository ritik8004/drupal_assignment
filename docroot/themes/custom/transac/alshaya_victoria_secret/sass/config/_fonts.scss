@import "../../alshaya_white_label/sass/config/_fonts.scss";

// Define Fonts
@font-face {
  font-family: "GESSTwoLight-Light";
  src: url("../fonts/GESSTwoLight.eot");
  src:
    url("../fonts/GESSTwoLight.eot?#iefix") format("embedded-opentype"),
    url("../fonts/GESSTwoLight.otf") format("opentype"),
    url("../fonts/GESSTwoLight.svg") format("svg"),
    url("../fonts/GESSTwoLight.ttf") format("truetype"),
    url("../fonts/GESSTwoLight.woff") format("woff"),
    url("../fonts/GESSTwoLight.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "DroidArabicKufi";
  src: url("../fonts/DroidArabicKufi.eot");
  src:
    url("../fonts/DroidArabicKufi.eot?#iefix") format("embedded-opentype"),
    url("../fonts/DroidArabicKufi.svg") format("svg"),
    url("../fonts/DroidArabicKufi.ttf") format("truetype"),
    url("../fonts/DroidArabicKufi.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "DroidArabicKufi-Bold";
  src: url("../fonts/DroidArabicKufi-Bold.eot");
  src:
    url("../fonts/DroidArabicKufi-Bold.eot?#iefix") format("embedded-opentype"),
    url("../fonts/DroidArabicKufi-Bold.svg") format("svg"),
    url("../fonts/DroidArabicKufi-Bold.ttf") format("truetype"),
    url("../fonts/DroidArabicKufi-Bold.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Book";
  src: url("../fonts/BentonSans-Book.eot");
  src:
    url("../fonts/BentonSans-Book.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Book.otf") format("opentype"),
    url("../fonts/BentonSans-Book.svg") format("svg"),
    url("../fonts/BentonSans-Book.ttf") format("truetype"),
    url("../fonts/BentonSans-Book.woff") format("woff"),
    url("../fonts/BentonSans-Book.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Bold";
  src: url("../fonts/BentonSans-Bold.eot");
  src:
    url("../fonts/BentonSans-Bold.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Bold.otf") format("opentype"),
    url("../fonts/BentonSans-Bold.svg") format("svg"),
    url("../fonts/BentonSans-Bold.ttf") format("truetype"),
    url("../fonts/BentonSans-Bold.woff") format("woff"),
    url("../fonts/BentonSans-Bold.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Medium";
  src: url("../fonts/BentonSans-Medium.eot");
  src:
    url("../fonts/BentonSans-Medium.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Medium.otf") format("opentype"),
    url("../fonts/BentonSans-Medium.svg") format("svg"),
    url("../fonts/BentonSans-Medium.ttf") format("truetype"),
    url("../fonts/BentonSans-Medium.woff") format("woff"),
    url("../fonts/BentonSans-Medium.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Regular";
  src: url("../fonts/BentonSans-Regular.eot");
  src:
    url("../fonts/BentonSans-Regular.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Regular.otf") format("opentype"),
    url("../fonts/BentonSans-Regular.svg") format("svg"),
    url("../fonts/BentonSans-Regular.ttf") format("truetype"),
    url("../fonts/BentonSans-Regular.woff") format("woff"),
    url("../fonts/BentonSans-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "HarrietDisplay";
  src: url("../fonts/HarrietDisplay.eot");
  src:
    url("../fonts/HarrietDisplay.eot?#iefix") format("embedded-opentype"),
    url("../fonts/HarrietDisplay.otf") format("opentype"),
    url("../fonts/HarrietDisplay.svg") format("svg"),
    url("../fonts/HarrietDisplay.ttf") format("truetype"),
    url("../fonts/HarrietDisplay.woff") format("woff"),
    url("../fonts/HarrietDisplay.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'alshaya-icons';
  src: url('../fonts/alshaya-icons.eot?yy6ec5');
  src:
    url('../fonts/alshaya-icons.eot?yy6ec5#iefix') format('embedded-opentype'),
    url('../fonts/alshaya-icons.ttf?yy6ec5') format('truetype'),
    url('../fonts/alshaya-icons.woff?yy6ec5') format('woff'),
    url('../fonts/alshaya-icons.svg?yy6ec5#alshaya-icons') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "PinkSans";
  src: url("../fonts/vsfonts/pink/megamenu/PinkSans-100.eot");
  src:
    url("../fonts/vsfonts/pink/megamenu/PinkSans-100.eot?#iefix") format("embedded-opentype"),
    url("../fonts/vsfonts/pink/megamenu/PinkSans-100.svg") format("svg"),
    url("../fonts/vsfonts/pink/megamenu/PinkSans-100.ttf") format("truetype"),
    url("../fonts/vsfonts/pink/megamenu/PinkSans-100.woff") format("woff"),
    url("../fonts/vsfonts/pink/megamenu/PinkSans-100.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "PinkSlab";
  src: url("../fonts/vsfonts/pink/titles/PinkSlab-130.eot");
  src:
    url("../fonts/vsfonts/pink/titles/PinkSlab-130.eot?#iefix") format("embedded-opentype"),
    url("../fonts/vsfonts/pink/titles/PinkSlab-130.svg") format("svg"),
    url("../fonts/vsfonts/pink/titles/PinkSlab-130.ttf") format("truetype"),
    url("../fonts/vsfonts/pink/titles/PinkSlab-130.woff") format("woff"),
    url("../fonts/vsfonts/pink/titles/PinkSlab-130.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSansCompMedium";
  src: url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.eot");
  src:
    url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.eot?#iefix") format("embedded-opentype"),
    url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.svg") format("svg"),
    url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.ttf") format("truetype"),
    url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.woff") format("woff"),
    url("../fonts/vsfonts/sport/titles/BentonSansComp_Medium.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

// VS specific font family
// English fonts.
// Adding Arabic fonts as fallback for arabic text to be shown correctly in English site.
$vs-bold: 'BentonSans-Bold', 'DroidArabicKufi-Bold';
$vs-regular: 'BentonSans-Book', 'DroidArabicKufi';
$vspromo: 'HarrietDisplay', 'DroidArabicKufi';
$vspromo-regular: 'BentonSans-Book', 'GESSTwoLight-Light';

// Extra fonts for PDP and Today's Offer
$vs-to-medium: 'BentonSans-Medium';
$vs-to-regular: 'BentonSans-Regular';

// Arabic fonts.
// Adding En fonts so browser prints English characters & numbers correctly in arabic.
$vs-arabic-bold: 'DroidArabicKufi-Bold', 'BentonSans-Bold';
$vs-arabic-regular: 'DroidArabicKufi', 'BentonSans-Book';
$vspromo-arabic: 'DroidArabicKufi', 'HarrietDisplay';
$vspromo-arabic-regular: 'GESSTwoLight-Light', 'BentonSans-Book';

$vs-icons: 'alshaya-icons';
$body_font: $vs-regular;

// Used for victoria's pink super category content.
$pink-pinksans: 'PinkSans';
$pink-pinkslab: 'PinkSlab';

// Used for victoria's sport super category content.
$vs-sport-bentonsanscomp: 'BentonSansCompMedium';

// Override font variables coming from MC, without this we get a 404 as font files are no longer present in VS theme.
$arial: $vs-regular;
$alshaya-bold: $vs-bold;
$alshaya-arabic-bold: $vs-arabic-bold;
$alshaya-thin: $vs-regular;
$arial-nodir: $vs-arabic-regular;
$alshaya-thin-nodir: $vs-regular;
$alshaya-bold-nodir: $vs-bold;
$alshaya-arabic-thin: $vs-arabic-regular;

.cario-font {
  font-family: $vs-arabic-regular;
}

.cario-font-bold {
  font-family: $vs-arabic-bold;
}

$icons: (
  login: "\e929",
  ic_login: "\e929",
  chevrondown: "\25bd",
  ic_chevrondown: "\25bd",
  chevronleft: "\e902",
  chevronright: "\e903",
  chevronup: "\e904",
  arrowup: "\e901",
  check: "\e905",
  close: "\e906",
  checkshape: "\e907",
  circle-stroke-shape: "\e908",
  circle-shape: "\e909",
  checkboxempty: "\e90a",
  checkboxfull: "\e90b",
  delivery: "\e90c",
  direction-fill: "\e90d",
  direction-stroke: "\e90e",
  dropdown-collapse: "\e90f",
  dropdown-expand: "\e910",
  favorite-fill: "\e911",
  favorite-stroke: "\e912",
  paginator-active: "\e913",
  paginator-inactive: "\e914",
  radio-empty: "\e915",
  radio-filled: "\e916",
  rating-empty: "\e917",
  rating-filled: "\e918",
  video path1: "\e919",
  video path2: "\e91a",
  loader path1: "\e91b",
  loader path2: "\e91c",
  loader path3: "\e91d",
  search: "\e91e",
  menu: "\e91f",
  list: "\e920",
  shopping-bag: "\e921",
  mappin: "\e922",
  map: "\e923",
  mylocation: "\e924",
  newsletter: "\e925",
  rewards: "\e926",
  language: "\e927",
  infomation: "\e928",
  ic_infomation: "\e928",
  warning: "\2757",
  googleplus: "\1f576",
  facebook: "\1f575",
  twitter: "\1f425",
  pinterest: "\1f4cc",
  instagram: "\1f305",
  youtube: "\1f4fa",
  price-tag: "\e93a"
);

@mixin iconbase() {
  font-family: $vs-icons;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin icon($icon: false, $position: before, $styles: true) {
  @if $position == both {
    $position: 'before, &:after';
  }

  &:#{$position} {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }

    @if $styles {
      @include iconbase;
    }

    @content;
  }
}

[class^="icon-"],
[class*=" icon-"] {
  &::before {
    @include iconbase;
  }
}

@each $icon, $unicode in $icons {
  %icon-#{$icon},
  .icon-#{$icon} {
    &::before {
      content: $unicode;
    }
  }
}
