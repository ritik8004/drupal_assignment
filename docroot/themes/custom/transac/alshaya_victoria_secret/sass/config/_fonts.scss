@import "../../alshaya_white_label/sass/config/_fonts.scss";

// Define Fonts
@font-face {
  font-family: "GESSTwoLight-Light";
  src: url("../fonts/GESSTwoLight.eot");
  src:
    url("../fonts/GESSTwoLight.eot?#iefix") format("embedded-opentype"),
    url("../fonts/GESSTwoLight.otf") format("opentype"),
    url("../fonts/GESSTwoLight.svg") format("svg"),
    url("../fonts/GESSTwoLight.ttf") format("truetype"),
    url("../fonts/GESSTwoLight.woff") format("woff"),
    url("../fonts/GESSTwoLight.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "DroidArabicKufi-Light";
  src: url("../fonts/droidkufi-regular.eot");
  src:
    url("../fonts/droidkufi-regular.eot?#iefix") format("embedded-opentype"),
    url("../fonts/droidkufi-regular.svg") format("svg"),
    url("../fonts/droidkufi-regular.ttf") format("truetype"),
    url("../fonts/droidkufi-regular.woff") format("woff"),
    url("../fonts/droidkufi-regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "DroidArabicKufi-Bold";
  src: url("../fonts/droidkufi-bold.eot");
  src:
    url("../fonts/droidkufi-bold.eot?#iefix") format("embedded-opentype"),
    url("../fonts/droidkufi-bold.svg") format("svg"),
    url("../fonts/droidkufi-bold.ttf") format("truetype"),
    url("../fonts/droidkufi-bold.woff") format("woff"),
    url("../fonts/droidkufi-bold.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Regular";
  src: url("../fonts/BentonSans-Light.eot");
  src:
    url("../fonts/BentonSans-Light.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Light.otf") format("opentype"),
    url("../fonts/BentonSans-Light.svg") format("svg"),
    url("../fonts/BentonSans-Light.ttf") format("truetype"),
    url("../fonts/BentonSans-Light.woff") format("woff"),
    url("../fonts/BentonSans-Light.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "BentonSans-Medium";
  src: url("../fonts/BentonSans-Medium.eot");
  src:
    url("../fonts/BentonSans-Medium.eot?#iefix") format("embedded-opentype"),
    url("../fonts/BentonSans-Medium.otf") format("opentype"),
    url("../fonts/BentonSans-Medium.svg") format("svg"),
    url("../fonts/BentonSans-Medium.ttf") format("truetype"),
    url("../fonts/BentonSans-Medium.woff") format("woff"),
    url("../fonts/BentonSans-Medium.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'alshaya-icons';
  src: url('../fonts/font-icons.eot?yy6ec8');
  src:
    url('../fonts/font-icons.eot?yy6ec8#iefix') format('embedded-opentype'),
    url('../fonts/font-icons.ttf?yy6ec8') format('truetype'),
    url('../fonts/font-icons.woff?yy6ec8') format('woff'),
    url('../fonts/font-icons.svg?yy6ec8#font-icons') format('svg');
  font-weight: normal;
  font-style: normal;
}

// VS specific font family
// English fonts.
// Adding Arabic fonts as fallback for arabic text to be shown correctly in English site.
$vs-bold: 'BentonSans-Medium', 'DroidArabicKufi-Bold';
$vs-regular: 'BentonSans-Regular', 'DroidArabicKufi-Light';
$vspromo-regular: 'BentonSans-Regular', 'GESSTwoLight-Light';

// Arabic fonts.
// Adding En fonts so browser prints English characters & numbers correctly in arabic.
$vs-arabic-bold: 'BentonSans-Medium', 'DroidArabicKufi-Bold';
$vs-arabic-regular: 'BentonSans-Regular', 'DroidArabicKufi-Light';
$vspromo-arabic-regular: 'BentonSans-Regular', 'GESSTwoLight-Light';

$vs-icons: 'alshaya-icons';
$body_font: $vs-regular;

// Override font variables coming from MC, without this we get a 404 as font files are no longer present in VS theme.
$arial: $vs-regular;
$alshaya-bold: $vs-bold;
$alshaya-arabic-bold: $vs-arabic-bold;
$alshaya-thin: $vs-regular;
$alshaya-arabic-thin: $vs-arabic-regular;

$icons: (
  login: "\e929",
  chevrondown: "\25bd",
  chevronleft: "\e901",
  chevronright: "\e902",
  chevronup: "\e903",
  check: "\e904",
  close: "\e905",
  checkshape: "\e906",
  circle-stroke-shape: "\e907",
  circle-shape: "\e908",
  check-box-empty: "\e909",
  check-box-filled: "\e90a",
  delivery: "\e90b",
  direction-fill: "\e90c",
  direction-stroke: "\e90d",
  dropdown-collapse: "\e90e",
  dropdown-expand: "\e90f",
  favorite-fill: "\e910",
  favorite-stroke: "\e911",
  paginator-active: "\e912",
  paginator-inactive: "\e913",
  radio-empty: "\e914",
  radio-filled: "\e915",
  rating-empty: "\e916",
  rating-filled: "\e917",
  video path1: "\e918",
  video path2: "\e919",
  loader path1: "\e91a",
  loader path2: "\e91b",
  loader path3: "\e91c",
  search: "\e91d",
  menu: "\e91e",
  list: "\e91f",
  shopping-bag: "\e920",
  mappin: "\e921",
  map: "\e922",
  mylocation: "\e923",
  newsletter: "\e924",
  rewards: "\e926",
  language: "\e927",
  info: "\e928",
  warning: "\2757",
  googleplus: "\1f576",
  facebook: "\1f575",
  twitter: "\1f425",
  pinterest: "\1f4cc",
  instagram: "\1f305",
  youtube: "\1f4fa"
);

@mixin iconbase() {
  font-family: $vs-icons;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin icon($icon: false, $position: before, $styles: true) {
  @if $position == both {
    $position: 'before, &:after';
  }

  &:#{$position} {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }

    @if $styles {
      @include iconbase;
    }

    @content;
  }
}

[class^="icon-"],
[class*=" icon-"] {
  &::before {
    @include iconbase;
  }
}

@each $icon, $unicode in $icons {
  %icon-#{$icon},
  .icon-#{$icon} {
    &::before {
      content: $unicode;
    }
  }
}
