/**
  * Image path
 */
$base_theme_img_directory_path: '/themes/custom/transac/alshaya_white_label/imgs';
$base_theme_loader_img_directory_path: '/themes/custom/transac/alshaya_white_label/imgs/icons/MC-loader.svg';
$brand_theme_img_directory_path: '/themes/custom/transac/alshaya_white_label/imgs';

/**
  * ALIGNMENT
 */
@mixin u-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin u-center--horizontally {
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
}

@mixin u-center--vertically {
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
}

/**
  * VISIBILITY
 */
@mixin u-visibility($state, $important: false) {
  @if $important {
    display: $state !important;
  }

  @else {
    display: $state;
  }
}

/**
  * Helpers
 */
// Image Replacement
@mixin u-image-replacement {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// Overlay Content
@mixin u-overlay-content {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;

  .ie & {
    /* IE 8 */
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";

    /* IE 5-7 */
    filter: alpha(opacity=0);

    /* IE 10 */
    opacity: 0;
    background: white;
  }
}

// @TODO: Replace the classes below with mixins.
// Classes
%show-overlay,
.show-overlay {
  @include breakpoint($upto-desktop) {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      background-color: $header_mobile_menu_overlay !important;
      z-index: 1 !important;
      transition: none !important;
      opacity: 1 !important;
    }
  }
}

.no-animate {
  &::before {
    transition: none !important;
  }
}

%modal-overlay,
.modal-overlay,
body.modal-overlay {
  height: initial;
  width: 100%;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 7;
    opacity: 1;

    @include breakpoint($desktop) {
      pointer-events: unset;
      height: 100%;
      width: 100%;
    }
  }
}

body {
  &.reduce-zindex {
    .header--wrapper,
    .branding__menu {
      z-index: auto;
    }
  }
}

%modal-overlay-spinner,
.modal-overlay--spinner {
  @extend %modal-overlay;

  &::before {
    position: fixed;
    background: rgba(255, 255, 255, 0.5);
    z-index: 1000;
  }

  &::after {
    content: '';
    position: fixed;
    top: 50%;
    right: 0;
    left: 0;
    transform: translateY(-50%);
    background-image: url(#{$base_theme_loader_img_directory_path});
    background-repeat: no-repeat;
    background-size: contain;
    margin: 0 auto;
    width: 6rem;
    height: 6rem;
    z-index: 1001;
  }
}

.mobile-only-block {
  @include breakpoint($tablet) {
    display: none;
  }
}

.tablet-only-block {
  display: none;

  @include breakpoint($only-tablet) {
    display: block;
  }
}

.above-mobile-block {
  display: none;

  @include breakpoint($tablet) {
    display: block;
  }
}

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Fade Effect.
@keyframes fadeEffect {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

// Mixin for truncating lines in text and adding ellipsis to the end.
@mixin truncateAfterLines($line-height: 1, $lines: 2, $font-size: 12px) {
  display: block; /* Fallback for non-webkit */
  font-size: $font-size;
  line-height: $line-height;
  height: $font-size*$lines*$line-height;  /* Fallback for non-webkit */
  overflow: hidden;
  text-overflow: ellipsis;
}

// Mixin for Sticky button.
@mixin stickyButton($left-postion: 0, $zindex: 5) {
  position: fixed;
  bottom: 0;
  #{$left}: $left-postion;
  z-index: $zindex;
  margin-bottom: 0;
  border: 0.5rem solid;
  box-shadow: 0 -1px 20px 9px $sticky-btn;
  transition-property: none !important;
}

// Mixin for adding a full page spinner. Used on Slug modal links and campaign-plp-style-1 static modal links.
// Can be used anywhere when you need a full screen loader.
@mixin fullPageLoader() {
  position: fixed !important;
  width: 100% !important;
  height: 100%;
  top: 0 !important;
  #{$left}: 0 !important;
  background: $primary_full_page_overlay_bg;
  z-index: 9999;
  visibility: visible;

  @content;

  .message {
    display: none;
  }

  .throbber {
    bottom: 0;
    #{$left}: 0;
    margin: auto;
    position: fixed;
    #{$right}: 0;
    top: 0;
    z-index: 100;
    background: url(#{$base_theme_loader_img_directory_path}) center no-repeat !important;
    background-size: 5.5rem !important;
    padding-#{$left}: 0.625rem;
    padding-#{$right}: 0.625rem;
    width: 100%;
    height: auto;
  }
}

// Mixin to add a spinner.
// Can be used anywhere when you need a loader
@mixin throbberLoader() {
  background-image: url(#{$base_theme_loader_img_directory_path}) !important;
  background-position: center center !important;
  background-repeat: no-repeat !important;
  background-size: 1.5rem;
  padding-left: 0.625rem;
  padding-right: 0.625rem;

  @content;
}

// Mixin styles the label input fields.
// Apply on label inside form elements.
@mixin placeholder-label() {
  font-size: 1rem;
  color: $primary_input_label;
  position: absolute;
  #{$left}: 0;
  top: -0.125rem;
  transition: font-size 0.2s ease-in-out, top 0.2s ease-in-out;
  pointer-events: none;
}

// To be used with placeholder-label to give transition when input is active.
// Aplly on imput:foucs, etc.
@mixin placeholder-active() {
  top: -1.25em;
  bottom: 0;
  #{$left}: 0;
  opacity: 1;
  font-size: 0.75rem;
}

// When you need to block any user action until a AJAX is finished.
@mixin fullPageTransparentOverlay($pseudo-element: after) {
  &::#{$pseudo-element} {
    content: '';
    background: transparent;
    position: fixed;
    top: 0;
    #{$left}: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    cursor: progress;
  }
}

// Add a component level loader which shall add a loader in place of the component.
@mixin componentLoader($background-color, $pseudo-element) {
  &.loading {
    color: transparent;
    background: $background-color url(#{$base_theme_loader_img_directory_path}) center center no-repeat;
    background-size: contain;
    // Prevent clicks and selection.
    pointer-events: none;
    user-select: none;

    @content;

    @include fullPageTransparentOverlay($pseudo-element);
  }
}

// Allow things to be hidden visually without changing visibility.
.whiteout {
  opacity: 0;
}

@mixin arabic-letter-spacing {
  html[lang='ar'] & {
    letter-spacing: normal;
  }
}

@mixin arabic-line-height ($value) {
  html[lang='ar'] & {
    line-height: $value;
  }
}

// This mixin can be used to keep text in a single line.
// where text overflows a box can be hidden with dots.
@mixin ellipsis-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// This mixin can be used for tooltip with the below HTML structure
// <div class="empty-stars">
//    <div class="histogram-data"></div>
// </div>
// here the parent class (empty-stars) should have position relative.
// Child class (histogram-data) should call the @mixin tooltip
// .empty-stars:hover .histogram-data we have to call tooltip-display
@mixin tooltip ($width) {
  width: $width;
  position: absolute;
  #{$left}: 0%;
  top: 100%;
  margin: 0.625rem 0;
  padding: 1rem;
  border: 0.0625rem solid $rr-tooltip-border;
  visibility: hidden;
  opacity: 0;
  text-align: $left;
  transition: opacity 0.2s linear;
  z-index: 100;
  background: $rr-tooltip-bg;

  @include breakpoint($only-mobile) {
    #{$left}: -95%;
  }

  @content;
}

@mixin tooltip-display () {
  visibility: visible;
  opacity: 1;
}
