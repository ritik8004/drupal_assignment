# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
        arguments:
            $logger: '@monolog.logger.appointment_middleware'

    # This formats the log messages as per drupal like.
    alshaya_appointment_middleware.log_fromatter:
        class: App\Logger\Formatter\MiddlewareLogFormatter

    # This process and add extra info like ip, uri etc to logs.
    # No class for this as this is built in monolog processor.
    Monolog\Processor\WebProcessor:
        tags: ['monolog.processor']

    Monolog\Processor\PsrLogMessageProcessor:
        tags: ['monolog.processor']

    # Decorates the syslog handler.
    App\Logger\Decorator\SysLogDecorator:
        decorates: monolog.handler.syslog
        arguments:
            - '@alshaya_appointment_middleware.log_fromatter'

    App\EventListener\KernelEventsListener:
      tags:
        - { name: kernel.event_listener, event: kernel.response }
        - { name: kernel.event_listener, event: kernel.request }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
