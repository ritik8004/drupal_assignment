<?php

/**
 * @file
 * Module file.
 */

use Drupal\acq_sku\Entity\SKU;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_theme().
 */
function alshaya_click_collect_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['pdp_click_collect_default'] = [
    'render element' => 'elements',
    'variables' => [
      'state' => NULL,
      'sku' => NULL,
      'type' => NULL,
      'title' => NULL,
      'subtitle' => NULL,
      'title_price' => NULL,
      'help_text' => NULL,
      'store_finder_form' => NULL,
      'select_option_text' => NULL,
    ],
  ];

  $items['pdp_click_collect_all_stores'] = [
    'render element' => 'elements',
    'variables' => [
      'title' => NULL,
      'subtitle' => NULL,
      'help_text' => NULL,
      'stores' => NULL,
      'store_finder_form' => NULL,
    ],
  ];

  $items['pdp_click_collect_top_stores'] = [
    'render element' => 'elements',
    'variables' => [
      'stores' => NULL,
      'has_more' => NULL,
    ],
  ];

  $items['click_collect_stores_list'] = [
    'render element' => 'elements',
    'variables' => [
      'title' => NULL,
      'stores' => NULL,
    ],
  ];

  $items['click_collect_store_info_window_list'] = [
    'render element' => 'elements',
    'variables' => [
      'stores' => NULL,
    ],
  ];

  $items['click_collect_selected_store'] = [
    'render element' => 'elements',
    'variables' => [
      'store' => NULL,
    ],
  ];

  return $items;
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function alshaya_click_collect_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() == 'acq_product' && $build['#view_mode'] == 'full') {
    // Adding cache tags for the on-off feature.
    $build['#cache']['tags'][] = 'click-collect-cache-tag';

    // Adding shipping options.
    \Drupal::moduleHandler()->loadInclude('alshaya_acm_product', 'inc', 'alshaya_acm_product.utility');

    $sku = $entity->get('field_skus')->first()->getString();
    $sku_entity = SKU::loadFromSku($sku);

    $config = \Drupal::config('alshaya_click_collect.settings');

    // Click and collect availability for given sku.
    $state = alshaya_acm_product_available_click_collect($sku);

    // Here we just show static text, we will get stores info using ajax.
    // We need lat/lon info of user to get stores.
    $store_form = \Drupal::formBuilder()->getForm('\Drupal\alshaya_click_collect\Form\ClickCollectAvailableStores');
    $build['click_and_collect'] = [
      '#theme' => 'pdp_click_collect_default',
      '#state' => $state ? 'enabled' : 'disabled',
      '#sku' => $sku,
      '#type' => $sku_entity->bundle(),
      '#title' => $config->get('pdp_click_collect_title'),
      '#title_price' => alshaya_acm_price_get_formatted_price((float) $config->get('pdp_click_collect_price')),
      '#subtitle' => $state ? $config->get('pdp_click_collect_subtitle') : $config->get('pdp_click_collect_unavailable'),
      '#help_text' => $config->get('pdp_click_collect_help_text.value'),
      '#select_option_text' => $config->get('pdp_click_collect_select_option_text.value'),
      '#store_finder_form' => render($store_form),
      '#attached' => [
        'drupalSettings' => [
          'alshaya_click_collect' => [
            'pdp' => ['ajax_call' => FALSE],
            // Default site country to limit autocomplete result.
            'country' => _alshaya_custom_get_site_level_country_code(),
          ],
        ],
        'library' => [
          'alshaya_click_collect/click-and-collect.pdp',
        ],
      ],
    ];
  }
}

/**
 * Implements hook_geolocation_google_maps_parameters().
 */
function alshaya_click_collect_geolocation_google_maps_parameters() {
  return [
    'libraries' => [
      'places',
    ],
    'language' => \Drupal::languageManager()->getCurrentLanguage()->getId(),
  ];
}
