<?php

/**
 * @file
 * Install, update and uninstall hooks for alshaya_facets_pretty_paths module.
 */

use Drupal\facets_summary\Entity\FacetsSummary;

/**
 * Implements hook_install().
 */
function alshaya_facets_pretty_paths_install() {
  _alshaya_facets_pretty_paths_enable_pretty_path('plp');
}

/**
 * Implements hook_uninstall().
 */
function alshaya_facets_pretty_paths_uninstall() {
  $mappings = _alshaya_facets_pretty_paths_get_mappings();

  /* @var \Drupal\facets\FacetInterface[] $facets */
  $facets = \Drupal::service('facets.manager')->getEnabledFacets();

  foreach ($mappings as $mapping) {
    $source = \Drupal::configFactory()
      ->getEditable('facets.facet_source.search_api__' . $mapping['id']);
    if ($source->get('url_processor') != 'alshaya_facets_pretty_paths') {
      continue;
    }

    // Revert url processor.
    $source->set('url_processor', 'query_string');
    $source->save();

    // Revert url alias for facets.
    foreach ($facets as $facet) {
      if ($facet->getFacetSourceId() == 'search_api:' . $mapping['id']) {
        $alias = $facet->getThirdPartySetting('alshaya_facets_pretty_paths', 'url_alias', $facet->getUrlAlias());
        $facet->setUrlAlias($alias);
        $facet->save();
      }
    }

    // Set the facets_summary processor back to reset_facets.
    $summary = FacetsSummary::load($mapping['summary']);
    if ($summary instanceof FacetsSummary) {
      $processor_configs = $summary->getProcessorConfigs();
      if (isset($processor_configs['alshaya_reset_facets'])) {
        $processor_configs['alshaya_reset_facets']['processor_id'] = 'reset_facets';
        $summary->addProcessor($processor_configs['alshaya_reset_facets']);
        $summary->removeProcessor('alshaya_reset_facets');
        $summary->save();
      }
    }
  }
}

/**
 * Wrapper function to enable pretty path for specific listing page type.
 *
 * @param string $type
 *   Page type - plp / promo / search.
 */
function _alshaya_facets_pretty_paths_enable_pretty_path(string $type) {
  $mapping = _alshaya_facets_pretty_paths_get_mappings()[$type];

  /* @var \Drupal\facets\FacetInterface[] $facets */
  $facets = \Drupal::service('facets.manager')->getEnabledFacets();

  // The url processor for facet_source and reset_facets processor
  // for facets_summary both need to be changed for pretty facets to work.
  // Set the url processor as alshaya_pretty_paths for PLP.
  \Drupal::configFactory()
    ->getEditable('facets.facet_source.search_api__' . $mapping['id'])
    ->set('url_processor', 'alshaya_facets_pretty_paths')
    ->save();

  // Set url alias for facets.
  foreach ($facets as $facet) {
    if ($facet->getFacetSourceId() == 'search_api:' . $mapping['id']) {
      $facet->setThirdPartySetting('alshaya_facets_pretty_paths', 'url_alias', $facet->getUrlAlias());
      $alias = $mapping['alias'][$facet->id()] ?? strtolower(str_replace(' ', '_', $facet->get('name')));
      $facet->setUrlAlias($alias);
      $facet->save();
    }
  }

  // Set the facets_summary processor as alshaya_reset_facets for PLP.
  $summary = FacetsSummary::load($mapping['summary']);

  if ($summary instanceof FacetsSummary) {
    $processor_configs = $summary->getProcessorConfigs();
    if (isset($processor_configs['reset_facets'])) {
      $processor_configs['reset_facets']['processor_id'] = 'alshaya_reset_facets';
      $summary->addProcessor($processor_configs['reset_facets']);
      $summary->removeProcessor('reset_facets');
      $summary->save();
    }
  }
}
