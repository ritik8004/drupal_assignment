<?php

/**
 * @file
 * Install, update and uninstall hooks for alshaya_facets_pretty_paths module.
 */

use Drupal\alshaya_config\AlshayaConfigManager;
use Drupal\taxonomy\TermInterface;

/**
 * Implements hook_update_N().
 *
 * [6.1.0] Update third party settings for facets.
 */
function alshaya_facets_pretty_paths_update_8008() {
  /** @var \Drupal\alshaya_facets_pretty_paths\AlshayaFacetsPrettyPathsHelper $helper */
  $helper = \Drupal::service('alshaya_facets_pretty_paths.pretty_paths_helper');

  $facets = \Drupal::entityTypeManager()->getStorage('facets_facet')->loadMultiple();

  /** @var \Drupal\facets\FacetInterface $facet */
  foreach ($facets as $facet) {
    // We do it only for PLP here, live sites only have it for PLP.
    if ($facet->getFacetSourceId() === 'search_api:views_block__alshaya_product_list__block_1') {
      $helper->populateThirdPartySettings($facet, 'plp');
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Re-create the table for updating facet alias size.
 */
function alshaya_facets_pretty_paths_update_8007() {
  $schema = alshaya_facets_pretty_paths_schema();
  \Drupal::database()->schema()->dropTable('facets_pretty_path');
  \Drupal::database()->schema()->createTable('facets_pretty_path', $schema['facets_pretty_path']);

  // Queue all products so the aliases are created properly again.
  \Drupal::service('alshaya_acm_product.product_queue_utility')->queueAllProducts();
}

/**
 * Implements hook_update_N().
 *
 * Update url alias for "field_category".
 */
function alshaya_facets_pretty_paths_update_8006(&$sandbox) {
  $entity_type_manager = \Drupal::entityTypeManager()->getStorage('facets_facet');
  $facet = $entity_type_manager->load('category_facet_search');
  $facet->setUrlAlias('category');
  $facet->save();
}

/**
 * Implements hook_update_N().
 *
 * Add index on language and drop on language + facet_alias combination.
 */
function alshaya_facets_pretty_paths_update_8005() {
  $schema = alshaya_facets_pretty_paths_schema();

  \Drupal::database()->schema()->dropIndex('facets_pretty_path', 'filter_facet_alias');

  \Drupal::database()->schema()->addIndex(
    'facets_pretty_path',
    'filter_language',
    $schema['facets_pretty_path']['indexes']['filter_language'],
    $schema['facets_pretty_path']
  );
}

/**
 * Implements hook_update_N().
 *
 * Re-create the table for storing facet alias mapping.
 */
function alshaya_facets_pretty_paths_update_8004() {
  $schema = alshaya_facets_pretty_paths_schema();

  \Drupal::database()->schema()->dropTable('facets_pretty_path');

  \Drupal::database()
    ->schema()
    ->createTable('facets_pretty_path', $schema['facets_pretty_path']);
}

/**
 * Implements hook_update_N().
 *
 * Create the new table for storing facet alias mapping.
 */
function alshaya_facets_pretty_paths_update_8003() {
  $schema = alshaya_facets_pretty_paths_schema();
  \Drupal::database()
    ->schema()
    ->createTable('facets_pretty_path', $schema['facets_pretty_path']);
}

/**
 * Implements hook_update_N().
 *
 * Update values for facet meta type info.
 */
function alshaya_facets_pretty_paths_update_8002() {
  // We do it only for PLP here, live sites only have it for PLP.
  $facets = \Drupal::service('facets.manager')->getFacetsByFacetSourceId('search_api:views_block__alshaya_product_list__block_1');

  /** @var \Drupal\alshaya_facets_pretty_paths\AlshayaFacetsPrettyPathsHelper $helper */
  $helper = \Drupal::service('alshaya_facets_pretty_paths.pretty_paths_helper');

  // Done in drush pretty-paths-toggle --action=en for new sites.
  foreach ($facets as $facet) {
    $helper->populateThirdPartySettings($facet, 'plp');
  }
}

/**
 * Implements hook_update_N().
 *
 * Use hyphen in alias for slash (punctuation).
 * Update path aliases for terms with slash.
 */
function alshaya_facets_pretty_paths_update_8001() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $manager->updateConfigs(
    ['pathauto.settings'],
    'pathauto',
    'install',
    AlshayaConfigManager::MODE_RESAVE
  );

  $query = \Drupal::database()->select('taxonomy_term_field_data', 'ttfd');
  $query->addField('ttfd', 'tid');
  $query->condition('name', '%/%', 'LIKE');
  $result = $query->execute()->fetchAllKeyed(0, 0);

  $termStorage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  foreach ($result as $tid) {
    $term = $termStorage->load($tid);

    // Sanity check.
    if (!($term instanceof TermInterface)) {
      continue;
    }

    foreach ($term->getTranslationLanguages() as $language) {
      $translation = $term->getTranslation($language->getId());
      $translation->path->pathauto = 1;
      $translation->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function alshaya_facets_pretty_paths_uninstall() {
  $mappings = _alshaya_facets_pretty_paths_get_mappings();

  foreach ($mappings as $key => $mapping) {
    \Drupal::service('alshaya_facets_pretty_paths.commands')->disablePrettyPaths($key);
  }
}

/**
 * Implements hook_schema().
 */
function alshaya_facets_pretty_paths_schema() {
  $schema = [];

  $schema['facets_pretty_path'] = [
    'description' => 'Pretty path aliases.',
    'fields' => [
      'value' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Actual value of facet.',
      ],
      'alias' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'Alias value to use in URL.',
      ],
      'facet_alias' => [
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Facet Alias value to use in URL.',
      ],
      'language' => [
        'type' => 'varchar_ascii',
        'length' => 5,
        'not null' => TRUE,
        'description' => 'Language for value.',
      ],
    ],
    'unique keys' => [
      'facet_value_language' => ['alias', 'facet_alias', 'language'],
    ],
    'indexes' => [
      'filter_language' => ['language'],
    ],
  ];

  return $schema;
}
