<?php

/**
 * @file
 * Install, update and uninstall hooks for alshaya_facets_pretty_paths module.
 */

use Drupal\alshaya_config\AlshayaConfigManager;
use Drupal\taxonomy\TermInterface;
use Drupal\alshaya_facets_pretty_paths\AlshayaFacetsPrettyPathsHelper;

/**
 * Implements hook_update_N().
 *
 * Update values for facet meta type info.
 */
function alshaya_facets_pretty_paths_update_8002() {
  // We do it only for PLP here, live sites only have it for PLP.
  $facets = \Drupal::service('facets.manager')->getFacetsByFacetSourceId('search_api:views_block__alshaya_product_list__block_1');
  $config_factory = \Drupal::configFactory();

  // Done in drush pretty-paths-toggle --action=en for new sites.
  foreach ($facets as $facet) {
    $meta_info_type = [
      'type' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_PREFIX,
      'prefix_text' => '',
      'visibility' => [
        AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_PAGE_TITLE,
        AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_META_TITLE,
        AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_META_DESCRIPTION,
      ],
    ];
    if (strpos($facet->id(), 'price') > -1) {
      $meta_info_type['type'] = AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_SUFFIX;
      $meta_info_type['prefix_text'] = $this->t('at');
      $meta_info_type['visibility'] = [AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_META_DESCRIPTION];
    }
    elseif (strpos($facet->id(), 'size') > -1) {
      $meta_info_type['prefix_text'] = $this->t('Size');
    }
    $facet->setThirdPartySetting('alshaya_facets_pretty_paths', 'meta_info_type', $meta_info_type);
    $facet->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Use hyphen in alias for slash (punctuation).
 * Update path aliases for terms with slash.
 */
function alshaya_facets_pretty_paths_update_8001() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $manager->updateConfigs(
    ['pathauto.settings'],
    'pathauto',
    'install',
    AlshayaConfigManager::MODE_RESAVE
  );

  $query = \Drupal::database()->select('taxonomy_term_field_data', 'ttfd');
  $query->addField('ttfd', 'tid');
  $query->condition('name', '%/%', 'LIKE');
  $result = $query->execute()->fetchAllKeyed(0, 0);

  $termStorage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  foreach ($result as $tid) {
    $term = $termStorage->load($tid);

    // Sanity check.
    if (!($term instanceof TermInterface)) {
      continue;
    }

    foreach ($term->getTranslationLanguages() as $language) {
      $translation = $term->getTranslation($language->getId());
      $translation->path->pathauto = 1;
      $translation->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function alshaya_facets_pretty_paths_uninstall() {
  $mappings = _alshaya_facets_pretty_paths_get_mappings();

  foreach ($mappings as $key => $mapping) {
    \Drupal::service('alshaya_facets_pretty_paths.commands')->disablePrettyPaths($key);
  }

}
