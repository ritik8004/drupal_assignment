<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\alshaya_facets_pretty_paths\AlshayaFacetsPrettyPathsHelper;

/**
 * Mappings for specific listing page type to make updates dynamic.
 *
 * @return array
 *   Mappings.
 */
function _alshaya_facets_pretty_paths_get_mappings() {
  $mappings = [
    'plp' => [
      'id' => 'views_block__alshaya_product_list__block_1',
      'summary' => 'filter_bar_plp',
      'alias' => [
        'skus_sku_reference_final_price' => 'price',
        'plp_selling_price' => 'price_range',
        'plp_actual_color_label_code' => 'color_family',
        'plp_color_family' => 'color_family',
      ],
    ],
    'promo' => [
      'id' => 'views_block__alshaya_product_list__block_2',
      'summary' => 'filter_bar_promotions',
      'alias' => [
        'promotion_price_facet' => 'price',
        'promo_selling_price' => 'price_range',
        'promo_actual_color_label_code' => 'color_family',
        'promo_color_family' => 'color_family',
      ],
    ],
    'search' => [
      'id' => 'views_page__search__page',
      'summary' => 'filter_bar',
      'alias' => [
        'final_price' => 'price',
        'selling_price' => 'price_range',
        'actual_color_label_code' => 'color_family',
        'color_family' => 'color_family',
      ],
    ],
  ];

  return $mappings;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_facets_pretty_paths_form_facets_facet_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_build_info = $form_state->getBuildInfo();
  $facet = $form_build_info['callback_object']->getEntity();
  $meta_info_type = $facet->getThirdPartySettings('alshaya_facets_pretty_paths')['meta_info_type'];
  $options = [
    AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_IGNORE => t('Ignore'),
    AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_PREFIX => t('Prefix'),
    AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_SUFFIX => t('Suffix'),
  ];
  $visibility = [
    AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_META_TITLE => t('Title'),
    AlshayaFacetsPrettyPathsHelper::VISIBLE_IN_META_DESCRIPTION => t('Description'),
  ];

  $form['meta_info_type'] = [
    '#type' => 'fieldset',
    '#title' => t('Meta Info Type'),
  ];

  $form['meta_info_type']['type'] = [
    '#type' => 'select',
    '#title' => t('Select Meta Info Type'),
    '#options' => $options,
    '#attributes' => [
      'name' => 'meta_info_type',
    ],
    '#default_value' => isset($meta_info_type['type']) ? $meta_info_type['type'] : AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_IGNORE,
    '#description' => t('Select an option to set the facet value in the meta title of a PLP page'),
  ];
  $form['meta_info_type']['prefix_text'] = [
    '#type' => 'textfield',
    '#title' => t('Prefix Text'),
    '#description' => t('Enter the prefix text to be added before the facet value'),
    '#default_value' => isset($meta_info_type['prefix_text']) ? $meta_info_type['prefix_text'] : NULL,
    '#states' => [
      // Show this textfield only if the type is prefix/suffix.
      'visible' => [
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_PREFIX]],
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_SUFFIX]],
      ],
    ],
  ];

  $form['meta_info_type']['suffix_text'] = [
    '#type' => 'textfield',
    '#title' => t('Suffix Text'),
    '#description' => t('Enter the suffix text to be added after the facet value'),
    '#default_value' => isset($meta_info_type['suffix_text']) ? $meta_info_type['suffix_text'] : NULL,
    '#states' => [
      // Show this textfield only if the type is prefix/suffix.
      'visible' => [
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_PREFIX]],
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_SUFFIX]],
      ],
    ],
  ];

  $form['meta_info_type']['visibility'] = [
    '#type' => 'checkboxes',
    '#title' => t('To be shown in:'),
    '#options' => $visibility,
    '#description' => t('Check to allow the facet to be visible in the mentioned areas.'),
    '#default_value' => isset($meta_info_type['visibility']) ? $meta_info_type['visibility'] : NULL,
    '#required' => TRUE,
    '#states' => [
      // Show this textfield only if the type is prefix/suffix.
      'visible' => [
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_PREFIX]],
        ['select[name="meta_info_type"]' => ['value' => AlshayaFacetsPrettyPathsHelper::FACET_META_TYPE_SUFFIX]],
      ],
    ],
  ];
}

/**
 * Implements hook_page_attachments_alter().
 *
 * If a page has more than one active filter, then we do not want search engines
 * to index that page.
 */
function alshaya_facets_pretty_paths_page_attachments_alter(array &$page) {
  // First, check if we're on a product landing page by checking for a
  // taxonomy term, and then checking the bundle type.
  $routematch = \Drupal::routeMatch();

  if (empty($routematch) || $routematch->getRouteName() != 'entity.taxonomy_term.canonical') {
    return;
  }

  $term = $routematch->getParameter('taxonomy_term');

  if (empty($term) || $term->bundle() != 'acq_product_category') {
    return;
  }

  /** @var \Drupal\alshaya_facets_pretty_paths\AlshayaFacetsPrettyPathsHelper $pretty_paths_helper */
  $pretty_paths_helper = \Drupal::service('alshaya_facets_pretty_paths.pretty_paths_helper');

  if ($pretty_paths_helper->isPrettyPathEnabled('plp')) {
    $summary = $pretty_paths_helper->getFacetSummary('plp');

    // If we have more than two filters, add robots meta.
    if (count($summary) > 3) {
      // Add robots meta tag to page.
      $page['#attached']['html_head']['robots'] = [
        [
          '#tag' => 'meta',
          '#attributes' => [
            'name' => 'robots',
            'content' => 'noindex',
          ],
        ],
        'noindex',
      ];
    }
  }
}
