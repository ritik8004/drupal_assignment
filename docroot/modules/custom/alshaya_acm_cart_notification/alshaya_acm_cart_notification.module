<?php

/**
 * @file
 * Contains form alter for sku base form.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\acq_sku\Entity\SKU;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;
use Drupal\alshaya_acm\EventSubscriber\AddToCartErrorEventSubscriber;

/**
 * Implements hook_form_alter().
 */
function alshaya_acm_cart_notification_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Altering Sku base form, which is the form implementation for Simple,
  // Grouped and Configurable products.
  if ($form_id == 'sku_base_form') {
    // Adding a form element a placeholder to populate as a cart notification.
    $form['cart_notification_modal'] = [
      '#markup' => '',
      '#prefix' => '<div id = "cart_notification">',
      '#suffix' => '</div>',
    ];

    $form['add_to_cart']['#ajax'] = [
      'callback' => 'alshaya_acm_cart_notification_form_submit',
      'wrapper' => 'cart_notification',
    ];

    // Attach the js file with the add to cart form.
    $form['#attached']['library'][] = 'core/drupal.ajax';
    $form['#attached']['library'][] = 'core/drupal.dialog.ajax';
    $form['#attached']['library'][] = 'alshaya_acm_cart_notification/cart_notification_js';
  }
}

/**
 * AJAX callback for the add to cart submit button.
 */
function alshaya_acm_cart_notification_form_submit(&$form, FormStateInterface $form_state) {

  // If there are validation failures on the form.
  if ($form_state->getErrors()) {
    $errors = $form_state->getErrors();
    // Render $errors as list so even multiple errors are properly displayed.
    $error_list = [
      '#theme' => 'item_list',
      '#list_type' => 'ul',
      '#title' => '',
      '#items' => $errors,
      '#attributes' => ['class' => 'error-list'],
      '#wrapper_attributes' => ['class' => 'container'],
    ];

    $error_html = drupal_render($error_list);

    // Use the template to render the error.
    $output = [
      '#theme' => 'add_to_cart_error',
      '#message' => $error_html,
    ];
  }
  // Check if we have an error in Subscriber.
  elseif (AddToCartErrorEventSubscriber::getErrorStatus()) {
    // Use the template to render the error.
    $output = [
      '#theme' => 'add_to_cart_error',
      '#message' => t('Oops! Something went wrong.'),
    ];
  }
  // Show success notification of the product.
  else {
    // Get product type.
    $type = SKU::load($form_state->getValue('sku_id'))->getType();

    // Product Name.
    $product = SKU::load($form_state->getValue('sku_id'));
    $product_name = $product->get('name')->getString();

    // Quantity.
    $quantity = $form_state->getValue('quantity');

    // Generating cart link.
    $url = Url::fromRoute('acq_cart.cart')->toString();

    // Product Image.
    // Check for product type as they have different data structures.
    if ($type == 'configurable') {
      // If we have a child_sku available.
      $child_sku = SKU::loadFromSKU($form_state->getValue('child_sku'));
      \Drupal::moduleHandler()->loadInclude('alshaya_acm_product', 'inc', 'alshaya_acm_product.utility');

      $image = NULL;
      $sku_media = !empty($child_sku) ? alshaya_acm_product_get_sku_media($child_sku) : alshaya_acm_product_get_sku_media($child_sku);

      if ($sku_media) {
        $imageEntity = array_shift($sku_media);
        $image = ImageStyle::load('cart_notification_thumbnail')->buildUrl($imageEntity->getFileUri());
      }
    }
    // Product Type - Simple.
    else {
      \Drupal::moduleHandler()->loadInclude('alshaya_acm_product', 'inc', 'alshaya_acm_product.utility');
      $image = alshaya_acm_product_get_sku_media(SKU::load($form_state->getValue('sku_id'))->getSKU());
      $file_uri = $image[0]->getFileUri();
      $image = ImageStyle::load('cart_notification_thumbnail')
        ->buildUrl($file_uri);
    }

    // Use the template to render the HTML.
    $output = [
      '#theme' => 'cart_notification',
      '#quantity' => $quantity,
      '#image' => $image,
      '#product_name' => $product_name,
      '#link' => $url,
      '#link_text' => t('View Cart.'),
    ];
  }

  $html = drupal_render($output);

  // Ajax Response.
  $response = new AjaxResponse();
  $response->addCommand(new HtmlCommand('#cart_notification', $html));

  return $response;
}

/**
 * Implements hook_theme().
 */
function alshaya_acm_cart_notification_theme($existing, $type, $theme, $path) {
  return [
    'cart_notification' => [
      'variables' => [
        'quantity' => 0,
        'image' => '',
        'product_name' => '',
        'link' => '',
        'link_text' => '',
      ],
      'template' => 'cart-notification',
    ],
    'add_to_cart_error' => [
      'variables' => [
        'message' => '',
      ],
      'template' => 'add-to-cart-error',
    ],
  ];
}
