<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\acq_commerce\SKUInterface;
use Drupal\acq_cart\CartInterface;
use Drupal\acq_sku\Entity\SKU;
use Drupal\alshaya_acm_promotion\Form\SelectFreeGiftForm;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormState;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\alshaya_acm_promotion\AlshayaPromoLabelManager;

/**
 * Implements hook_views_data_alter().
 */
function alshaya_acm_promotion_views_data_alter(array &$data) {
  $data['search_api_index_product']['field_skus']['argument']['id'] = 'alshaya_sku_ignore_whitespaces';
}

/**
 * Implements hook_theme().
 */
function alshaya_acm_promotion_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['cart_top_promotions'] = [
    'variables' => [
      'promotions' => NULL,
      'free_shipping' => NULL,
    ],
  ];

  $items['free_gift_promotions'] = [
    'variables' => [
      'free_sku_entity_id' => NULL,
      'free_sku_code' => NULL,
      'free_sku_title' => NULL,
      'promo_title' => NULL,
      'sku_image' => NULL,
      'promo_code' => NULL,
    ],
  ];

  $items['free_gift_cart_label'] = [
    'variables' => [
      'promos' => NULL,
    ],
  ];

  $items['free_gift_promotion_list'] = [
    'variables' => [
      'message' => NULL,
      'coupon' => NULL,
      'image' => NULL,
      'title' => NULL,
    ],
  ];

  $items['free_gift_item'] = [
    'variables' => [
      'title' => NULL,
      'image' => NULL,
      'url' => NULL,
    ],
  ];

  return $items;
}

/**
 * Implements hook_theme_registry_alter().
 */
function alshaya_acm_promotion_theme_registry_alter(&$theme_registry) {
  $theme_registry['acq_commerce_price']['variables']['promotions'] = NULL;
  $theme_registry['acq_commerce_price']['variables']['final_price'] = NULL;
  $theme_registry['acq_commerce_price']['variables']['discount'] = NULL;
}

/**
 * Implements hook_acq_promotion_promotion_node_alter().
 */
function alshaya_acm_promotion_acq_promotion_promotion_node_alter(Node $node, array $promotion) {
  // Set the Promotion subtype.
  $node->get('field_alshaya_promotion_subtype')
    ->setValue(\Drupal::service('alshaya_acm_promotion.manager')
      ->getSubType($promotion));

  // Set free skus for promotions.
  if (!empty($promotion['free_gift_products'])) {
    $node->get('field_free_gift_skus')->setValue($promotion['free_gift_products']);
  }
}

/**
 * Implements hook_acq_promotion_data_alter().
 */
function alshaya_acm_promotion_acq_promotion_data_alter(&$promotion) {
  $promotion['free_gift_products'] = [];

  // Conductor api version.
  $middleware_version = \Drupal::config('acq_commerce.conductor')->get('api_version');
  // @Todo: remove it when we using v2 for all.
  $extension_key = $middleware_version == 'v2' ? 'extension' : 'extension_attributes';

  // Extract free gift skus & remove them from list of products to be processed
  // for this promotion.
  foreach ($promotion['products'] as $key => $product) {
    if (!empty($product[$extension_key])
      && !empty($product[$extension_key]['ampromo_cart_sku'])
      && ($product[$extension_key]['ampromo_cart_sku'])) {
      $promotion['free_gift_products'][] = $product['product_sku'];
      unset($promotion['products'][$key]);
    }
  }
}

/**
 * Implements hook_acq_sku_base_fields_updated().
 */
function alshaya_acm_promotion_acq_sku_base_fields_updated(array $fields, $op = 'add') {
  /** @var \Drupal\alshaya_search_api\AlshayaSearchApiFacetsManager $facet_manager */
  $facet_manager = \Drupal::service('alshaya_search_api.facets_manager');

  $facet_source_id = 'search_api:views_block__alshaya_product_list__block_2';
  $filter_bar_id = 'facets_summary.facets_summary.filter_bar_promotions';
  $prefix = 'promo';

  switch ($op) {
    case 'add':
      foreach ($fields as $field_code => $field) {
        if (empty($field['facet'])) {
          // We use add even when resetting. Remove facet if available.
          $facet_manager->removeFacet($field_code, $filter_bar_id, $prefix);
          continue;
        }

        $facet_manager->createFacet($field_code, $facet_source_id, $filter_bar_id, $prefix, ['name' => $field['label']]);
      }
      break;

    case 'remove':
      foreach ($fields as $field_code => $field) {
        // Remove from facets if facet is 1.
        if (!empty($field['facet'])) {
          $facet_manager->removeFacet($field_code, $filter_bar_id, $prefix);
        }
      }
      break;
  }
}

/**
 * Implements hook_alshaya_acm_get_remove_from_basket_link_alter().
 */
function alshaya_acm_promotion_alshaya_acm_get_remove_from_basket_link_alter(&$remove_url, CartInterface $cart, SKUInterface $sku) {
  // If for any reason we set it to empty value in any other alter
  // implementation, we don't want to modify again.
  if (empty($remove_url)) {
    return;
  }

  // We need to modify here only if there are rules applied in cart.
  $rules_applied = $cart->get('cart_rules');
  if (empty($rules_applied)) {
    return;
  }

  /** @var \Drupal\alshaya_acm_promotion\AlshayaPromotionsManager $manager */
  $manager = \Drupal::service('alshaya_acm_promotion.manager');

  $coupon = $cart->getCoupon();

  foreach ($rules_applied as $rule_id) {
    $promotion = $manager->getPromotionByRuleId($rule_id);

    if (!($promotion instanceof NodeInterface)) {
      continue;
    }

    $free_skus = $manager->getFreeSkusByRuleId($rule_id);

    if (in_array($sku->getSku(), $free_skus)) {
      if ($coupon && $promotion->get('field_coupon_code')->getString() == $coupon) {
        // For coupon based promotions we want to allow removal.
        // But we need to remove the coupon as well.
        $remove_url->setRouteParameter('coupon', 'remove');
      }
      else {
        // For non-coupon based free gifts, we don't want to allow removal
        // for now.
        $remove_url = NULL;
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_acm_promotion_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  // Need processing only for products.
  if ($entity->bundle() != 'acq_product') {
    return;
  }

  // Return early for unknown view modes.
  if (!in_array($view_mode, [
    'modal',
    'full',
    'teaser',
    'product_category_carousel',
  ])
  ) {
    return;
  }

  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
  /** @var \Drupal\alshaya_acm_promotion\AlshayaPromoLabelManager $promoLabelManager */
  $promoLabelManager = \Drupal::service('alshaya_acm_promotion.label_manager');

  $sku = $skuManager->getSkuForNode($entity);
  $sku_entity = SKU::loadFromSku($sku);

  $promotion_types = ['cart'];
  $promotion_nodes = $skuManager->getSkuPromotions($sku_entity, $promotion_types);

  $promotion_view_mode = in_array($view_mode, ['modal', 'full']) ? 'full' : NULL;

  // Get promotions for the product.
  $promotions = $skuManager->preparePromotionsDisplay($sku_entity, $promotion_nodes, 'links', $promotion_types, $promotion_view_mode);

  // Return early if no promotions found for product in context.
  if (empty($promotions)) {
    return;
  }

  $free_gift_promotions = $generic_promotions = [];

  // Split promotions array into 2 parts, since we need to render
  // free gift promotions in a different way.
  foreach ($promotions as $promotion_id => $promotion) {
    if (empty($promotion['skus'])) {
      $generic_promotions[$promotion_id] = $promotion;
    }
    else {
      $free_gift_promotions[$promotion_id] = $promotion;
    }
  }

  if (!empty($generic_promotions)) {
    $build['promotions'] = [
      '#markup' => implode('</br>', $generic_promotions),
    ];

    // If promotions are eligible for dynamic promo label.
    if ($promoLabelManager->isDynamicLabelsEnabled()
      && $promoLabelManager->checkPromoLabelType($promotion_nodes) === AlshayaPromoLabelManager::ALSHAYA_PROMOTIONS_DYNAMIC_PROMO) {
      switch ($view_mode) {
        case 'full':
          // Add a flag to update promo label dynamically.
          $build['promotions']['#attached']['library'][] = 'alshaya_acm_promotion/label_manager';
          $build['promotions']['#attached']['library'][] = 'alshaya_white_label/dynamic-promotions';
          $build['promotions']['#attached']['drupalSettings']['alshayaAcmPromotions'][$sku_entity->id()] = TRUE;

          // Add container for dynamic promotion display.
          $build['promotions']['dynamic_label'] = [
            '#type' => 'html_tag',
            '#tag' => 'div',
            '#value' => '',
          ];
          $build['promotions']['dynamic_label']['#attributes']['class'][] = 'promotions-dynamic-label sku-' . $sku_entity->id() . ' hidden';
          break;

        case 'modal':
          // Directly add dynamic promotion labels.
          $promoDynamicLabels = $promoLabelManager->getSkuPromoDynamicLabel($sku_entity, $promotion_nodes);
          if (!empty($promoDynamicLabels)) {
            $build['promotions']['dynamic_label'] = [
              '#type' => 'html_tag',
              '#tag' => 'div',
              '#value' => $promoDynamicLabels,
              '#attributes' => [
                'class' => 'promotions-dynamic-label sku-' . $sku_entity->id(),
              ],
            ];
          }
          break;
      }
    }
  }

  // Process free gift promotions only for full view mode.
  // Return early for other view modes.
  if (!in_array($view_mode, ['full'])) {
    return;
  }

  // For free gift promotions, the promo needs to be rendered in a
  // different way.
  if (!empty($free_gift_promotions)) {
    /** @var \Drupal\alshaya_acm_product\SkuImagesManager $skuImagesManager */
    $skuImagesManager = \Drupal::service('alshaya_acm_product.sku_images_manager');

    /** @var \Drupal\alshaya_acm_promotion\AlshayaPromotionsManager $manager */
    $manager = \Drupal::service('alshaya_acm_promotion.manager');

    foreach ($free_gift_promotions as $promotion_id => $free_gift_promotion) {
      $free_skus = $manager->getFreeGiftSkuEntitiesByPromotionId((int) $promotion_id);

      // No free gift available for the promotion, return early.
      if (empty($free_skus)) {
        continue;
      }

      // More than one available, show list modal.
      if (count($free_skus) > 1) {
        $link = Link::createFromRoute(
          $free_gift_promotion['text'],
          'alshaya_acm_promotion.free_gifts_list',
          [
            'node' => $promotion_id,
            'js' => 'nojs',
          ],
          [
            'attributes' => [
              'class' => ["use-ajax"],
              'data-dialog-type' => "modal",
              'data-dialog-options' => '{"width":"auto"}',
            ],
          ]
        )->toString();

        $message = t('One item of choice from @link with this product', [
          '@link' => $link,
        ]);

        foreach ($free_skus as $free_sku) {
          if ($skuImagesManager->hasMedia($free_sku)) {
            $free_sku_media = $skuImagesManager->getFirstImage($free_sku);
            $free_sku_image = $skuManager->getSkuImage($free_sku_media['drupal_uri'], $free_sku->label(), '192x168');
            break;
          }
        }

        $build['free_gift_promotions'] = [
          '#theme' => 'free_gift_promotion_list',
          '#message' => [
            '#type' => 'markup',
            '#markup' => $message,
          ],
          '#title' => [
            '#type' => 'markup',
            '#markup' => t('Free Gift'),
          ],
          '#image' => $free_sku_image ?? NULL,
        ];

        if (!empty($free_gift_promotion['coupon_code'])) {
          $build['free_gift_promotions']['#coupon'] = [
            '#type' => 'markup',
            '#markup' => t('Use code <span>@coupon</span> in basket', [
              '@coupon' => $free_gift_promotion['coupon_code'][0]['value'],
            ]),
          ];
        }
      }
      else {
        $free_sku_entity = reset($free_skus);

        // If not sku entity object.
        if (!$free_sku_entity instanceof SKUInterface) {
          continue;
        }

        $free_sku_title = $free_sku_image = [
          '#type' => 'link',
          '#url' => Url::fromRoute('alshaya_acm_promotion.free_gift_modal',
            [
              'acq_sku' => $free_sku_entity->id(),
              'js' => 'nojs',
            ]),
          '#attributes' => [
            'class' => ["use-ajax"],
            'data-dialog-type' => "modal",
            'data-dialog-options' => '{"width":"auto"}',
          ],
        ];

        $free_sku_title['#title'] = $free_sku_entity->get('name')->getString();
        $free_sku_title = \Drupal::service('renderer')->render($free_sku_title);

        // Get sku title & image.
        $build['free_gift_promotions'] = [
          '#theme' => 'free_gift_promotions',
          '#free_sku_entity_id' => $free_sku_entity->id(),
          '#free_sku_code' => $free_sku_entity->getSku(),
          '#free_sku_title' => $free_sku_title,
          '#promo_title' => $free_gift_promotion['text'],
          '#promo_code' => $free_gift_promotion['coupon_code'],
        ];

        $free_sku_media = $skuImagesManager->getFirstImage($free_sku_entity);

        // If free gift sku has no media, then we check from the default
        // image from the configuration.
        if (empty($free_sku_media) && !empty($default_image = $skuImagesManager->getProductDefaultImage())) {
          $free_sku_media = [
            'label' => $free_sku_entity->label(),
            'file' => $default_image,
            'drupal_uri' => $default_image->getFileUri(),
          ];
        }

        if ($free_sku_media) {
          $free_sku_image['#title'] = $skuManager->getSkuImage($free_sku_media['drupal_uri'], $free_sku_entity->label(), '192x168');
          $build['free_gift_promotions']['#sku_image'] = \Drupal::service('renderer')->render($free_sku_image);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_acm_promotion_form_customer_cart_form_alter(&$form, FormStateInterface $form_state) {
  if (empty($form['cart'])) {
    return;
  }

  // Get coupon applied on cart.
  $cart_storage = \Drupal::service('acq_cart.cart_storage');
  /** @var \Drupal\acq_cart\Cart $cart */
  $cart = $cart_storage->getCart(FALSE);

  if (empty($cart)) {
    return;
  }

  $coupon_applied_on_cart = $cart->getCoupon();

  /** @var \Drupal\alshaya_acm_promotion\AlshayaPromotionsManager $manager */
  $manager = \Drupal::service('alshaya_acm_promotion.manager');

  foreach ($form['cart'] as $id => $item) {
    if (is_array($item) && isset($item['quantity'])) {
      $free_gift_promos = $manager->getPromotionsToShowForSkuInCart(
        $item['name']['#item_code'],
        $coupon_applied_on_cart
      );

      if (empty($free_gift_promos)) {
        continue;
      }

      $form['cart'][$id]['promo_text'] = [
        '#theme' => 'free_gift_cart_label',
        '#promos' => $free_gift_promos,
      ];

      $form['cart'][$id]['promo_text']['#wrapper_attributes'] = ['class' => ['free-gifts-wrapper']];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_acm_promotion_acq_sku_view(array &$build,
                                            EntityInterface $entity,
                                            EntityViewDisplayInterface $display,
                                            $view_mode) {
  if ($view_mode != 'free_gift') {
    return;
  }

  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $skuManager = \Drupal::service('alshaya_acm_product.skumanager');

  /** @var \Drupal\alshaya_acm_product\SkuImagesManager $skuImagesManager */
  $skuImagesManager = \Drupal::service('alshaya_acm_product.sku_images_manager');

  /** @var \Drupal\alshaya_acm_promotion\AlshayaPromotionsManager $promotionsManager */
  $promotionsManager = \Drupal::service('alshaya_acm_promotion.manager');

  $pdp_layout = $skuManager->getPdpLayout($entity, 'modal');
  try {
    $skuForGallery = $promotionsManager->getSkuForFreeGiftGallery($entity);
    $build['gallery'] = $skuImagesManager->getGallery($skuForGallery, $pdp_layout);
  }
  catch (\Exception $e) {
    $build['gallery'] = [];
  }

  $build['price_block']['#markup'] = '<div class="free-price-markup">' . t('FREE') . '</div>';
  $build['item_code']['#markup'] = $entity->getSku();

  \Drupal::moduleHandler()->loadInclude('alshaya_acm_product', 'inc', 'alshaya_acm_product.utility');
  $build['brand_logo'] = alshaya_acm_product_get_brand_logo($entity);

  // Add PDP slider position config to drupalSettings so we can use it in JS.
  $build['#attached']['drupalSettings']['alshaya_white_label']['image_slider_position_pdp'] = 'slider-position-' . $skuManager->getImageSliderPosition($entity);

  // Add PDP slider position config to variable so it is available in themes.
  $build['#attached']['drupalSettings']['pdp_slider_items'] = \Drupal::config('alshaya_acm_product.settings')->get('pdp_slider_items_settings.pdp_slider_items_number');

  $coupon = \Drupal::request()->get('coupon') ?? '';
  $promotion_id = \Drupal::request()->get('promotion_id') ?? NULL;
  $back = \Drupal::request()->get('back') ?? NULL;
  if (!empty($back)) {
    $build['back_to_collection'] = [
      '#type' => 'link',
      '#title' => t('Back to Collection'),
      '#url' => Url::fromRoute('alshaya_acm_promotion.free_gifts_list',
        [
          'node' => $promotion_id,
          'js' => 'nojs',
        ],
        [
          'attributes' => [
            'class' => ['use-ajax'],
          ],
          'query' => [
            'replace' => 1,
            'coupon' => $coupon,
          ],
        ]
      ),
    ];
  }

  $form_state = new FormState();
  $form_state->setStorage([
    'coupon' => $coupon ?? '',
    'sku' => $entity->getSku(),
    'promotion_id' => $promotion_id ?? '',
  ]);

  $build['select_free_gift'] = \Drupal::formBuilder()->buildForm(
    SelectFreeGiftForm::class,
    $form_state
  );
}
