<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\acq_commerce\SKUInterface;
use Drupal\acq_cart\CartInterface;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;

/**
 * Implements hook_views_data_alter().
 */
function alshaya_acm_promotion_views_data_alter(array &$data) {
  $data['search_api_index_product']['field_skus']['argument']['id'] = 'alshaya_sku_ignore_whitespaces';
}

/**
 * Implements hook_theme().
 */
function alshaya_acm_promotion_theme($existing, $type, $theme, $path) {
  return [
    'cart_top_promotions' => [
      'variables' => [
        'promotions' => NULL,
        'free_shipping' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_theme_registry_alter().
 */
function alshaya_acm_promotion_theme_registry_alter(&$theme_registry) {
  $theme_registry['acq_commerce_price']['variables']['promotions'] = NULL;
  $theme_registry['acq_commerce_price']['variables']['final_price'] = NULL;
  $theme_registry['acq_commerce_price']['variables']['discount'] = NULL;
}

/**
 * Implements hook_acq_promotion_promotion_node_alter().
 */
function alshaya_acm_promotion_acq_promotion_promotion_node_alter(Node $node, array $promotion) {
  // Set the Promotion subtype.
  $node->get('field_alshaya_promotion_subtype')
    ->setValue(\Drupal::service('alshaya_acm_promotion.manager')
      ->getSubType($promotion));

  // Set free skus for promotions.
  if (!empty($promotion['free_gift_products'])) {
    $node->get('field_free_gift_skus')->setValue($promotion['free_gift_products']);
  }
}

/**
 * Implements hook_acq_promotion_data_alter().
 */
function alshaya_acm_promotion_acq_promotion_data_alter(&$promotion) {
  $promotion['free_gift_products'] = [];

  // Conductor api version.
  $middleware_version = \Drupal::config('acq_commerce.conductor')->get('api_version');
  // @Todo: remove it when we using v2 for all.
  $extension_key = $middleware_version == 'v2' ? 'extension' : 'extension_attributes';

  // Extract free gift skus & remove them from list of products to be processed
  // for this promotion.
  foreach ($promotion['products'] as $key => $product) {
    if (!empty($product[$extension_key])
      && !empty($product[$extension_key]['ampromo_cart_sku'])
      && ($product[$extension_key]['ampromo_cart_sku'])) {
      $promotion['free_gift_products'][] = $product['product_sku'];
      unset($promotion['products'][$key]);
    }
  }
}

/**
 * Implements hook_acq_sku_base_fields_updated().
 */
function alshaya_acm_promotion_acq_sku_base_fields_updated(array $fields, $op = 'add') {
  /** @var \Drupal\alshaya_search_api\AlshayaSearchApiFacetsManager $facet_manager */
  $facet_manager = \Drupal::service('alshaya_search_api.facets_manager');

  $facet_source_id = 'search_api:views_block__alshaya_product_list__block_2';
  $filter_bar_id = 'facets_summary.facets_summary.filter_bar_promotions';
  $prefix = 'promo';

  switch ($op) {
    case 'add':
      foreach ($fields as $field_code => $field) {
        if (empty($field['facet'])) {
          // We use add even when resetting. Remove facet if available.
          $facet_manager->removeFacet($field_code, $filter_bar_id, $prefix);
          continue;
        }

        $facet_manager->createFacet($field_code, $facet_source_id, $filter_bar_id, $prefix, ['name' => $field['label']]);
      }
      break;

    case 'remove':
      foreach ($fields as $field_code => $field) {
        // Remove from facets if facet is 1.
        if (!empty($field['facet'])) {
          $facet_manager->removeFacet($field_code, $filter_bar_id, $prefix);
        }
      }
      break;
  }
}

/**
 * Implements hook_alshaya_acm_get_remove_from_basket_link_alter().
 */
function alshaya_acm_promotion_alshaya_acm_get_remove_from_basket_link_alter(&$remove_url, CartInterface $cart, SKUInterface $sku) {
  // If for any reason we set it to empty value in any other alter
  // implementation, we don't want to modify again.
  if (empty($remove_url)) {
    return;
  }

  // We need to modify here only if there are rules applied in cart.
  $rules_applied = $cart->get('cart_rules');
  if (empty($rules_applied)) {
    return;
  }

  /** @var \Drupal\alshaya_acm_promotion\AlshayaPromotionsManager $manager */
  $manager = \Drupal::service('alshaya_acm_promotion.manager');

  $coupon = $cart->getCoupon();

  foreach ($rules_applied as $rule_id) {
    $promotion = $manager->getPromotionByRuleId($rule_id);

    if (!($promotion instanceof NodeInterface)) {
      continue;
    }

    $free_skus = $manager->getFreeSkusByRuleId($rule_id);

    if (in_array($sku->getSku(), $free_skus)) {
      if ($coupon && $promotion->get('field_coupon_code')->getString() == $coupon) {
        // For coupon based promotions we want to allow removal.
        // But we need to remove the coupon as well.
        $remove_url->setRouteParameter('coupon', 'remove');
      }
      else {
        // For non-coupon based free gifts, we don't want to allow removal
        // for now.
        $remove_url = NULL;
      }
    }
  }
}
