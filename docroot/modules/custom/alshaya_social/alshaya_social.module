<?php

/**
 * @file
 * Module file for alshaya_social.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function alshaya_social_theme() {
  return [
    'alshaya_social' => [
      'variables' => [
        'social_networks' => NULL,
        'form' => NULL,
        'section_title' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_social_form_user_login_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['alshaya_social_login_form_title'] = [
    '#weight' => -10,
    '#markup' => '<div class="section-title">' . t('sign in with email address') . '</div>',
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_social_form_user_register_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['alshaya_social_register_form_title'] = [
    '#weight' => -10,
    '#markup' => '<div class="section-title">' . t('sign up with email address') . '</div>',
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_social_form_alshaya_user_settings_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['social'] = [
    '#type' => 'details',
    '#title' => t('Social authentication settings'),
    '#open' => TRUE,
    '#tree' => FALSE,
  ];

  $form['social']['social_login'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable social login.'),
    '#default_value' => \Drupal::configFactory()->get('alshaya_social.settings')->get('social_login'),
  ];

  $form['social']['networks'] = [
    '#type' => 'details',
    '#title' => t('Manage social auths.'),
    '#open' => TRUE,
    '#tree' => TRUE,
    '#states' => [
      'invisible' => [
        ':input[name="social_login"]' => ['checked' => FALSE],
      ],
    ],
  ];

  // Load all available social auth networks.
  $networks = \Drupal::service('plugin.network.manager')->getDefinitions();
  // Get saved settings to enable / disable networks.
  $networks_status = \Drupal::configFactory()->get('alshaya_social.settings')->get('social_networks');
  foreach ($networks as $network) {
    $form['social']['networks'][$network['id']] = [
      '#type' => 'checkbox',
      '#title' => $network['social_network'],
      '#default_value' => $networks_status[$network['id']] ?? FALSE,
    ];
  }

  array_unshift($form['#submit'], 'alshaya_social_user_settings_submit');
}

/**
 * Submit callback for alshaya_user_settings form.
 */
function alshaya_social_user_settings_submit(array &$form, FormStateInterface $form_state) {
  \Drupal::configFactory()
    ->getEditable('alshaya_social.settings')
    ->set('social_login', (bool) $form_state->getValue('social_login'))
    ->set('social_networks', $form_state->getValue('networks'))
    ->save();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function alshaya_social_preprocess_alshaya_social(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == 'acq_checkout.form') {
    $variables['destination'] = Url::fromRoute($route_name, ['step' => 'delivery'])->toString();
  }
  elseif ($route_name == 'alshaya_spc.checkout.login') {
    $variables['destination'] = Url::fromRoute('alshaya_spc.checkout', [])->toString();
  }
  elseif (\Drupal::request()->query->get('destination')) {
    $variables['destination'] = \Drupal::request()->query->get('destination');
  }

  foreach ($variables['social_networks'] as $network => &$network_info) {
    \Drupal::moduleHandler()->alter(
      'alshaya_social_' . $network,
      $network_info,
      $route_name
    );
  }

  $variables['#attached']['library'][] = 'alshaya_social/alshaya_social_popup';
  $variables['base_path'] = base_path();
}

/**
 * Implements hook_alshaya_reset_config_configs_to_reset_alter().
 */
function alshaya_social_alshaya_reset_config_configs_to_reset_alter(array &$reset) {
  // Get the config name of all enabled social auth networks to reset.
  $social_helper = \Drupal::service('alshaya_social.helper');
  if ($social_helper->getStatus()) {
    $configs = array_map(fn($key) => "{$key}.settings", array_keys($social_helper->getSocialNetworks()));
    $reset = array_merge($reset, $configs);
  }
}

/**
 * Implements hook_acsf_staging_scrub_admin_roles_alter().
 */
function alshaya_social_acsf_staging_scrub_admin_roles_alter(array &$admin_roles) {
  // Truncate the social auth table if exists during site stage.
  if (\Drupal::database()->schema()->tableExists('social_auth')) {
    try {
      \Drupal::database()->truncate('social_auth')->execute();
      \Drupal::logger('alshaya_social')->notice('Table @table is truncated successfully.', [
        '@table' => 'social_auth',
      ]);
    }
    catch (\Exception $e) {
      \Drupal::logger('alshaya_social')->error('Error while truncating table @table. Error:@error', [
        '@table' => 'social_auth',
        '@error' => $e->getMessage(),
      ]);
    }
  }
}
