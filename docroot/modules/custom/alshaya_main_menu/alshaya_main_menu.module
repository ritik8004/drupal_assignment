<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Cache\Cache;
use Drupal\alshaya_acm_product_category\ProductCategoryTree;
use Drupal\taxonomy\TermInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme().
 */
function alshaya_main_menu_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_main_menu_level1' => [
      'template' => 'alshaya-main-menu-level1',
      'variables' => [
        'term_tree' => NULL,
      ],
    ],
    'alshaya_main_menu_level2' => [
      'template' => 'alshaya-main-menu-level2',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_main_menu_level3' => [
      'template' => 'alshaya-main-menu-level3',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_main_menu_level4' => [
      'template' => 'alshaya-main-menu-level4',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_main_menu_category_image' => [
      'template' => 'alshaya-main-menu-category-image',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_main_menu_highlights' => [
      'template' => 'alshaya-main-menu-highlights',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_main_menu_text_links' => [
      'template' => 'alshaya-main-menu-text-links',
      'variables' => [
        'data' => NULL,
      ],
    ],
  ];
}

/**
 * Prepares variables for menu items.
 *
 * @param array $variables
 *   An associative array containing menu items.
 */
function template_preprocess_alshaya_main_menu_level1(array &$variables) {
  _alshaya_main_menu_process_tag_attributes($variables['term_tree']);
}

/**
 * Implements hook_alshaya_main_menu_links_alter().
 *
 * We are rendering the same menu items for mobile view, Add 'max-depth'
 * class to restrict number of levels to display in mobile view.
 */
function alshaya_main_menu_alshaya_main_menu_links_alter(array &$term_tree, $parent_id, array $context) {
  $max_depth = \Drupal::config('alshaya_main_menu.settings')->get('mobile_main_menu_max_depth');
  $super_category_status = \Drupal::config('alshaya_super_category.settings')->get('status');
  if ($max_depth > 0) {
    _alshaya_main_menu_process_max_depth($term_tree, $max_depth, $super_category_status);
  }
}

/**
 * Loop through each element recursively and add class for max_depth.
 *
 * @param array $data
 *   The array to main menu tree.
 * @param int $max_depth
 *   The maximum depth to add class.
 */
function _alshaya_main_menu_process_max_depth(array &$data, int $max_depth, $super_category_status) {
  foreach ($data as &$item) {
    // We render the main menu items from second level terms, When super
    // category status is enabled. Deduct 1 from the actual depth to get the
    // currect term level for main menu items.
    $term_depth = $super_category_status ? $item['depth'] - 1 : $item['depth'];
    if ($max_depth == $term_depth) {
      $item['class'] = 'max-depth';
    }
    if (!empty($item['child'])) {
      _alshaya_main_menu_process_max_depth($item['child'], $max_depth, $super_category_status);
    }
  }
}

/**
 * Prepares href for anchor tag for given term data.
 */
function _alshaya_main_menu_process_tag_attributes(array &$data) {
  foreach ($data as &$record) {
    $record['tag'] = 'div';
    $record['tag_attr'] = '';
    if (isset($record['clickable']) && $record['clickable']) {
      $record['tag'] = 'a';
      $record['tag_attr'] = "href={$record['path']}";
    }

    if (!empty($record['child'])) {
      _alshaya_main_menu_process_tag_attributes($record['child']);
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function alshaya_main_menu_taxonomy_term_insert(TermInterface $term) {
  // Invalidate cache for main menu and sitemap or any other cache
  // using our custom cache tag.
  if ($term->getVocabularyId() == ProductCategoryTree::VOCABULARY_ID) {
    Cache::invalidateTags([ProductCategoryTree::CACHE_TAG, 'node:taxonomy_term.accordion']);
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert() for taxonomy_term entities.
 */
function alshaya_main_menu_taxonomy_term_update(TermInterface $term) {
  // Invalidate cache for main menu and sitemap or any other cache
  // using our custom cache tag.
  if ($term->getVocabularyId() == ProductCategoryTree::VOCABULARY_ID) {
    Cache::invalidateTags([ProductCategoryTree::CACHE_TAG, 'node:taxonomy_term.accordion']);
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function alshaya_main_menu_taxonomy_term_delete(TermInterface $term) {
  // Invalidate cache for main menu and sitemap or any other cache
  // using our custom cache tag.
  if ($term->getVocabularyId() == ProductCategoryTree::VOCABULARY_ID) {
    Cache::invalidateTags([ProductCategoryTree::CACHE_TAG, 'node:taxonomy_term.accordion']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_main_menu_form_taxonomy_term_acq_product_category_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Only for the term edit page.
  if (isset($form['tid']) && !empty($form['tid']['#value'])) {
    if ($term = Term::load($form['tid']['#value'])) {
      // Hide highlight field If term is greater than L1 level.
      if ($term->get('depth_level')->getString() > 1) {
        $form['field_main_menu_highlight']['#access'] = FALSE;
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function alshaya_main_menu_preprocess_alshaya_main_menu_highlights(&$variables) {
  $variables['title_class'] = '';
  foreach ($variables['data']['highlight_paragraph'] as $highlight_paragraph) {
    if (($highlight_paragraph['paragraph_type'] == 'main_menu_highlight')
      && ($highlight_paragraph['highlight_type'] == 'promo_block' || $highlight_paragraph['highlight_type'] == 'title_subtitle')) {
      // Adding the class only if promo block or combination of
      // image + title + subtitle is added.
      $variables['title_class'] = 'empty-highlight-title';
    }
    else {
      // Breaking condition if highlight paragraph is added.
      $variables['title_class'] = '';
      break;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function alshaya_main_menu_preprocess_alshaya_main_menu_level2(&$variables) {
  if (!empty($variables['data']['highlight_paragraph'])) {
    foreach ($variables['data']['highlight_paragraph'] as $highlight_para) {
      // If there is at least one paragraph of type 'text_links'.
      if ($highlight_para['paragraph_type'] == 'text_links') {
        $variables['data']['text_links_paragraph'] = TRUE;
        break;
      }
    }
  }
}
