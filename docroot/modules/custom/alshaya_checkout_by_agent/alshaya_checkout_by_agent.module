<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\user\UserInterface;
use Symfony\Component\HttpFoundation\IpUtils;

/**
 * Implements hook_user_login().
 */
function alshaya_checkout_by_agent_user_login(UserInterface $account) {
  // Return if user doesn't have 'smartagent' role.
  if (!in_array('smartagent', $account->getRoles())) {
    return;
  }

  $request = \Drupal::request();
  $current_user_agent = $request->headers->get('User-Agent');
  $current_client_ip = $request->getClientIP();
  $smart_agent_config = \Drupal::config('alshaya_checkout_by_agent.settings');
  $smart_user_agents = $smart_agent_config->get('smart_user_agents');
  $smart_agent_ips_config_value = $smart_agent_config->get('smart_agent_ips');
  $smart_agent_ips =  !empty($smart_agent_ips_config_value)
    ? explode(";", $smart_agent_ips_config_value)
    : '';
  $is_smart_user_agent = !empty($smart_user_agents) ? FALSE : TRUE;

  // Check if current user agent is in the list of smart user agents.
  foreach ($smart_user_agents ?? [] as $smart_agent) {
    if (stripos($current_user_agent, $smart_agent) !== FALSE) {
      $is_smart_user_agent = TRUE;
      break;
    }
  }

  $is_smart_client_ip = !empty($smart_agent_ips) ? FALSE : TRUE;
  // Check the client ip with the list of smart agent IPs.
  if (IpUtils::checkIp($current_client_ip, $smart_agent_ips)) {
    // IP found to be of smart agent.
    $is_smart_client_ip = TRUE;
  }

  // Return if user agent and IP is not in the config.
  if (!$is_smart_user_agent || !$is_smart_client_ip) {
    return;
  }

  $user_details = [
    'name' => $account->get('field_first_name')->getString() . ' ' . $account->get('field_last_name')->getString() ,
    'email' => $account->getEmail(),
    'userAgent' => $current_user_agent,
    'clientIP' => $current_client_ip,
  ];

  setcookie('smart_agent_cookie', base64_encode(json_encode($user_details)), ['path' => '/', 'secure' => TRUE]);
  user_logout();
}

/**
 * Implements hook_page_attachments().
 */
function alshaya_checkout_by_agent_page_attachments(array &$attachments) {
  // Ignore admin paths.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    return;
  }
  $attachments['#attached']['library'][] = 'alshaya_checkout_by_agent/smart_agent';
}
