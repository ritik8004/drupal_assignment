<?php

/**
 * @file
 * Install file for Alshaya Olapic.
 */

/**
 * Implements hook_install().
 */
function alshaya_olapic_install() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  // Install Olapic widget blocks.
  $manager->updateConfigs(
    [
      'block.block.alshayaolapicwidget',
      'block.block.alshayaolapicwidget_2',
      'block.block.alshayaolapicwidget_3',
      'block.block.alshayaolapicwidget_4',
    ],
    'alshaya_olapic',
    'install'
  );
}

/**
 * Implements hook_uninstall().
 *
 * Delete block config.
 * We need to ensure all the block configuration added in the module.
 */
function alshaya_olapic_uninstall() {
  if ($config = \Drupal::configFactory()->getEditable('block.block.alshayaolapicwidget')) {
    $config->delete();
  }
  if ($config = \Drupal::configFactory()->getEditable('block.block.alshayaolapicwidget_2')) {
    $config->delete();
  }
  if ($config = \Drupal::configFactory()->getEditable('block.block.alshayaolapicwidget_3')) {
    $config->delete();
  }
  if ($config = \Drupal::configFactory()->getEditable('block.block.alshayaolapicwidget_4')) {
    $config->delete();
  }
}

/**
 * Implements hook_update_N().
 *
 * Update olapic block config to use entity_bundle condition plugin.
 */
function alshaya_olapic_update_9001() {
  $blocknames = [
    'block.block.alshayaolapicwidget_2',
    'block.block.alshayaolapicwidget_4',
  ];
  foreach ($blocknames as $configName) {
    $configObject = \Drupal::configFactory()->getEditable($configName);
    // Run update hook only if deprecated plugin exists.
    if (!empty($nodeTypeVisibility = $configObject->get('visibility.node_type'))) {
      // If entity_bundle:node condition already exists, then update.
      if ($configObject->get('visibility.entity_bundle:node')) {
        foreach (array_keys($nodeTypeVisibility['bundles']) as $bundleName) {
          $configObject->set('visibility.entity_bundle:node.bundles.' . $bundleName, $bundleName);
        }
      }
      // Create new entity_bundle:node condition.
      else {
        $value = [
          'id' => 'entity_bundle:node',
          'negate' => FALSE,
          'context_mapping' => [
            'node' => '@node.node_route_context:node',
          ],
          'bundles' => $nodeTypeVisibility['bundles'],
        ];
        $configObject->set('visibility.entity_bundle:node', $value);
      }
      // Delete deprecated plugin.
      $configObject->clear('visibility.node_type');
      $configObject->save();
    }
  }
}
