<?php

/**
 * @file
 * Module file for alshaya options list.
 */

use Drupal\Core\Cache\Cache;
use Drupal\taxonomy\TermInterface;

/**
 * Implements hook_theme().
 */
function alshaya_options_list_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['alshaya_options_page'] = [
    'render element' => 'form',
    'variables' => [
      'options_list' => NULL,
      'page_title' => '',
      'description' => '',
    ],
  ];

  $items['alshaya_options_attribute'] = [
    'variables' => [
      'option' => NULL,
      'attribute_code' => NULL,
    ],
  ];

  $items['alshaya_options_menu_link'] = [
    'variables' => [
      'menu_title' => '',
      'links' => [],
    ],
  ];

  return $items;
}

/**
 * Implements hook_alshaya_main_menu_links_alter().
 */
function alshaya_options_list_alshaya_main_menu_links_alter(array &$term_data, $parent_id, array $context) {
  $block_manager = \Drupal::service('plugin.manager.block');
  $plugin_block = $block_manager->createInstance('alshaya_options_list_menu', []);
  $render = $plugin_block->build();
  if (!empty($render['#links'])) {
    foreach ($render['#links'] as $link) {
      $item = [
        'label' => $link->getText(),
        'path' => $link->getUrl()->toString(),
        'class' => 'options-list--mobile-link',
        'clickable' => 1,
        'display_in_desktop' => 0,
        'display_in_mobile' => 1,
      ];
      $term_data[] = $item;
    }
  }
}

/**
 * Implements hook_taxonomy_term_presave().
 */
function alshaya_options_list_taxonomy_term_presave(TermInterface $term) {
  if ($term->bundle() == 'sku_product_option') {
    // Invalidate page cache.
    Cache::invalidateTags(['alshaya-options-page']);
  }
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function alshaya_options_list_taxonomy_term_delete(TermInterface $term) {
  if ($term->bundle() == 'sku_product_option') {
    // Invalidate page cache.
    Cache::invalidateTags(['alshaya-options-page']);
  }
}
