<?php

/**
 * @file
 * Alshaya JS Optimisations Module file.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_library_info_alter().
 */
function alshaya_js_optimisations_library_info_alter(&$libraries, $extension) {
  $config = \Drupal::config('alshaya_js_optimisations.settings');
  $performance = \Drupal::config('system.performance');
  $critical_js = $config->get('critical_js');
  if ($critical_js['enabled'] && $performance->get('js.preprocess') && !empty($critical_js['hidden_data'])) {
    $hidden_data = Yaml::decode($critical_js['hidden_data']);
    if (!empty($hidden_data) && isset($hidden_data[$extension])) {
      foreach ($libraries as $library => $attributes) {
        foreach($libraries[$library]['js'] as $path => $data) {
          if (!empty($hidden_data[$extension][$library]['data-group']) && !empty($hidden_data[$extension][$library]['weight'])) {
            $libraries[$library]['js'][$path]['attributes']['data-group'] = $hidden_data[$extension][$library]['data-group'];
            $libraries[$library]['js'][$path]['weight'] = $hidden_data[$extension][$library]['weight'];
          }
          else {
            $libraries[$library]['js'][$path]['attributes']['defer'] = TRUE;
          }
        }
      }
    }
  }
}

/**
 * Implements hook_js_alter().
 */
function alshaya_js_optimisations_js_alter(&$javascript) {
  $config = \Drupal::config('alshaya_js_optimisations.settings');
  $critical_js = $config->get('critical_js');
  if ($critical_js['enabled']) {
    foreach ($javascript as $key => $value) {
      $javascript[$key]['preprocess'] = TRUE;
    }
  }
}

/**
 * Implements hook_js_alter().
 */
function alshaya_js_optimisations_js_alter(&$javascripts, AttachedAssetsInterface $assets) {
  // Alter the JS file only if js uglification is enabled.
  if (\Drupal::config('alshaya_js_optimisations.settings')->get('enable_uglification')) {
    $mapping = file_get_contents('build/js-performance-build.json');
    // Proceed only if file is present.
    if ($mapping) {
      $mapping = json_decode($mapping, TRUE);
      // Iterate through all the javascript files and replace with the updated
      // mapping if present.
      foreach ($javascripts as $key => $value) {
        if (in_array($key, $mapping['source'])) {
          $javascripts[$key]['data'] = 'build/' . $value['data'];
        }
      }
    }
  }
}
