<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\views\ViewExecutable;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_page_attachments().
 */
function alshaya_stores_finder_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'alshaya_stores_finder/store_finder';
  $site_country = _alshaya_custom_get_site_level_country_code();
  $attachments['#attached']['drupalSettings']['geolocation']['geocoder']['googleGeocodingAPI']['components'] = ['country' => $site_country];
}

/**
 * Implements hook_form_alter().
 */
function alshaya_stores_finder_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {

    $active_class = '';
    $current_route_name = \Drupal::routeMatch()->getRouteName();
    // If store-finder glossary or list view page.
    if ($current_route_name == 'view.stores_finder.page_2' || $current_route_name == 'view.stores_finder.page_1') {
      $active_class = 'active';
    }

    $exposed_form_ids = [
      'views-exposed-form-stores-finder-page-1',
      'views-exposed-form-stores-finder-page-3',
    ];
    if (in_array($form['#id'], $exposed_form_ids)) {

      // Config of store finder search enable/disable.
      $store_finder_search_config = \Drupal::config('alshaya_stores_finder.settings')->get(('enable_disable_store_finder_search'));

      $form['list_view'] = [
        '#title' => t('List view'),
        '#type' => 'link',
        '#url' => Url::fromRoute('alshaya_stores_finder.view_toggle', ['view_type' => 'list_view']),
        '#attributes' => [
          'class' => [
            'use-ajax',
            'list-view-link',
            $active_class,
          ],
        ],
        '#weight' => 7,
      ];
      $form['map_view'] = [
        '#title' => t('Map view'),
        '#type' => 'link',
        '#url' => Url::fromRoute('alshaya_stores_finder.view_toggle', ['view_type' => 'map_view']),
        '#attributes' => [
          'class' => [
            'use-ajax',
            'map-view-link',
          ],
        ],
        '#weight' => 8,
      ];
      $form['current_location'] = [
        '#markup' => '<a href="javascript:;" class="current-location">' . t('Near me') . '</a>',
        '#weight' => 1,
        '#access' => (bool) $store_finder_search_config,
      ];

      $form['prefix_wrapper'] = [
        '#markup' => '<div class="store-finder--wrapper">',
        '#weight' => 2,
      ];

      $form['store_near_me'] = [
        '#markup' => '<div class="label--location">' . t('Find stores near') . '</div><div class="input--wrapper">',
        '#weight' => 3,
        '#access' => (bool) $store_finder_search_config,
      ];

      $form['suffix_wrapper'] = [
        '#markup' => '</div></div>',
        '#weight' => 6,
      ];

      $form['field_latitude_longitude_boundary']['#weight'] = 4;

      // Adding placeholder to the input field.
      $form['field_latitude_longitude_boundary']['geolocation_geocoder_google_geocoding_api']['#placeholder'] = t('e.g. Salmiya');
      $form['field_latitude_longitude_boundary']['geolocation_geocoder_google_geocoding_api']['#access'] = (bool) $store_finder_search_config;
      $form['actions']['#access'] = (bool) $store_finder_search_config;
      $form['actions']['#weight'] = 5;
      unset($form['field_latitude_longitude_boundary']['geolocation_geocoder_google_geocoding_api']['#description']);
    }
  }
}

/**
 * Implements hook_views_pre_view().
 */
function alshaya_stores_finder_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() == 'stores_finder' && ($display_id === 'page_1' || $display_id === 'page_3')) {
    $header_text = '';
    $exposed_input = $view->getExposedInput();
    if (!empty($exposed_input)) {
      if (!empty($exposed_input['field_latitude_longitude_boundary']['geolocation_geocoder_google_geocoding_api'])) {
        $header_text = t('@total closest stores to') . ' ' . $exposed_input['field_latitude_longitude_boundary']['geolocation_geocoder_google_geocoding_api'];
      }
    }

    $view->setHandlerOption($display_id, 'header', 'result', 'content', $header_text);
  }
}

/**
 * Implements hook_block_build_alter().
 */
function alshaya_stores_finder_block_build_alter(array &$build, BlockPluginInterface $block) {
  $store_finder_search_blocks = [
    'views_exposed_filter_block:stores_finder-page_3',
    'views_exposed_filter_block:stores_finder-page_1',
  ];
  if (in_array($block->getPluginId(), $store_finder_search_blocks)) {
    $build['#cache']['tags'][] = 'store-finder-cache-tag';
  }
}

/**
 * Implements hook_preprocess_node().
 */
function alshaya_stores_finder_preprocess_node(&$variables) {
  // If product node.
  if ($variables['node']->bundle() == 'acq_product') {
    $variables['store_finder_enable_search'] = '';
    // Config of store finder search enable/disable.
    $store_finder_search_config = \Drupal::config('alshaya_stores_finder.settings')->get(('enable_disable_store_finder_search'));
    $variables['store_finder_enable_search'] = $store_finder_search_config ?: '';
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function alshaya_stores_finder_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() == 'acq_product' && $build['#view_mode'] == 'full') {
    $build['#cache']['tags'][] = 'store-finder-cache-tag';
  }
}
