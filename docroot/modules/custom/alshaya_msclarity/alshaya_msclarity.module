<?php

/**
 * @file
 * Alshaya Msclarity module file.
 */

/**
 * Implements hook_page_attachments().
 */
function alshaya_msclarity_page_attachments_alter(array &$page) {
  $param = \Drupal::request()->get('msclarity');
  $external = \Drupal::request()->get('external');
  if ((isset($external) && $external == 0) || $param === 'BLOCK') {
    return;
  }
  $config = \Drupal::config('alshaya_msclarity.settings');
  // Attach the alshaya_msclarity js on page.
  if (_alshaya_msclarity_visibility_pages()) {
    if (_alshaya_msclarity_visibility_roles()) {
      $page['#attached']['library'][] = 'alshaya_msclarity/alshaya_msclarity';
      $page['#attached']['drupalSettings']['alshaya_msclarity']['msclarity_id'] = $config->get('msclarity_id.msclarity_id');
    }
  }
}

/**
 * Based on visibility setting this function returns TRUE.
 */
function _alshaya_msclarity_visibility_pages() {
  $config = \Drupal::config('alshaya_msclarity.settings');
  static $page_match;
  if (!isset($page_match)) {

    $visibility = $config->get('pages_vis_settings.msclarity_visibility_pages');
    $setting_pages = $config->get('pages_vis_settings.msclarity_pages');
    // Match path if necessary.
    if (!empty($setting_pages)) {
      // Convert path to lowercase. This allows comparison of the same path.
      // with different case. Ex: /Page, /page, /PAGE.
      $pages = strtolower($setting_pages);
      // Convert the Drupal path to lowercase.
      $current_path = strtolower(\Drupal::service('path.current')->getPath());
      $pages_array = preg_split("/(\r\n|\n|\r)/", $pages);
      if ($visibility == 0) {
        if (in_array($current_path, $pages_array)) {
          $page_match = FALSE;
        }
        else {
          $page_match = TRUE;
        }
      }
      else {
        if (in_array($current_path, $pages_array)) {
          $page_match = TRUE;
        }
        else {
          $page_match = FALSE;
        }
      }
    }
    else {
      $page_match = TRUE;
    }
  }
  return $page_match;
}

/**
 * Based on visibility setting this function returns TRUE.
 */
function _alshaya_msclarity_visibility_roles() {
  $current_user = \Drupal::currentUser();
  $user_roles = $current_user->getRoles();
  $config = \Drupal::config('alshaya_msclarity.settings');
  $visibility = $config->get('roles_vis_settings.msclarity_visibility_roles');
  $roles = [];
  $enabled = TRUE;
  if (!empty($config->get('roles_vis_settings.msclarity_roles'))) {
    $roles = array_values(array_filter($config->get('roles_vis_settings.msclarity_roles')));
  }
  if ($visibility == 0 && !empty($roles)) {
    if (!empty(array_intersect($roles, $user_roles))) {
      $enabled = TRUE;
    }
    else {
      $enabled = FALSE;
    }
  }
  elseif ($visibility == 1 && !empty($roles)) {
    if (!empty(array_intersect($roles, $user_roles))) {
      $enabled = FALSE;
    }
    else {
      $enabled = TRUE;
    }
  }

  return $enabled;
}
