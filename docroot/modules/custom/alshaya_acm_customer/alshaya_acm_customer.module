<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountProxy;
use Drupal\user\UserInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_theme().
 */
function alshaya_acm_customer_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['user_order_list'] = [
    'render element' => 'elements',
    'variables' => [
      'order_details' => NULL,
      'order_not_found' => NULL,
      'account' => NULL,
      'search_form' => NULL,
      'next_page_button' => NULL,
      'help_block' => NULL,
    ],
  ];

  $items['user_order_list_item'] = [
    'render element' => 'elements',
    'variables' => [
      'order' => NULL,
      'order_detail_link' => NULL,
    ],
  ];

  $items['user_order_detail'] = [
    'render element' => 'elements',
    'variables' => [
      'order_error' => NULL,
      'order' => NULL,
      'barcode' => NULL,
      'order_details' => NULL,
      'products' => NULL,
      'delivery_detail_notice' => NULL,
      'account' => NULL,
      'print_link' => NULL,
      'download_link' => NULL,
      'vat_text' => NULL,
    ],
  ];

  $items['checkout_order_detail'] = [
    'render element' => 'elements',
    'variables' => [
      'order_error' => NULL,
      'order' => NULL,
      'barcode' => NULL,
      'order_details' => NULL,
      'products' => NULL,
      'products_count' => NULL,
      'delivery_detail_notice' => NULL,
      'account' => NULL,
      'print_link' => NULL,
      'vat_text' => NULL,
    ],
  ];

  $items['user_order_print'] = [
    'render element' => 'elements',
    'variables' => [
      'site_logo' => NULL,
      'barcode' => NULL,
      'order' => NULL,
      'order_details' => NULL,
      'products' => NULL,
      'products_count' => NULL,
      'delivery_detail_notice' => NULL,
      'account' => NULL,
      'vat_text' => NULL,
    ],
  ];

  $items['user_recent_order'] = [
    'render element' => 'elements',
    'variables' => ['order' => NULL],
  ];

  $items['banktransfer_payment_details'] = [
    'variables' => [
      'account_number' => NULL,
      'address' => NULL,
      'bank_name' => NULL,
      'beneficiary_name' => NULL,
      'branch' => NULL,
      'iban' => NULL,
      'swift_code' => NULL,
      'purpose' => NULL,
    ],
    'template' => 'bank-transfer-payment-details',
  ];

  return $items;
}

/**
 * Implements hook_block_access().
 */
function alshaya_acm_customer_block_access(Block $block, $operation, AccountInterface $account) {
  // Not allow 'recent orders' block other than user/{uid} page.
  if ($operation == 'view' && in_array($block->id(), ['userrecentorders', 'myaccountneedhelp'])) {
    $current_route = \Drupal::routeMatch()->getRouteName();
    return AccessResult::forbiddenIf($current_route != 'entity.user.canonical');
  }
}

/**
 * Implements hook_alshaya_i18n_onetime_translation_add().
 */
function alshaya_acm_customer_alshaya_i18n_onetime_translation_add() {
  // Save some translations.
  $strings = [];

  $strings['Unrecognized username or password. <a href=":password">Forgot your password?</a>'] = [
    'en' => 'Unrecognized email address or password.',
  ];

  $strings['Collector contact no.'] = [
    'ar' => 'رقم اتصال المستلم',
  ];

  $strings['Delivery details'] = [
    'ar' => 'تفاصيل التوصيل',
  ];

  $strings['Billing details'] = [
    'ar' => 'معلومات تحرير الفاتورة',
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Helper function to check if user is valid customer.
 *
 * @param \Drupal\user\UserInterface|\Drupal\Core\Session\AccountProxy $user
 *   User to check if it is valid customer.
 *
 * @return bool
 *   True if user is customer, false otherwise.
 */
function alshaya_acm_customer_is_customer($user) {
  if ($user instanceof UserInterface) {
    // Do nothing, we need this to have else condition.
  }
  elseif ($user instanceof AccountProxy) {
    $user = User::load($user->id());
  }
  else {
    return FALSE;
  }

  if (empty($user->get('acq_customer_id')->getString())) {
    return FALSE;
  }

  return TRUE;
}
