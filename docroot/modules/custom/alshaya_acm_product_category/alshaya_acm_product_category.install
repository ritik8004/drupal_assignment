<?php

/**
 * @file
 * Contains install, update, uninstall hooks for alshaya_acm_product_category.
 */

use Drupal\alshaya_config\AlshayaConfigManager;
use Drupal\field\Entity\FieldConfig;
use Drupal\taxonomy\Entity\Term;
use Drupal\alshaya_acm_product\SkuManager;
use Drupal\alshaya_acm_product_category\ProductCategoryTree;
use Drupal\block\Entity\Block;
use Drupal\block\BlockInterface;

/**
 * Implements hook_update_N().
 *
 * Adding new field `all_categories_department_page`.
 */
function alshaya_acm_product_category_update_8048() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_product_category.settings'],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING
  );
}

/**
 * Implements hook_update_N().
 *
 * Create new table to store category that
 * does not exist in drupal.
 */
function alshaya_acm_product_category_update_8047() {
  $schema = alshaya_acm_product_category_schema();
  \Drupal::database()->schema()->createTable('sku_category_map', $schema['sku_category_map']);
}

/**
 * Implements hook_update_N().
 *
 * Updating entity view display to hide DY banner name
 * from PLP and advanced page from website.
 */
function alshaya_acm_product_category_update_8046() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    [
      'core.entity_view_display.taxonomy_term.acq_product_category.default',
    ],
    'alshaya_acm_product_category',
    'install',
  );

  // Hide banner title from advanced pages.
  $manager->updateConfigs(
    [
      'core.entity_view_display.paragraph.promo_block.default',
    ],
    'alshaya_paragraphs',
    'install',
  );
}

/**
 * Implements hook_update_N().
 *
 * [5.16.0]Create new fields (CTA, Display View All, Show on Department page)
 * for acq_product_category taxonomy.
 */
function alshaya_acm_product_category_update_8045() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $fields = [
    'field.storage.taxonomy_term.field_cta',
    'field.storage.taxonomy_term.field_display_view_all',
    'field.storage.taxonomy_term.field_show_on_department_page',
    'field.field.taxonomy_term.acq_product_category.field_display_view_all',
    'field.field.taxonomy_term.acq_product_category.field_cta',
    'field.field.taxonomy_term.acq_product_category.field_show_on_department_page',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Create new field (remove shop prefix and remove name from breadcrumb)
 * for acq_product_category taxonomy.
 */
function alshaya_acm_product_category_update_8044() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $fields = [
    'field.storage.taxonomy_term.field_remove_term_in_breadcrumb',
    'field.field.taxonomy_term.acq_product_category.field_remove_term_in_breadcrumb',
    'field.storage.taxonomy_term.field_remove_shop_prefix',
    'field.field.taxonomy_term.acq_product_category.field_remove_shop_prefix',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * [5.10.0] Add new rest resource alshaya_acm_product_category_mapping.
 */
function alshaya_acm_product_category_update_8043() {
  alshaya_config_install_configs(
    ['rest.resource.alshaya_acm_product_category_mapping'],
    'alshaya_acm_product_category'
  );
}

/**
 * Implements hook_update_N().
 *
 * Create new field (DY Banner) for acq_product_category taxonomy.
 */
function alshaya_acm_product_category_update_8042() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $fields = [
    'field.storage.taxonomy_term.field_dy_banner',
    'field.field.taxonomy_term.acq_product_category.field_dy_banner',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Update acq_product_category term to set the value for field_show_in_lhn
 * with same value as field_category_include_menu in case
 * if no entry in database.
 */
function alshaya_acm_product_category_update_8041() {
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('acq_product_category', 0, NULL, TRUE);
  foreach ($terms as $term) {
    if ($term->get('field_show_in_lhn')->getString() == '') {
      $term->get('field_show_in_lhn')->setValue($term->get('field_category_include_menu')->getString());
      $term->save();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Set config based on sale categorization ids.
 */
function alshaya_acm_product_category_update_8040() {
  $config = \Drupal::configFactory()->getEditable('alshaya_acm_product_category.settings');
  if (empty($config->get('sale_category_ids'))) {
    $config->set('enable_auto_sale_categorisation', 1);
  }
  else {
    $config->set('enable_auto_sale_categorisation', 0);
  }
  $config->save();
}

/**
 * Implements hook_update_N().
 *
 * Create new field (Google Category) for acq_product_category taxonomy.
 */
function alshaya_acm_product_category_update_8039() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $fields = [
    'field.storage.taxonomy_term.field_category_google',
    'field.field.taxonomy_term.acq_product_category.field_category_google',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );

  // Allow google category mapping to manage 'webmaster'.
  // Update role permissions from the config.
  _alshaya_permissions_update_role_from_config(['webmaster']);
}

/**
 * Implements hook_update_N().
 *
 * Create 'sub category block title' for panty guide page.
 */
function alshaya_acm_product_category_update_8038() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['block.block.alshaya_group_by_sub_category_page_title'],
    'alshaya_acm_product_category',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Making 'field_target_link' of category non-translatable.
 */
function alshaya_acm_product_category_update_8037() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['field.field.taxonomy_term.acq_product_category.field_target_link'],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Adding new field `Show in app navigation`.
 */
function alshaya_acm_product_category_update_8036() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $fields = [
    'field.storage.taxonomy_term.field_show_in_app_navigation',
    'field.field.taxonomy_term.acq_product_category.field_show_in_app_navigation',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Add fields for group by subcategory.
 */
function alshaya_acm_product_category_update_8035() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  $configs = [
    'field.storage.taxonomy_term.field_group_by_sub_categories',
    'field.storage.taxonomy_term.field_select_sub_categories_plp',
    'field.storage.taxonomy_term.field_plp_group_category_img',
    'field.storage.taxonomy_term.field_plp_group_category_desc',
    'field.storage.taxonomy_term.field_plp_group_category_title',
    'field.field.taxonomy_term.acq_product_category.field_group_by_sub_categories',
    'field.field.taxonomy_term.acq_product_category.field_select_sub_categories_plp',
    'field.field.taxonomy_term.acq_product_category.field_plp_group_category_img',
    'field.field.taxonomy_term.acq_product_category.field_plp_group_category_desc',
    'field.field.taxonomy_term.acq_product_category.field_plp_group_category_title',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];

  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );

  // Place block.
  $manager->updateConfigs(
    ['block.block.subcategoryblock'],
    'alshaya_acm_product_category',
    'optional'
  );
}

/**
 * Implements hook_update_N().
 *
 * Adding new field `move to right`.
 */
function alshaya_acm_product_category_update_8034() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  // Add new field `move to right` to the `acq_product_category`.
  $fields = [
    'field.storage.taxonomy_term.field_move_to_right',
    'field.field.taxonomy_term.acq_product_category.field_move_to_right',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Update weight of selling price block.
 */
function alshaya_acm_product_category_update_8033() {

  $block_ids = [
    'skusskureferencefinalprice' => 'plpsellingprice',
    'promotionpricefacet' => 'promosellingprice',
    'finalprice' => 'sellingprice',
  ];

  foreach ($block_ids as $price_block_id => $block_id) {
    $price_block = Block::load($price_block_id);
    if ($price_block instanceof BlockInterface) {
      try {
        Block::load($block_id)->setWeight($price_block->getWeight())->save();
      }
      catch (Exception) {
        // Do nothing.
      }
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Set default value for include in menu for desktop/tablet/mobile to true.
 */
function alshaya_acm_product_category_update_8032() {
  $configs = [
    'field.field.taxonomy_term.acq_product_category.field_include_in_desktop',
    'field.field.taxonomy_term.acq_product_category.field_include_in_mobile_tablet',
  ];

  \Drupal::service('alshaya_config.manager')->updateConfigs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Add fields to create term items that can be displayed as a main menu, and
 * which are not commerce category items.
 */
function alshaya_acm_product_category_update_8031() {
  \Drupal::service('module_installer')->install(['svg_image']);
  \Drupal::service('alshaya_config.manager')
    ->updateConfigs(
      [
        'field.storage.taxonomy_term.field_icon',
        'field.storage.taxonomy_term.field_include_in_desktop',
        'field.storage.taxonomy_term.field_include_in_mobile_tablet',
        'field.storage.taxonomy_term.field_override_target_link',
        'field.storage.taxonomy_term.field_target_link',
        'field.field.taxonomy_term.acq_product_category.field_icon',
        'field.field.taxonomy_term.acq_product_category.field_include_in_desktop',
        'field.field.taxonomy_term.acq_product_category.field_include_in_mobile_tablet',
        'field.field.taxonomy_term.acq_product_category.field_override_target_link',
        'field.field.taxonomy_term.acq_product_category.field_target_link',
        // Update dscription of the field.
        'field.field.taxonomy_term.acq_product_category.field_display_as_clickable_link',
      ],
      'alshaya_acm_product_category',
      'install'
    );

  \Drupal::service('alshaya_config.manager')
    ->updateConfigs(
      [
        'core.entity_form_display.taxonomy_term.acq_product_category.default',
        'core.entity_view_display.taxonomy_term.acq_product_category.default',
      ],
      'alshaya_acm_product_category',
      'install',
      AlshayaConfigManager::MODE_MERGE
    );
}

/**
 * Implements hook_update_N().
 *
 * Update pathauto pattern for category to be applied in both languages.
 */
function alshaya_acm_product_category_update_8030() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $configs = ['pathauto.pattern.product_category_pathauto'];
  $manager->updateConfigs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Adding new field `Show in lhn` and enabling the `category_lhn_block` block.
 */
function alshaya_acm_product_category_update_8029() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');

  // Add new field `Show in lhn` to the `acq_product_category`.
  $fields = [
    'field.storage.taxonomy_term.field_show_in_lhn',
    'field.field.taxonomy_term.acq_product_category.field_show_in_lhn',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $fields,
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );

  // Create and enable the new category lhn block.
  $manager->updateConfigs(
    ['block.block.categorylhnblock'],
    'alshaya_transac',
    'optional'
  );

  // Global config for show/hide the lhn block.
  $manager->updateConfigs(
    ['alshaya_acm_product_category.settings'],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING
  );
}

/**
 * Implements hook_update_N().
 *
 * Remove hide_facet_condition_moschino plugin from blocks.
 */
function alshaya_acm_product_category_update_8028() {
  $block_configs = [
    'block.block.plppromotions',
    'block.block.plpsize',
    'block.block.plpproductbrand',
    'block.block.plpproductcollection',
    'block.block.plpcolor',
    'block.block.skusskureferencefinalprice',
    'block.block.plpconcept',
  ];

  foreach ($block_configs as $block) {
    \Drupal::configFactory()->getEditable($block)->clear('visibility.hide_facet_condition_moschino')->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Rename fields and rearrange taxonomy term edit form.
 * Update alshaya menu view blocks to use taxonomy_term__parent as per
 * Drupal 8.6.
 */
function alshaya_acm_product_category_update_8027() {
  $manager = \Drupal::service('alshaya_config.manager');

  $configs = [
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'field.field.taxonomy_term.acq_product_category.field_promotion_banner_mobile',
    'field.field.taxonomy_term.acq_product_category.field_promotion_banner',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );

  $configs = [
    'views.view.product_category_level_2_3',
    'views.view.product_category_level_3',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Add new field to store original category.
 */
function alshaya_acm_product_category_update_8026() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $config_manager */
  $config_manager = \Drupal::service('alshaya_config.manager');

  $configs = [
    'field.storage.node.field_category_original',
    'field.field.node.acq_product.field_category_original',
    'alshaya_acm_product_category.settings',
  ];
  $config_manager->updateConfigs($configs, 'alshaya_acm_product_category');

  $configs = [
    'core.entity_form_display.node.acq_product.default',
    'core.entity_view_display.node.acq_product.default',
    'core.entity_view_display.node.acq_product.teaser',
  ];
  $config_manager->updateConfigs($configs, 'acq_sku');

  $configs = [
    'core.entity_view_display.node.acq_product.modal',
    'core.entity_view_display.node.acq_product.product_category_carousel',
  ];
  $config_manager->updateConfigs($configs, 'alshaya_product');

  $configs = ['core.entity_view_display.node.acq_product.search_result'];
  $config_manager->updateConfigs($configs, 'alshaya_search');

  // Ensure field_category_original is populated for original content.
  // Direct DB query here is fine as we don\'t use it anywhere except
  // during sync.
  \Drupal::database()->query('INSERT INTO node__field_category_original (SELECT * FROM node__field_category)');
}

/**
 * Implements hook_update_N().
 *
 * Making 'field_plp_menu' paragraph field non-translatable.
 */
function alshaya_acm_product_category_update_8025() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $config_manager */
  $config_manager = \Drupal::service('alshaya_config.manager');
  $configs = [
    'field.field.taxonomy_term.acq_product_category.field_plp_menu',
  ];
  $config_manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category'
  );
}

/**
 * Implements hook_update_N().
 *
 * Replace all occurrences of moschino in code.
 */
function alshaya_acm_product_category_update_8024() {
  // Update values of existing taxonomy terms.
  \Drupal::database()->update('taxonomy_term__field_plp_layout')
    ->fields([
      'field_plp_layout_value' => ProductCategoryTree::PLP_LAYOUT_1,
    ])
    ->condition('field_plp_layout_value', 'moschino')
    ->execute();

  $manager = \Drupal::service('alshaya_config.manager');

  // Update value in config.
  $manager->updateConfigs(
    ['alshaya_master.plp_settings'],
    'alshaya_master',
    'install'
  );

  // Update value of taxonomy field.
  $configs = [
    'field.storage.taxonomy_term.field_plp_layout',
    'field.field.taxonomy_term.acq_product_category.field_plp_layout',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );

  // Remove old plugin from blocks.
  $block_configs = [
    'block.block.plppromotions',
    'block.block.plpsize',
    'block.block.plpproductbrand',
    'block.block.plpproductcollection',
    'block.block.plpcolor',
    'block.block.skusskureferencefinalprice',
    'block.block.plpconcept',
  ];

  foreach ($block_configs as $block) {
    \Drupal::configFactory()
      ->getEditable($block)
      ->clear('visibility.hide_facet_condition_moschino')
      ->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Enable link attributes module.
 * Adding new fields for moschino for the product category vocabulary.
 */
function alshaya_acm_product_category_update_8021() {
  \Drupal::service('module_installer')->install(['link_attributes']);
  $manager = \Drupal::service('alshaya_config.manager');
  $configs = [
    'field.storage.taxonomy_term.field_plp_menu',
    'field.storage.taxonomy_term.field_plp_layout',
    'field.storage.taxonomy_term.field_plp_menu_icon',
    'field.storage.taxonomy_term.field_mobile_plp_video_links',
    'field.field.taxonomy_term.acq_product_category.field_plp_layout',
    'field.field.taxonomy_term.acq_product_category.field_plp_menu',
    'field.field.taxonomy_term.acq_product_category.field_plp_menu_icon',
    'field.field.taxonomy_term.acq_product_category.field_mobile_plp_video_links',
    'field.storage.taxonomy_term.field_plp_video_links',
    'field.field.taxonomy_term.acq_product_category.field_plp_video_links',
    'field.storage.taxonomy_term.field_plp_upload_video',
    'field.field.taxonomy_term.acq_product_category.field_plp_upload_video',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );

  $block_configs = [
    'block.block.plppromotions',
    'block.block.plpsize',
    'block.block.plpproductbrand',
    'block.block.plpproductcollection',
    'block.block.plpcolor',
    'block.block.skusskureferencefinalprice',
    'block.block.plpconcept',
  ];

  foreach ($block_configs as $block) {
    // Re-save config for the overrides to take effect.
    \Drupal::configFactory()->getEditable($block)
      ->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Adding new field 'pdp_layout' for the product category vocabulary.
 */
function alshaya_acm_product_category_update_8020() {
  $manager = \Drupal::service('alshaya_config.manager');
  $configs = [
    'field.storage.taxonomy_term.field_pdp_layout',
    'field.field.taxonomy_term.acq_product_category.field_pdp_layout',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );

  $manager->updateConfigs(
    ['alshaya_acm_product.settings'],
    'alshaya_acm_product',
    'install'
  );

  // Updating all taxonomy terms to have 'inherit site config' by default.
  $query = \Drupal::entityQuery('taxonomy_term');
  $query->condition('vid', 'acq_product_category');
  $tids = $query->execute();
  foreach ($tids as $tid) {
    $term = Term::load($tid);
    if (!empty($term)) {
      $term->field_pdp_layout->setValue(SkuManager::PDP_LAYOUT_INHERIT_KEY);
      $term->save();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Add new pdp image slider position field.
 */
function alshaya_acm_product_category_update_8019() {
  $manager = \Drupal::service('alshaya_config.manager');
  $configs = [
    'field.storage.taxonomy_term.field_pdp_image_slider_position',
    'field.field.taxonomy_term.acq_product_category.field_pdp_image_slider_position',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  $manager->updateConfigs(
    $configs,
    'alshaya_acm_product_category',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Create "size guide anchor" field for product category taxonomy.
 */
function alshaya_acm_product_category_update_8018() {
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    [
      'field.storage.taxonomy_term.field_size_guide_anchor',
      'field.field.taxonomy_term.acq_product_category.field_size_guide_anchor',
    ],
    'alshaya_acm_product_category',
    'install'
  );

  $manager->updateConfigs(
    [
      'core.entity_form_display.taxonomy_term.acq_product_category.default',
      'core.entity_view_display.taxonomy_term.acq_product_category.default',
    ],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING_RECURSIVE
  );
}

/**
 * Implements hook_update_N().
 *
 * Updating product category vocab highlight paragraph field.
 */
function alshaya_acm_product_category_update_8017() {
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['field.field.taxonomy_term.acq_product_category.field_main_menu_highlight'],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Update views for product category taxonomy terms to use status field.
 */
function alshaya_acm_product_category_update_8016() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs([
    'views.view.product_category_level_3',
  ],
    'alshaya_acm_product_category'
  );
}

/**
 * Implements hook_update_N().
 *
 * Making 'field_promotion_banner_mobile' translatable.
 */
function alshaya_acm_product_category_update_8015() {
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['field.field.taxonomy_term.acq_product_category.field_promotion_banner_mobile'],
    'alshaya_acm_product_category',
    'install',
    AlshayaConfigManager::MODE_MERGE
  );
}

/**
 * Implements hook_update_N().
 *
 * Adding new field 'Display as clickable link' to product category vocabulary.
 */
function alshaya_acm_product_category_update_8014() {
  $configs = [
    'field.storage.taxonomy_term.field_display_as_clickable_link',
    'field.field.taxonomy_term.acq_product_category.field_display_as_clickable_link',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  \Drupal::service('alshaya_config.manager')->updateConfigs($configs, 'alshaya_acm_product_category');

  // Update value of existing taxonomy terms.
  $query = \Drupal::entityQuery('taxonomy_term');
  $query->condition('vid', 'acq_product_category');
  $tids = $query->execute();
  foreach ($tids as $tid) {
    $term = Term::load($tid);
    if (!empty($term)) {
      $term->field_display_as_clickable_link->setValue('1');
      $term->save();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Update views for product category taxonomy terms.
 */
function alshaya_acm_product_category_update_8013() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs([
    'views.view.product_category_level_3',
    'views.view.product_category_level_2_3',
  ],
    'alshaya_acm_product_category'
  );
}

/**
 * Implements hook_update_N().
 *
 * Update view of PLP promotional banner to hide if empty.
 */
function alshaya_acm_product_category_update_8012() {
  alshaya_config_install_configs(['views.view.plp_promotional_banner'], 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_dependencies().
 */
function alshaya_acm_product_category_update_dependencies() {
  return [
    'alshaya_acm_product_category' => [
      '8007' => [
        'acq_sku' => '8006',
      ],
      '8017' => [
        'alshaya_paragraphs' => '8118',
      ],
    ],
  ];
}

/**
 * Implements hook_update_N().
 *
 * Adding new field 'Mobile only - Dept Page' to product category vocabulary.
 */
function alshaya_acm_product_category_update_8011() {
  $configs = [
    'field.storage.taxonomy_term.field_mobile_only_dpt_page_link',
    'field.field.taxonomy_term.acq_product_category.field_mobile_only_dpt_page_link',
    'field.field.taxonomy_term.acq_product_category.field_category_quicklink_plp_mob',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Change label of the field.
 */
function alshaya_acm_product_category_update_8010() {
  alshaya_config_install_configs(['field.field.taxonomy_term.acq_product_category.field_category_quicklink_plp_mob'], 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Update view for entity reference.
 */
function alshaya_acm_product_category_update_8009() {
  alshaya_config_install_configs(['views.view.product_category_level_3'], 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Adding new fields Image, BG and Font color in acq_category.
 * Change container from div to h2 for dept page sidebar menu L2 category
 * title.
 */
function alshaya_acm_product_category_update_8008() {
  $configs = [
    'field.storage.taxonomy_term.field_image_text_font_color',
    'field.storage.taxonomy_term.field_image_text_bg_color',
    'field.storage.taxonomy_term.field_category_image',
    'field.field.taxonomy_term.acq_product_category.field_image_text_font_color',
    'field.field.taxonomy_term.acq_product_category.field_image_text_bg_color',
    'field.field.taxonomy_term.acq_product_category.field_category_image',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'views.view.product_category_level_2_3',
  ];

  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');

  alshaya_config_install_configs(['image.style.186x216'], 'alshaya_image_styles');
}

/**
 * Implements hook_update_N().
 *
 * Update form display and view display for category vocabulary.
 */
function alshaya_acm_product_category_update_8007() {
  $configs = [
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];

  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Adding new field for promotion banner in mobile and related view.
 * Update product_category_level_3 view to remove include_menu field condition.
 */
function alshaya_acm_product_category_update_8006() {
  $configs = [
    'field.storage.taxonomy_term.field_promotion_banner_mobile',
    'field.field.taxonomy_term.acq_product_category.field_promotion_banner_mobile',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'views.view.plp_promotional_banner',
    'views.view.product_category_level_3',
  ];

  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 *  Install config for adding extra paragraph to main menu highlight field.
 */
function alshaya_acm_product_category_update_8005() {
  alshaya_config_install_configs(['field.field.taxonomy_term.acq_product_category.field_main_menu_highlight'], 'alshaya_acm_product_category', 'install');
}

/**
 * Implements hook_update_N().
 *
 * Adding new field for mobile navigation on top of PLP.
 */
function alshaya_acm_product_category_update_8004() {
  $configs = [
    'field.storage.taxonomy_term.field_category_quicklink_plp_mob',
    'field.field.taxonomy_term.acq_product_category.field_category_quicklink_plp_mob',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
    'views.view.product_category_level_3',
  ];

  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');
  alshaya_config_install_configs(['block.block.views_block__product_category_level_3_block_2'], 'alshaya_acm_product_category', 'optional');
}

/**
 * Implements hook_update_N().
 *
 * Adding new module 'jquery_minicolors' and adding two new fields for term
 * background and font color to the 'acq_product_category' vocabulary.
 */
function alshaya_acm_product_category_update_8003() {
  // Install jquery-minicolors module.
  if (!\Drupal::moduleHandler()->moduleExists('jquery_minicolors')) {
    \Drupal::service('module_installer')->install(['jquery_minicolors'], TRUE);
  }

  $configs = [
    'core.entity_view_mode.paragraph.hightlight_image_186x184',
    'core.entity_view_display.paragraph.image_title_subtitle.hightlight_image_186x184',
    'field.storage.taxonomy_term.field_term_font_color',
    'field.storage.taxonomy_term.field_term_background_color',
    'field.field.taxonomy_term.acq_product_category.field_term_font_color',
    'field.field.taxonomy_term.acq_product_category.field_term_background_color',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
  ];
  alshaya_config_install_configs($configs, 'alshaya_acm_product_category', 'install');
}

/**
 * Implements hook_update_N().
 *
 * Adding new field for product category vocabulary for show/hide plp banner.
 */
function alshaya_acm_product_category_update_8002() {
  $configs = [
    'field.storage.taxonomy_term.field_promo_banner_for_mobile',
    'field.field.taxonomy_term.acq_product_category.field_promo_banner_for_mobile',
    'core.entity_form_display.taxonomy_term.acq_product_category.default',
    'core.entity_view_display.taxonomy_term.acq_product_category.default',
    'field.field.taxonomy_term.acq_product_category.field_main_menu_highlight',
  ];

  alshaya_config_install_configs($configs, 'alshaya_acm_product_category');
}

/**
 * Implements hook_update_N().
 *
 * Enable translation for promotional banner field in acq_product_category.
 */
function alshaya_acm_product_category_update_8001() {
  $config = \Drupal::configFactory()->getEditable('field.field.taxonomy_term.acq_product_category.field_promotion_banner');
  $config->set('translatable', TRUE);
  $config->save();

  $field = FieldConfig::loadByName('taxonomy_term', 'acq_product_category', 'field_promotion_banner');
  $field->setTranslatable(TRUE);
  $field->save();

  // Revert the view to have language filter.
  $reverter = \Drupal::service('config_update.config_update');
  $reverter->revert('view', 'plp_promotional_banner');
}

/**
 * Implements hook_schema().
 *
 * Defines the database tables used by this module.
 *
 * @see hook_schema()
 */
function alshaya_acm_product_category_schema() {
  $schema = [];
  $schema['sku_category_map'] = [
    'description' => 'Stores SKU and magento category Ids.',
    'fields' => [
      'sku' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ],
      'mdc_category_id' => [
        'description' => 'Magento category id.',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'unique keys' => [
      'sku_mdc_category_id' => [
        'sku',
        'mdc_category_id',
      ],
    ],
  ];
  return $schema;
}
