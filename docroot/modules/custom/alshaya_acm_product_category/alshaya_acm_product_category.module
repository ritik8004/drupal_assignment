<?php

/**
 * @file
 * Module file.
 */

use Drupal\block\Entity\Block;
use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme().
 */
function alshaya_acm_product_category_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_shop_by' => [
      'template' => 'alshaya-shop-by',
      'variables' => [
        'term_tree' => NULL,
      ],
    ],
  ];
}

/**
 * Implements template_preprocess_hook().
 */
function template_preprocess_alshaya_shop_by(&$variables) {
  // Number of columns to show/divide.
  $column_count = 2;

  // Splite/Chunk the array.
  $items = array_chunk($variables['term_tree'], ceil(count($variables['term_tree']) / $column_count));

  // Add items to the variables array.
  $variables['items'] = $items;
}

/**
 * Implements hook_block_access().
 */
function alshaya_acm_product_category_block_access(Block $block, $operation, AccountInterface $account) {
  // Only for the PLP promotional banner block.
  if ($operation == 'view' && $block->getPluginId() == 'views_block:plp_promotional_banner-block_1') {
    /* @var \Drupal\taxonomy\Entity\Term $term */
    if ($term = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
      return AccessResult::forbiddenIf(_alshaya_acm_product_category_hide_plp_banner_for_mobile($term));
    }
  }

  // No opinion.
  return AccessResult::neutral();
}

/**
 * Hide or not PLP banner for mobile.
 *
 * @param \Drupal\taxonomy\Entity\Term $term
 *   Term object.
 *
 * @return bool
 *   PLP banner for mobile hide or not.
 */
function _alshaya_acm_product_category_hide_plp_banner_for_mobile(Term $term) {
  $mobile_detect = new Mobile_Detect();
  if ($mobile_detect->isMobile() && ($mobile_banner = $term->get('field_promo_banner_for_mobile'))) {
    return $mobile_banner->getValue() ? (bool) $mobile_banner->getValue()[0]['value'] : FALSE;
  }

  return FALSE;
}

/**
 * Implements hook_preprocess_block().
 */
function alshaya_acm_product_category_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      // Do not process if the super category feature not enabled.
      if (!\Drupal::config('alshaya_acm_product_category.category_menu.settings')->get('status')) {
        return;
      }

      /** @var \Drupal\alshaya_acm_product_category\ProductCategoryTree $product_category_tree */
      $product_category_tree = \Drupal::service('alshaya_acm_product_category.product_category_tree');
      $term = $product_category_tree->getCategoryTermFromRoute();

      if (!empty($term)) {
        $parents = $product_category_tree->getCategoryTermParents($term);
        if (!empty($parents)) {
          $parent = end($parents);
        }

        if (!empty($parent) && $variables['content']['site_logo']['#access']) {
          // Create a name without spaces and any special character.
          $term_clean_name = Html::cleanCssIdentifier(Unicode::strtolower($parent->label()));
          // Set the language suffix for logo based on current language.
          $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
          $langcode = ($langcode != 'en') ? '-' . $langcode : '';
          // Current active theme object.
          $theme = \Drupal::service('theme.manager')->getActiveTheme();
          // Set the logo path based on term name and current language.
          $variables['content']['site_logo']['#uri'] = $GLOBALS['base_url'] . '/' . $theme->getPath() . '/' . $term_clean_name . '-logo' . $langcode . '.svg';
          // Set image Alt based on current brand.
          $variables['content']['site_logo']['#alt'] = $parent->label();
          $variables['content']['site_name']['#markup'] = $parent->label();
          // Set the site path to brand page.
          $variables['content']['site_path']['#markup'] = $parent->toLink();
        }
      }
      break;
  }
}
