<?php

/**
 * @file
 * Contains all hook implementations related to Drupal.
 */

/**
 * Implements hook_page_attachments().
 */
function alshaya_rum_page_attachments(array &$page) {
  // Avoid loading script on admin pages.
  if (!(\Drupal::service('router.admin_context')->isAdminRoute())) {
    $rum_user_id = \Drupal::config('alshaya_rum.settings')->get('rum_user_id');

    // Load RUM script only on the whitelisted pages or if * is in list of
    // whitelisted pages.
    if ($rum_user_id) {
      $request = \Drupal::requestStack()->getCurrentRequest();
      $path = \Drupal::service('path.current')->getPath($request);
      $path_alias = mb_strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($path));

      // In case of PLP pages, requires trailing slash in the url.
      $path_alias = (strpos($path, '/taxonomy/term') === FALSE)
        ? $path_alias
        : rtrim($path_alias, '/') . '/';
      $path_matcher = \Drupal::service('path.matcher');

      $pages = \Drupal::config('alshaya_rum.settings')->get('whitelisted_rum_paths');
      $whitelisted_rum_path_array = array_filter(preg_split('/\r\n|\r|\n/', $pages));

      $attach_rum = FALSE;

      // Special handling for '<front>' page.
      if ($path_matcher->isFrontPage() &&
        (in_array('<front>', $whitelisted_rum_path_array))) {
        $attach_rum = TRUE;
      }
      elseif ((in_array('*', $whitelisted_rum_path_array))) {
        $attach_rum = TRUE;
      }
      elseif ($path_matcher->matchPath($path_alias, $pages)) {
        $attach_rum = TRUE;
      }

      // Attach the RUM script.
      if ($attach_rum) {
        $page['#attached']['library'][] = 'alshaya_rum/rum_script';
        $page['#cache']['tags'][] = 'config:alshaya_rum.settings';
      }
    }
  }
}

/**
 * Implements hook_library_info_build().
 */
function alshaya_rum_library_info_build() {
  $rum_user_id = \Drupal::config('alshaya_rum.settings')->get('rum_user_id');

  return [
    'rum_script' => [
      'js' => [
        '//rum.monitis.com/get/jsbenchmark.min.js?id=' . $rum_user_id => [
          'type' => 'external',
          'async' => 'async',
        ],
      ],
    ],
  ];
}
