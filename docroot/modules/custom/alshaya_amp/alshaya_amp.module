<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\Component\Utility\Xss;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function alshaya_amp_theme($existing, $type, $theme, $path) {
  $items = [];

  $items['alshaya_amp_menu'] = [
    'template' => 'alshaya-amp-menu',
    'variables' => [
      'data' => NULL,
    ],
  ];

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_amp_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $build_info = $form_state->getBuildInfo();
  if (isset($build_info['args'][0]) && ($theme = $build_info['args'][0])) {
    $config = \Drupal::configFactory()->getEditable('alshaya_amp.settings');
    $form['amp_setting'] = [
      '#type' => 'details',
      '#title' => t('AMP Settings'),
      '#open' => TRUE,
    ];
    $form['amp_setting']['settings']['image_height_ratio'] = [
      '#type' => 'textfield',
      '#title' => t('Image height ratio'),
      '#description' => t('Enter the height for the image ratio.'),
      '#default_value' => $config->get($theme . '.image_height_ratio')?: $config->get('image_height_ratio'),
    ];
    $form['amp_setting']['settings']['image_width_ratio'] = [
      '#type' => 'textfield',
      '#title' => t('Image width ratio'),
      '#description' => t('Enter the width for the image ratio.'),
      '#default_value' => $config->get($theme . '.image_width_ratio')?: $config->get('image_width_ratio'),
    ];

    // Register submit handler.
    array_unshift($form['#submit'], 'alshaya_amp_save_system_theme_settings');
  }
}

/**
 * Save amp settings for the theme.
 */
function alshaya_amp_save_system_theme_settings(&$form, FormStateInterface $form_state) {
  $build_info = $form_state->getBuildInfo();
  if (isset($build_info['args'][0])) {
    $theme = $build_info['args'][0];
    $height_ratio = $form_state->getValue('image_height_ratio');
    $width_ratio = $form_state->getValue('image_width_ratio');
    $config = \Drupal::configFactory()->getEditable('alshaya_amp.settings');
    $config->set($theme . '.image_height_ratio', $height_ratio);
    $config->set($theme . '.image_width_ratio', $width_ratio);
    $config->save();
  }
}

/**
 * Implements hook_element_info_alter().
 */
function alshaya_amp_element_info_alter(array &$info) {
  if (isset($info['amp_processed_text']['#pre_render'])) {
    $info['amp_processed_text']['#pre_render'][] = '_alshaya_amp_body_prerender';
  }
}

/**
 * Adds a custom pre-render to 'amp_processed_text' element.
 *
 * @param array $element
 *   Element array.
 *
 * @return array
 *   Element to render.
 */
function _alshaya_amp_body_prerender(array $element) {
  if (isset($element['#markup'])) {
    $markup = str_ireplace(
      ['<img', '<video', '/video>', '<audio', '/audio>'],
      ['<amp-img', '<amp-video', '/amp-video>', '<amp-audio', '/amp-audio>'],
      $element['#markup']
    );

    // Adding height, width and layout parameter as required by the AMP.
    $amp_theme = \Drupal::config('amp.theme')->get('amptheme');
    $amp_setting = \Drupal::config('alshaya_amp.settings');
    $height = $amp_setting->get($amp_theme . '.image_height_ratio')?: $amp_setting->get('image_height_ratio');
    $width = $amp_setting->get($amp_theme . '.image_width_ratio')?: $amp_setting->get('image_width_ratio');
    $element['#markup'] = preg_replace('/<amp-img(.*?)>/', '<amp-img$1 height="' . $height . '" width="' . $width . '" layout="responsive"></amp-img>', $markup);

    // Adding allowed tag otherwise amp tags will be stripped off.
    // @see \Drupal\Core\Render\Renderer::ensureMarkupIsSafe().
    $element['#allowed_tags'] = array_merge(Xss::getAdminTagList(), [
      'amp-img',
      'amp-video',
      'amp-audio',
      'amp-iframe',
    ]);
  }

  return $element;
}
