<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function alshaya_secondary_main_menu_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_secondary_main_menu_level1' => [
      'template' => 'alshaya-secondary-main-menu-level1',
      'variables' => [
        'items' => NULL,
        'column_tree' => NULL,
        'menu_type' => NULL,
        'settings' => [],
      ],
    ],
    'alshaya_secondary_main_menu_level2' => [
      'template' => 'alshaya-secondary-main-menu-level2',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_secondary_main_menu_level3' => [
      'template' => 'alshaya-secondary-main-menu-level3',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_secondary_main_menu_highlights' => [
      'template' => 'alshaya-secondary-main-menu-highlights',
      'variables' => [
        'data' => NULL,
      ],
    ],
    'alshaya_secondary_promo_image' => [
      'template' => 'alshaya_secondary_promo_image',
      'variables' => [
        'promo' => NULL,
      ],
    ],
  ];
}

/**
 * Prepares variables for menu items.
 *
 * @param array $variables
 *   An associative array containing menu items.
 */
function alshaya_secondary_main_menu_preprocess_alshaya_secondary_main_menu_level1(array &$variables) {
  if ($variables['menu_type'] == 'default') {
    _alshaya_secondary_main_menu_process_tag_attributes($variables['column_tree']);
  }
  else {
    _alshaya_secondary_main_menu_process_tag_attributes($variables['items']);
  }
}

/**
 * Prepares href for anchor tag for given menu item.
 */
function _alshaya_secondary_main_menu_process_tag_attributes(array &$data) {
  foreach ($data as &$record) {
    if (isset($record['l1_object'])) {
      $record['l1_object']['tag'] = 'div';
      $record['l1_object']['tag_attr'] = '';
      if (!empty($record['l1_object']['url']->toString())) {
        $record['l1_object']['tag'] = 'a';
        $record['l1_object']['tag_attr'] = "href={$record['l1_object']['url']->toString()}";
      }
      if (!empty($record['columns'])) {
        foreach ($record['columns'] as $l2 => $value) {
          $record['columns'][$l2]['tag'] = 'div';
          $record['columns'][$l2]['tag_attr'] = 'div';
          if (!empty($record['columns'][$l2]['url']->toString())) {
            $record['columns'][$l2]['tag'] = 'a';
            $record['columns'][$l2]['tag_attr'] = "href={$record['columns'][$l2]['url']->toString()}";
          }
          if (!empty($record['columns'][$l2]['below'])) {
            _alshaya_secondary_main_menu_process_tag_attributes_columns($record['columns'][$l2]['below']);
          }
        }
      }
    }
    else {
      foreach ($record['columns'] as $rec) {
        $record['columns']['tag'] = 'div';
        $record['columns']['tag_attr'] = '';
        if (!empty(($rec['url']->toString()))) {
          $record['columns']['tag'] = 'a';
          $record['columns']['tag_attr'] = "href={$rec['url']->toString()}";
        }
        if (!empty($rec['below'])) {
          _alshaya_secondary_main_menu_process_tag_attributes($rec['below']);
        }
      }
    }
  }
}

/**
 * Prepares href for anchor tag for given menu item in columns.
 */
function _alshaya_secondary_main_menu_process_tag_attributes_columns(array &$data) {
  foreach ($data as $key => $value) {
    $data[$key]['tag'] = 'div';
    $data[$key]['tag_attr'] = '';
    if (!empty($data[$key]['url']->toString())) {
      $data[$key]['tag'] = 'a';
      $data[$key]['tag_attr'] = "href={$data[$key]['url']->toString()}";
    }
    if (isset($data[$key]['below'])) {
      _alshaya_secondary_main_menu_process_tag_attributes_columns($data[$key]['below']);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function alshaya_secondary_main_menu_preprocess_alshaya_secondary_main_menu_level2(&$variables) {
  $variables['menu_type'] = \Drupal::config('alshaya_secondary_main_menu.settings')->get('desktop_secondary_main_menu_layout');
  if ($variables['menu_type'] == 'default') {
    $highlight_paragraph = $variables['data']['l1_object']['highlight_paragraph'];
  }
}

/**
 * Implements hook_form_alter().
 */
function alshaya_secondary_main_menu_form_alter(&$form, FormStateInterface $form_state) {
  if (($form['#form_id'] == 'menu_link_content_secondary-main-menu_form') && ($form['menu_parent']['#default_value'] != "secondary-main-menu:")) {
    $form['field_secondary_menu_highlight']['#access'] = FALSE;
    $form['field_add_highlights']['#access'] = FALSE;
  }
  if ($form['#form_id'] == 'menu_link_content_secondary-main-menu_form') {
    unset($form['link']['widget']['0']['options']['attributes']['target']);
    $form['field_secondary_menu_highlight']['widget']['0']['top']['paragraph_type_title']['info']['#markup'] = t('Secondary Menu Highlights Block');
    $form['field_secondary_menu_highlight']['widget']['0']['subform']['field_highlight_image']['widget'][0]['#description'] = t('Please upload only square images greater than 253 X 253. One file only. 32 MB limit. Allowed types: png gif jpg jpeg.');
  }
}
