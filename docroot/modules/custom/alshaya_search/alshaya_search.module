<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Plugin\PluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
use Solarium\Core\Query\QueryInterface;
use Drupal\search_api\Query\QueryInterface as SearchApiQueryInterface;

/**
 * Implements hook_views_pre_render().
 */
function alshaya_search_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'search') {
    if (!empty($view->getExposedInput()['keywords'])) {
      $view->setTitle(t('Search results for "@keyword"', ['@keyword' => $view->getExposedInput()['keywords']]));
    }
    else {
      $view->setTitle(t('Search results'));
    }

    // Add search library to search page.
    $view->element['#attached']['library'][] = 'alshaya_search/alshaya_search';
  }

  // Override the 'result summary' header for PLP and Search.
  if ($view->id() == 'search' || $view->id() == 'alshaya_product_list') {
    // Override the 'result summary' header.
    $format_plural = new PluralTranslatableMarkup($view->total_rows, '1 item', '@count items');
    $view->header['result']->options['content'] = $format_plural;
  }
}

/**
 * Implements hook_views_pre_build().
 */
function alshaya_search_views_pre_build(ViewExecutable $view) {
  if (in_array($view->id(), ['search', 'alshaya_product_list'])) {
    $view->display_handler->display['cache_metadata']['contexts'][] = 'facets';
    $view->element['#cache']['contexts'][] = 'facets';
  }

  if (in_array($view->id(), ['search', 'alshaya_product_list'])) {
    // If AND operator setting is enabled, change operator to AND.
    if (\Drupal::config('alshaya_config.settings')->get('alshaya_search_and_operator')) {
      $view->filter['search_api_fulltext']->operator = 'and';
    }
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_search_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (($form['#id'] === 'views-exposed-form-search-page') ||
      ($form['#id'] === 'views-exposed-form-alshaya-product-list-block-1') ||
      ($form['#id'] === 'views-exposed-form-alshaya-product-list-block-2')) {
    $form['facets_container'] = [
      '#type' => 'container',
      '#attributes' => [
        'class' => 'facets-hidden-container',
      ],
    ];

    $form['#attached']['library'][] = 'alshaya_search/alshaya_search';
    $form['keywords']['#attributes'] = ['data-bef-auto-submit-exclude' => ''];
  }
}

/**
 * Implements hook_theme().
 */
function alshaya_search_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_search_gallery' => [
      'variables' => [
        'mainImage' => [],
        'thumbnails' => [],
      ],
      'template' => 'alshaya_search_gallery',
    ],
  ];
}

/**
 * Implements hook_facets_search_api_query_type_mapping_alter().
 */
function alshaya_search_facets_search_api_query_type_mapping_alter($backend_plugin_id, array &$query_types) {
  if (in_array($backend_plugin_id,
    [
      'search_api_solr',
      'search_api_db',
      'search_api_solr_multilingual',
    ]
  )) {
    // For some reason the SKU Final Price shows as a string, so we need to
    // manually add numeric as an option.
    // We want these all to use alshaya_search_granular which is a customization
    // of search_api_granular.
    $query_types['numeric'] = 'alshaya_search_granular';
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function alshaya_search_page_attachments_alter(array &$attachments) {
  $current_path = \Drupal::service('path.current')->getPath();
  // Remove canonical link for search page.
  if ($current_path == '/search') {
    foreach ($attachments['#attached']['html_head'] as $key => $value) {
      if ($value[1] == 'canonical_url') {
        unset($attachments['#attached']['html_head'][$key]);
      }
    }
  }
}

/**
 * Implements hook_ajax_render_alter().
 */
function alshaya_search_ajax_render_alter(array &$data) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $valid_routes = [
    'views.ajax',
  ];

  // Only for ajax route.
  if (in_array($route_name, $valid_routes)) {
    foreach ($data as &$command) {
      if ($command['command'] == 'settings' && isset($command['settings']['views']['ajaxViews'])) {
        $dom_id = key($command['settings']['views']['ajaxViews']);
        $view_name = $command['settings']['views']['ajaxViews'][$dom_id]['view_name'];
        // If 'search' view.
        if ($view_name == 'search') {
          // Adding a command.
          $data[] = [
            'selector' => NULL,
            'command' => 'invoke',
            'method' => 'alshayaSearchHeaderUpdate',
          ];
          $data[] = [
            'selector' => NULL,
            'command' => 'invoke',
            'method' => 'alshayaAttachSearchSlider',
          ];
        }
      }
    }
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function alshaya_search_entity_type_alter(array &$entity_types) {
  $entity_types['facets_facet']->setFormClass('edit', 'Drupal\alshaya_search\Form\AlshayaSearchFacetForm');
}

/**
 * Implements hook_block_view_alter().
 */
function alshaya_search_block_view_alter(array &$build, BlockPluginInterface $block) {
  if ($block->getBaseId() === 'facet_block') {
    $facet_configuration = $block->getConfiguration();
    $facet_mapping = $facet_configuration['id'];
    $facet_id = explode(PluginBase::DERIVATIVE_SEPARATOR, $facet_mapping)[1];
    $display_textbox_item_count = FALSE;
    /** @var \Drupal\facets\FacetInterface $facet */
    $facet_storage = \Drupal::service('entity_type.manager')->getStorage('facets_facet');
    $facet = $facet_storage->load($facet_id);
    $display_textbox = $facet->getThirdPartySetting('alshaya_search', 'display_textbox');
    if ($display_textbox) {
      $display_textbox_item_count = $facet->getThirdPartySetting('alshaya_search', 'display_textbox_item_count');
    }

    if ($display_textbox_item_count) {
      $build['#attached']['drupalSettings']['alshaya_search_facets_display_textbox'] = [
        $block->getPluginId() => $display_textbox_item_count,
      ];
    }

    // Add the currency variable in JS.
    if ($block->getConfiguration()['id'] == 'facet_block:final_price') {
      $build['#attached']['drupalSettings']['alshaya_search_price_currency'] = \Drupal::config('acq_commerce.currency')->get('currency_code');
    }
  }
}

/**
 * Implements hook_search_api_solr_query_alter().
 */
function alshaya_search_search_api_solr_query_alter(QueryInterface $solarium_query, SearchApiQueryInterface $query) {
  $current_langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $solarium_query->addParam('fq', 'ss_search_api_language:"' . $current_langcode . '"');
}
