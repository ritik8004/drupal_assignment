<?php

/**
 * @file
 * Custom installation for Alshaya Search.
 */

use Drupal\search_api\Entity\Index;

/**
 * Implements hook_update_N().
 *
 * Updated facets config.
 */
function alshaya_search_update_8012() {
  $config_facets_alshaya_search = [
    'search_api.index.acquia_search_index',
    'facets.facet.category',
    'facets_summary.facets_summary.filter_bar',
  ];

  // Add index for category data to SOLR index & create facets, facet summary.
  alshaya_config_install_configs($config_facets_alshaya_search, 'alshaya_search');

  // Update alshaya product index to reflect category field.
  alshaya_config_install_configs(['search_api.index.product'], 'alshaya_product');

  $config_facets_acm_promotion = [
    'facets.facet.category_promotion',
    'facets_summary.facets_summary.filter_bar_promotions',
  ];

  // Create facets, facet summary for promotion facets.
  alshaya_config_install_configs($config_facets_acm_promotion, 'alshaya_acm_promotion', 'optional');

  $config_block = [
    'block.block.category',
    'block.block.promotioncategoryfacet',
  ];

  // Place category filter blocks on search & promotion pages.
  alshaya_config_install_configs($config_block, 'alshaya_transac', 'optional');

  // Get current default theme.
  $current_theme = \Drupal::config('system.theme')->get('default');

  // Move blocks to current default theme.
  if (!empty($current_theme)) {
    alshaya_block_move_blocks_theme_to_theme($current_theme, 'alshaya_white_label');
  }
}

/**
 * Implements hook_update_N().
 *
 * Updated facets config.
 */
function alshaya_search_update_8011() {
  $configs = [
    'facets.facet.size',
    'facets.facet.collection',
    'facets_summary.facets_summary.filter_bar',
  ];

  alshaya_config_install_configs($configs, 'alshaya_search');
}

/**
 * Implements hook_update_N().
 *
 * Refactor search and facets config.
 */
function alshaya_search_update_8010() {
  if (isset($_ENV['AH_SITE_NAME'])) {
    // Enable alshaya_search_acquia_search to ensure config are overridden to
    // use solr on cloud.
    \Drupal::service('module_installer')->install(['alshaya_search_acquia_search']);
  }
  else {
    // Enable alshaya_search_local_search to ensure config are overridden to
    // use solr in local.
    \Drupal::service('module_installer')->install(['alshaya_search_local_search']);
  }

  $configs = [
    'search_api.server.acquia_search_server',
    'search_api.index.acquia_search_index',
    'views.view.search',
  ];

  alshaya_config_install_configs($configs, 'alshaya_search');
}

/**
 * Implements hook_update_N().
 *
 * Update search views cache to tag based.
 */
function alshaya_search_update_8009() {
  alshaya_config_install_configs(['views.view.search'], 'alshaya_search');
}

/**
 * Implements hook_update_N().
 */
function alshaya_search_update_8008() {
  $configs = [
    'views.view.term_search',
  ];
  alshaya_config_install_configs($configs, 'alshaya_search');
}

/**
 * Implements hook_update_N().
 *
 * Re-save index to ensure created field is added to index.
 * This was missing in update 8005.
 */
function alshaya_search_update_8006() {
  $index = Index::load('acquia_search_index');

  // Update index options to index only on cron and 1000 per batch.
  $index->setOption('index_directly', FALSE);
  $index->setOption('cron_limit', 1000);

  // Save index to reflect new created field.
  $index->save();
}

/**
 * Implements hook_update_N().
 */
function alshaya_search_update_8005() {
  $configs = [
    'search_api.index.acquia_search_index',
  ];

  alshaya_config_install_configs($configs, 'alshaya_search');

  // Enable sort options on SRP page.
  $sort_options = [
    'name_1',
    'final_price',
  ];
  $config = \Drupal::configFactory()->getEditable('alshaya_search.settings');
  $config->set('sort_options', $sort_options)->save();
}

/**
 * Implements hook_update_N().
 *
 * Update facets config.
 */
function alshaya_search_update_8004() {
  $configs = [
    'facets.facet.brand',
  ];

  alshaya_config_install_configs($configs, 'alshaya_search');
}

/**
 * Implements hook_update_N().
 *
 * Add field for stock in index.
 */
function alshaya_search_update_8003() {
  $config = \Drupal::configFactory()->getEditable('search_api.index.acquia_search_index');

  $config->set('field_settings.stock', [
    'label' => 'Stock',
    'datasource_id' => 'entity:node',
    'property_path' => 'field_skus:entity:stock',
    'type' => 'integer',
    'dependencies' => [
      'config' => [
        'field.storage.node.field_skus',
      ],
      'module' => [
        'acq_sku',
      ],
    ],
  ]);

  $config->save();

  $index = Index::load('acquia_search_index');

  // Re-index all items.
  $index->reindex();

  // Save index to reflect new stock field.
  $index->save();

  // Revert the view.
  $reverter = \Drupal::service('config_update.config_update');
  $reverter->revert('view', 'search');
}

/**
 * Implements hook_update_N().
 *
 * Update index type for color and brand.
 */
function alshaya_search_update_8002() {
  $solr_search_index_color = \Drupal::configFactory()->getEditable('search_api.index.acquia_search_index');
  $solr_search_index_color->set('field_settings.color.type', 'string')->save();
  $solr_search_index_color->set('field_settings.brand.type', 'string')->save();
}

/**
 * Implements hook_update_N().
 *
 * Remove the faulty sort config creating notices in AR.
 */
function alshaya_search_update_8001() {
  \Drupal::languageManager()->getLanguageConfigOverride('ar', 'views.view.search')->delete();
  _alshaya_search_translate_search_view_config();
}

/**
 * Implements hook_install().
 */
function alshaya_search_install() {
  // Allow anonymous and authenticated users to use autocomplete.
  user_role_grant_permissions('anonymous', ['use search_api_autocomplete for search_api_views_search']);
  user_role_grant_permissions('authenticated', ['use search_api_autocomplete for search_api_views_search']);
}
