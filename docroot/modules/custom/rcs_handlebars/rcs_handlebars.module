<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_entity_view().
 */
function rcs_handlebars_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  $templates = &drupal_static('rcs_handlebars_templates', []);

  // Invoke hook to get default values.
  $templates = \Drupal::moduleHandler()->invokeAll('rcs_handlebars_templates');

  // Allow other modules to alter the data based on entity.
  \Drupal::moduleHandler()->alter('rcs_handlebars_templates', $templates, $entity);

  // If any module provided handlebars templates, we need to add the renderer.
  $build['#attached']['library'][] = 'rcs_handlebars/main';
}

/**
 * Implements hook_page_bottom().
 */
function rcs_handlebars_page_bottom(array &$page_bottom) {
  $templates = &drupal_static('rcs_handlebars_templates', []);

  // Load templates.
  array_walk_recursive ($templates, function(&$value, $key){
    if (strpos($value, '.handlebars') !== FALSE) {
      $value = file_get_contents($value);
    }
  });

  // Encode array.
  $scripts = json_encode($templates, JSON_UNESCAPED_UNICODE);

  // Embed handlebars templates.
  $page_bottom['rcs_handlebars_handlebars'] = [
    '#type'  => 'html_tag',
    '#tag'   => 'script',
    '#value' => Markup::create("var rcsHandlebarsTemplates = $scripts;"),
  ];
}

/**
 * Implements hook_rcs_handlebars_templates().
 */
function rcs_handlebars_rcs_handlebars_templates() {
  // List of handlebars templates to be embedded on the page.
  return [
    // List of block templates.
    'block' => [],
    // List of field templates.
    'field' => [],
  ];
}
