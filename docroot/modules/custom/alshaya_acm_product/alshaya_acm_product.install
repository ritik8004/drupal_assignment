<?php

/**
 * @file
 * Contains install, update, uninstall hooks for alshaya_acm_product module.
 */

use Drupal\acq_sku\ProductOptionsManager;

/**
 * Implements hook_update_N().
 *
 * Set weight on product options.
 */
function alshaya_acm_product_update_8002() {
  $option_sets = \Drupal::service('acq_commerce.api')->getProductOptions();

  $weight = 0;
  foreach ($option_sets as $options) {
    foreach ($options['options'] as $key => $value) {
      $result = db_query(
        'UPDATE {taxonomy_term_field_data} AS ttfd
INNER JOIN {taxonomy_term__field_sku_attribute_code} ttfsac ON ttfsac.entity_id = ttfd.tid
INNER JOIN {taxonomy_term__field_sku_option_id} ttfsoi ON ttfsoi.entity_id = ttfd.tid
SET ttfd.weight = :weight
WHERE ttfd.vid = :vid AND ttfsac.field_sku_attribute_code_value = :attr_code AND ttfsoi.field_sku_option_id_value = :attr_value_id',
        [
          ':weight' => $weight++,
          ':vid' => ProductOptionsManager::PRODUCT_OPTIONS_VOCABULARY,
          ':attr_code' => $options['attribute_code'],
          ':attr_value_id' => $key,
        ]
      );
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Apply entity updates to apply t() for field labels in SKU entity.
 */
function alshaya_acm_product_update_8001() {
  \Drupal::service("entity.definition_update_manager")->applyUpdates();
}

/**
 * Implements hook_install().
 */
function alshaya_acm_product_install() {
  // Add fields to store the values from attributes as fields.
  $fields = \Drupal::config('alshaya_acm_product.sku_base_fields')->get('fields');
  acq_sku_add_base_fields($fields);

  // Make meta tags visible in form of acq_product.
  $product_config_factory = Drupal::configFactory()->getEditable('core.entity_form_display.node.acq_product.default');
  $content = $product_config_factory->get('content');
  $content['field_meta_tags'] = [
    'weight' => 110,
    'settings' => [],
    'third_party_settings' => [],
    'type' => 'metatag_firehose',
  ];
  $product_config_factory->set('content', $content);
  $product_config_factory->save();

  $product_config_factory = Drupal::configFactory()->getEditable('core.entity_view_display.node.acq_product.teaser');
  $content = $product_config_factory->get('content');
  $content['field_skus'] = [
    'weight' => 1,
    'settings' => [
      'view_mode' => 'full',
    ],
    'label' => 'hidden',
    'third_party_settings' => [],
    'type' => 'sku_formatter',
  ];
  $product_config_factory->set('content', $content);
  $product_config_factory->save();
}
