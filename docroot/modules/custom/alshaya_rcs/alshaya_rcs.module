<?php

/**
 * @file
 * Module file for Alshaya RCS.
 */

use Drupal\rcs_placeholders\Service\RcsPhPathProcessor;

/**
 * Implements hook_library_info_alter().
 */
function alshaya_rcs_library_info_alter(&$libraries, $extension) {
  if ($extension === 'rcs_placeholders' && isset($libraries['rcs_placeholders'])) {
    $libraries['rcs_placeholders']['dependencies'][] = 'alshaya_white_label/rcs-placeholders';
    $libraries['rcs_placeholders']['dependencies'][] = 'alshaya_rcs/utility';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function alshaya_rcs_preprocess_block(&$variables) {
  $rcs_library = '';

  // Attach CSS theming to RCS blocks via asset libraries.
  switch ($variables['base_plugin_id']) {
    case 'rcs_ph_navigation_menu':
      $rcs_library = 'alshaya_white_label/rcs-ph-navigation-menu';
      break;

    case 'rcs_ph_breadcrumb':
      $rcs_library = 'alshaya_white_label/rcs-ph-breadcrumb';
      break;
  }

  if (!empty($rcs_library)) {
    // Preserve any existing library attachments.
    if (!isset($variables['#attached']['library'])) {
      $variables['#attached']['library'] = [];
    }
    $variables['#attached']['library'][] = $rcs_library;
  }
}

/**
 * Implements hook_rcs_placeholders_graphql_query().
 */
function alshaya_rcs_rcs_placeholders_graphql_query() {
  $query_fields = [];
  $query_fields['urlResolver'] = [
    'query' => [
      'query($url: String!)' => [
        'urlResolver(url:$url)' => [
          'redirectCode',
          'relative_url',
        ],
      ],
    ],
    'variables' => [
      'url' => RcsPhPathProcessor::getFullPath(),
    ],
  ];

  return $query_fields;
}
