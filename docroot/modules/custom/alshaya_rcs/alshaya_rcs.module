<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Site\Settings;

/**
 * Implements hook_theme().
 */
function alshaya_rcs_theme($existing, $type, $theme, $path) {
  return [
    'node__rcs_product__full' => [
      'variables' => [],
    ],
    'node__rcs_product__full_magazine' => [
      'variables' => [
        'price_block' => [],
      ],
    ],
    'node__rcs_product__full_magazine_v2' => [
      'variables' => [],
    ],
    'rcs_commerce_price' => [
      'variables' => [
        'price' => '',
        'currency_format' => '',
        'currency_code_position' => '',
        'decimal_points' => '',
        'append_each_to_price' => '',
      ],
    ],
    'rcs_price_block' => [
      'variables' => [],
    ],
    'rcs_sku_base_form' => [
      'variables' => [],
    ],
    'page__rcs_pdp' => [
      'variable'
    ],
  ];
}

/**
 * Implements hook_page_attachments_alter().
 */
function alshaya_rcs_page_attachments_alter(array &$attachments) {
  $backend_version = \Drupal::service('alshaya_spc.helper')->getCommerceBackendVersion();
  if ($backend_version != 2) {
    return;
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_rcs_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() !== 'rcs_product') {
    return;
  }

  $build['#attached']['library'][] = 'alshaya_rcs/add_to_cart';

  $build['price_block'] = [
    '#theme' => 'rcs_commerce_price',
  ];

  $cart_config = \Drupal::config('alshaya_acm.cart_config');
  $build['#attached']['drupalSettings']['alshaya_spc']['cart_config']['max_cart_qty'] = $cart_config->get('max_cart_qty');
  $build['#cache']['tags'] = array_merge($build['#cache']['tags'], $cart_config->getCacheTags());

  $product_settings = \Drupal::config('alshaya_acm_product.settings');
  $build['#attached']['drupalSettings']['vat_text'] = $product_settings->get('vat_text');
  $build['#cache']['tags'] = array_merge($build['#cache']['tags'], $product_settings->getCacheTags());

  $api_settings = Settings::get('alshaya_api.settings');
  $build['#attached']['drupalSettings']['cart']['url'] = ($api_settings['alshaya_proxy']) ?
  '/proxy/?url=' . $api_settings['magento_host'] :
  $api_settings['magento_host'];

  $build['#attached']['drupalSettings']['backend_language_prefix'] = Settings::get('magento_lang_prefix');
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_rcs_commerce_price(array &$variables) {
  $acm_settings = \Drupal::config('alshaya_acm.settings');

  // With matchback enabled, we will have 'each' word added to price
  // based on the quantity for main product as well as matchback products
  // following the host site implementation.
  $variables['append_each_to_price'] = $acm_settings->get('show_crosssell_as_matchback') && $acm_settings->get('append_each_to_price')
    ? TRUE
    : FALSE;

  $current_language = \Drupal::languageManager()
    ->getConfigOverrideLanguage()
    ->getId();

  if (empty($config_data[$current_language])) {
    $config = \Drupal::configFactory()->get('acq_commerce.currency');
    $config_data[$current_language]['currency_format'] = $config->get('currency_code');
    $config_data[$current_language]['currency_code_position'] = $config->get('currency_code_position');
    $config_data[$current_language]['decimal_points'] = $config->get('decimal_points');
  }

  $variables['currency_format'] = $config_data[$current_language]['currency_format'];
  $variables['currency_code_position'] = $config_data[$current_language]['currency_code_position'];
}

/**
 * Implements hook_preprocess_html().
 */
function alshaya_rcs_preprocess_html(array &$variables) {
  $variables['rcs_templates'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => 'hidden',
    ],
  ];

  $price_template = [
    '#theme' => 'rcs_commerce_price',
  ];

  $price_block_template = [
    '#theme' => 'rcs_price_block'
  ];

  $variables['rcs_templates']['price'] = [
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => render($price_template),
    '#attributes' => [
      'class' => 'rcs-templates--price',
    ],
  ];

  $variables['rcs_templates']['price_block'] = [
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => render($price_block_template),
    '#attributes' => [
      'class' => 'rcs-templates--price_block',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function alshaya_rcs_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.node.canonical') {
    $node = \Drupal::request()->attributes->get('node');
    if ($node->bundle() == 'rcs_product') {
      $suggestions[] = 'page__rcs_pdp';
    }
  }
}
