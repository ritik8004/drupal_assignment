<?php

/**
 * @file
 * Module file for Alshaya RCS.
 */

use Drupal\rcs_placeholders\Service\RcsPhPathProcessor;

/**
 * Implements hook_library_info_alter().
 */
function alshaya_rcs_library_info_alter(&$libraries, $extension) {
  if ($extension === 'rcs_placeholders' && isset($libraries['rcs_placeholders'])) {
    $libraries['rcs_placeholders']['dependencies'][] = 'alshaya_white_label/rcs-placeholders';
    $libraries['rcs_placeholders']['dependencies'][] = 'alshaya_rcs/utility';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function alshaya_rcs_preprocess_block(&$variables) {
  $rcs_library = '';

  // Attach CSS theming to RCS blocks via asset libraries.
  switch ($variables['base_plugin_id']) {
    case 'rcs_ph_navigation_menu':
      $rcs_library = 'alshaya_white_label/rcs-ph-navigation-menu';
      break;

    case 'rcs_ph_breadcrumb':
      $rcs_library = 'alshaya_white_label/rcs-ph-breadcrumb';
      break;
  }

  if (!empty($rcs_library)) {
    // Preserve any existing library attachments.
    if (!isset($variables['#attached']['library'])) {
      $variables['#attached']['library'] = [];
    }
    $variables['#attached']['library'][] = $rcs_library;
  }
}

/**
 * Implements hook_rcs_placeholders_graphql_query().
 */
function alshaya_rcs_rcs_placeholders_graphql_query() {
  $query_fields = [];
  $query_fields['urlResolver'] = [
    'query' => [
      'query($url: String!)' => [
        'urlResolver(url:$url)' => [
          'redirectCode',
          'relative_url',
        ],
      ],
    ],
    'variables' => [
      'url' => RcsPhPathProcessor::getFullPath(),
    ],
  ];

  return $query_fields;
}

/**
 * Implements hook_modules_installed().
 */
function alshaya_rcs_modules_installed($modules) {
  // Enable rcs super category module only if super category feature is enabled.
  if (\Drupal::configFactory()->get('alshaya_super_category.settings')->get('status')) {
    \Drupal::service('module_installer')->install(['alshaya_rcs_super_category']);
  }

  // Go through the list of all the enabled modules and check if any overriden
  // module exists in RCS. if YES then enable the same in RCS.
  $enable_module_list = [];
  $mapped_modules_list = _alshaya_rcs_get_modules_mapping();

  foreach ($modules as $module) {
    if (array_key_exists($module, $mapped_modules_list)) {
      $enable_module_list[] = $mapped_modules_list[$module];
    }
  }

  // Enable all the required modules.
  if (count($enable_module_list) > 0) {
    \Drupal::service('module_installer')->install($enable_module_list);
  }
}

/**
 * Function to get the mapping of overridden modules in RCS.
 */
function _alshaya_rcs_get_modules_mapping() {
  return [
    'alshaya_magazine' => 'alshaya_rcs_magazine',
    'alshaya_color_split' => 'alshaya_rcs_color_split',
    'alshaya_add_to_bag' => 'alshaya_rcs_add_to_bag',
    'alshaya_wishlist' => 'alshaya_rcs_wishlist',
    'alshaya_bazaar_voice' => 'alshaya_rcs_bazaar_voice',
    'alshaya_aura_react' => 'alshaya_rcs_aura',
    'alshaya_media_assets' => 'alshaya_rcs_assets',
    'alshaya_online_returns' => 'alshaya_rcs_online_returns',
    'alshaya_product_lpn' => 'alshaya_rcs_product_lpn',
    'alshaya_olapic' => 'alshaya_rcs_olapic',
    'alshaya_mobile_app' => 'alshaya_rcs_mobile_app',
  ];
}

/**
 * Implements hook_alshaya_super_category_status_update().
 */
function alshaya_rcs_alshaya_super_category_status_update($status, $default_parent, $path_alter) {
  // Enable/Disable the rcs super category module based on
  // the super category feature status.
  $module_installer = \Drupal::service('module_installer');
  if ($status) {
    $module_installer->install(['alshaya_rcs_super_category']);
  }
  elseif (\Drupal::moduleHandler()->moduleExists('alshaya_rcs_super_category')) {
    $module_installer->uninstall(['alshaya_rcs_super_category']);
  }
}
