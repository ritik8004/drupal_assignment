<?php

/**
 * @file
 * Functions around module install.
 */

use Drupal\block\Entity\Block;
use Drupal\block\BlockInterface;
use Drupal\taxonomy\TermInterface;

/**
 * Implements hook_install().
 */
function alshaya_rcs_main_menu_install() {
  // Move the rcs navigation block to current theme.
  $current_theme = \Drupal::config('system.theme')->get('default');
  if (!empty($current_theme)) {
    alshaya_block_move_blocks_theme_to_theme($current_theme, 'alshaya_white_label');
  }

  // Disable existing V1 block.
  $non_rcs_blocks = [
    'alshayamainmenu',
    'supercategorymenu',
  ];
  foreach ($non_rcs_blocks as $block_id) {
    $block = Block::load($block_id);
    if ($block instanceof BlockInterface) {
      $block->disable()->save();
    }
  }

  // Migrate the enriched terms from the acq_product_category taxonomy.
  \Drupal::service('alshaya_rcs_main_menu.category_data_migration')
    ->processProductCategoryMigration();

  // Initiate the batch process to update the advanced page node with proper
  // category slug.
  $batch = [
    'title' => 'Update advanced pages',
    'operations' => [
      ['_alshaya_rcs_main_menu_advance_page_batch_operation', []],
    ],
    'init' => t('Starting processing of advance page node update'),
    'file' => drupal_get_path('module', 'alshaya_rcs_main_menu') . '/alshaya_rcs_main_menu.install',
    'error_message' => t('An error occurred during processing'),
  ];

  batch_set($batch);
}

/**
 * Batch function to migrate the product category term to category slug.
 */
function _alshaya_rcs_main_menu_advance_page_batch_operation(&$sandbox) {
  // Bulk update all the advanced page node with the product category.
    $nids = \Drupal::entityQuery('node')
    ->condition('type', 'advanced_page')
    ->execute();
  // Use the sandbox to store the information needed to track progression.
  if (!isset($sandbox['current'])) {
    $sandbox['current'] = 0;
    $sandbox['max'] = count($nids);
  }

  // Process nodes by groups of 10.
  $limit = 10;
  $result = array_slice($nids, $sandbox['current'], $limit);
  foreach ($result as $nid) {
    $entity_storage = \Drupal::entityTypeManager()->getStorage('node');
    $entity = $entity_storage->load($nid);
    // Load different translated versions of the node.
    foreach ($entity->getTranslationLanguages() as $langcode => $language) {
      $translated_node = $entity->getTranslation($langcode);
      // Update advanced page category slug with product category.
      $product_category_id = $translated_node->get('field_product_category')->getString();
      if ($product_category_id) {
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($product_category_id);
        // Proceed only if the term object is present.
        if ($term instanceof TermInterface) {
          $path = $term->get('path');
          if (!$path->isEmpty()) {
            // Remove forward slash if present.
            $alias = $path->alias;
            if ($alias && $alias[0] == '/') {
              $alias = substr($alias, 1);
            }
            $entity->set('field_category_slug', $alias);
            $entity->save();
          }
        }
      }
    }

    // Update our progress information.
    $sandbox['current']++;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['current'] / $sandbox['max']);

  if ($sandbox['#finished'] >= 1) {
    return t('Product category migration to category slug is finished.');
  }
}

/**
 * Implements hook_uninstall().
 */
function alshaya_rcs_main_menu_uninstall() {
  // Enable existing V1 block.
  $non_rcs_blocks = [
    'alshayamainmenu',
    'supercategorymenu',
  ];
  foreach ($non_rcs_blocks as $block_id) {
    $block = Block::load($block_id);
    if ($block instanceof BlockInterface) {
      $block->enable()->save();
    }
  }

  // Rollback the enriched terms from the acq_product_category taxonomy.
  \Drupal::service('alshaya_rcs_main_menu.category_data_migration')
    ->rollbackProductCategoryMigration();
}
