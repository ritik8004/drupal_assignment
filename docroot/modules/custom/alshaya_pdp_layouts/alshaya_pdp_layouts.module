<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Field\FieldFilteredMarkup;
use Drupal\alshaya_pdp_layouts\Event\PreprocessMagazineEvent;
use Drupal\acq_sku\Entity\SKU;
use Drupal\acq_commerce\SKUInterface;
use Drupal\Component\Utility\Unicode;
use Drupal\Component\Utility\Html;
use Drupal\alshaya_acm_product\SkuManager;

/**
 * Set dynamic allowed values for the select pdp layout field.
 *
 * @param \Drupal\field\Entity\FieldStorageConfig $definition
 *   The field definition.
 * @param \Drupal\Core\Entity\ContentEntityInterface|null $entity
 *   The entity being created if applicable.
 * @param bool $cacheable
 *   Boolean indicating if the results are cacheable.
 *
 * @return array
 *   An array of possible key and value options.
 *
 * @see options_allowed_values()
 */
function alshaya_pdp_layouts_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
  $alshaya_pdp_layouts = \Drupal::service('plugin.manager.alshaya_pdp_layouts');
  $layouts = $alshaya_pdp_layouts->getDefinitions();
  $pdp_layout_options = [];
  foreach ($layouts as $key => $value) {
    $pdp_layout_options[$key] = $value['label']->__toString();
  }

  return $pdp_layout_options;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_pdp_layouts_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_acq_product_edit_form' || $form_id == 'node_acq_product_form') {
    $product_settings_form = \Drupal::config('alshaya_acm_product.settings');
    $global_layout = $product_settings_form->get('pdp_layout');
    // Adding a description to show the inherit settings for PDP layout.
    $form['field_select_pdp_layout']['widget']['#description'] = FieldFilteredMarkup::create(t('Inherit layout will apply the layout selected globally: @global_layout', ['@global_layout' => $global_layout]));
    // Changing the label of the none option.
    $form['field_select_pdp_layout']['widget']['#options']['_none'] = t('Inherit');
  }
}

/**
 * Implements hook_preprocess_alshaya_magazine().
 */
function alshaya_pdp_layouts_preprocess_alshaya_magazine(&$vars) {
  $event = new PreprocessMagazineEvent($vars);

  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch(PreprocessMagazineEvent::EVENT_NAME, $event);
  $vars = $event->getVariables();
}

/**
 * Implements hook_preprocess_node__acq_product__full_magazine_v2().
 */
function alshaya_pdp_layouts_preprocess_node__acq_product__full_magazine_v2(&$vars) {
  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $sku_manager = \Drupal::service('alshaya_acm_product.skumanager');
  $entity = $vars['elements']['#node'];
  $sku = $sku_manager->getSkuForNode($entity);
  $sku_entity = SKU::loadFromSku($sku);
  $gallery = [];

  if ($sku_entity instanceof SKUInterface) {
    $sku_image_manager = \Drupal::service('alshaya_acm_product.sku_images_manager');
    $media = $sku_image_manager->getProductMedia($sku_entity, SkuManager::PDP_LAYOUT_MAGAZINE_V2, FALSE);
    if (!empty($media)) {
      $mediaItems = $sku_image_manager->getThumbnailsFromMedia($media, FALSE);
      $thumbnails = $mediaItems['thumbnails'];
      // If thumbnails available.
      if (!empty($thumbnails)) {
        $pdp_gallery_pager_limit = \Drupal::config('alshaya_acm_product.settings')
          ->get('pdp_gallery_pager_limit');

        $pager_flag = count($thumbnails) > $pdp_gallery_pager_limit ? 'pager-yes' : 'pager-no';

        $sku_identifier = Unicode::strtolower(Html::cleanCssIdentifier($sku_entity->getSku()));

        $labels = [
          '#theme' => 'product_labels',
          '#labels' => $sku_manager->getLabels($sku_entity, 'pdp'),
          '#sku' => $sku_identifier,
          '#mainsku' => $sku_identifier,
          '#type' => 'pdp',
        ];

        $gallery = [
          '#sku' => $sku,
          '#thumbnails' => $thumbnails,
          '#pager_flag' => $pager_flag,
          '#labels' => $labels,
        ];

        $vars['#attached']['drupalSettings']['pdpGallery'][$sku] = $gallery;
      }
    }
  }
}
