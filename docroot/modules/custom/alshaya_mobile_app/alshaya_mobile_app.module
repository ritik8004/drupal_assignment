<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_alshaya_click_and_collect_config_alter().
 */
function alshaya_mobile_app_alshaya_click_and_collect_config_alter(array &$config_data) {
  $config_data['available_in_store'] = \Drupal::config('alshaya_mobile_app.settings')->get('pdp_click_collect_available_in_store');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_mobile_app_form_alshaya_click_collect_settings_alter(&$form, FormStateInterface $form_state) {
  $default_value = \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')->get('pdp_click_collect_available_in_store');
  $form['pdp_click_collect_available_in_store'] = [
    '#type' => 'textfield',
    '#title' => t('PDP: Click and Collect available in store (Mobile App)'),
    '#required' => TRUE,
    '#default_value' => $default_value,
  ];

  $form['#submit'][] = '_alshaya_mobile_app_click_and_collect_submit';
}

/**
 * Submit handler for the click and collect form.
 */
function _alshaya_mobile_app_click_and_collect_submit($form, FormStateInterface $form_state) {
  $default_value = $form_state->getValue('pdp_click_collect_available_in_store');
  \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')
    ->set('pdp_click_collect_available_in_store', $default_value)
    ->save();
}

/**
 * Implements hook_config_translation_info_alter().
 */
function alshaya_mobile_app_config_translation_info_alter(&$info) {
  $info['alshaya_click_collect.configuration']['names'][] = 'alshaya_mobile_app.settings';
}

/**
 * Implements hook_alshaya_knet_success_route_alter().
 */
function alshaya_mobile_app_alshaya_knet_success_route_alter(string &$route, array $state_data) {
  if (isset($state_data['context']) && $state_data['context'] === 'mobile') {
    $route = 'alshaya_mobile_app.mobile_complete';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_mobile_app_form_checkout_settings_form_alter(&$form, FormStateInterface $form_state) {
  $default_value = \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')->get('exclude_payment_methods_mobile');
  $payment_terms = \Drupal::service('alshaya_acm_checkout.options_manager')->getDefaultPayment(FALSE);
  $options = [];
  foreach ($payment_terms as $term) {
    $options[$term->get('field_payment_code')->first()->getString()] = $term->getName();
  }

  $form['payment_methods_exclude']['exclude_payment_methods_mobile'] = [
    '#type' => 'checkboxes',
    '#options' => $options,
    '#title' => t('Exclude payment methods (APP)'),
    '#description' => t('Select the payment methods which needs to be exclude on payment screen.'),
    '#default_value' => $default_value,
  ];

  $form['#submit'][] = '_alshaya_mobile_app_checkout_settings_form_submit';
}

/**
 * Submit handler for the checkout settings form.
 */
function _alshaya_mobile_app_checkout_settings_form_submit($form, FormStateInterface $form_state) {
  $methods = $form_state->getValue('exclude_payment_methods_mobile');
  \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')
    ->set('exclude_payment_methods_mobile', array_filter($methods))
    ->save();
}

/**
 * Implements hook_alshaya_acm_checkout_payment_methods_list_alter().
 */
function alshaya_mobile_app_alshaya_acm_checkout_payment_methods_list_alter($context, array &$payment_methods) {
  if ($context == 'mobile' && !empty($payment_methods)) {
    if ($mobile_app_settings = \Drupal::config('alshaya_mobile_app.settings')->get('exclude_payment_methods_mobile')) {
      $method_codes = array_filter($mobile_app_settings);
      $payment_methods = array_filter($payment_methods, function ($payment_method) use ($method_codes) {
        return !in_array($payment_method['id'], $method_codes);
      });
    }
  }
}
