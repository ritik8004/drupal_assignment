<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\acq_sku\Entity\SKU;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_alshaya_click_and_collect_config_alter().
 */
function alshaya_mobile_app_alshaya_click_and_collect_config_alter(array &$config_data) {
  $config_data['available_in_store'] = \Drupal::config('alshaya_mobile_app.settings')->get('pdp_click_collect_available_in_store');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_mobile_app_form_alshaya_click_collect_settings_alter(&$form, FormStateInterface $form_state) {
  $default_value = \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')->get('pdp_click_collect_available_in_store');
  $form['pdp_click_collect_available_in_store'] = [
    '#type' => 'textfield',
    '#title' => t('PDP: Click and Collect available in store (Mobile App)'),
    '#required' => TRUE,
    '#default_value' => $default_value,
  ];

  $form['#submit'][] = '_alshaya_mobile_app_click_and_collect_submit';
}

/**
 * Submit handler for the click and collect form.
 */
function _alshaya_mobile_app_click_and_collect_submit($form, FormStateInterface $form_state) {
  $default_value = $form_state->getValue('pdp_click_collect_available_in_store');
  \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings')
    ->set('pdp_click_collect_available_in_store', $default_value)
    ->save();
}

/**
 * Implements hook_config_translation_info_alter().
 */
function alshaya_mobile_app_config_translation_info_alter(&$info) {
  $info['alshaya_click_collect.configuration']['names'][] = 'alshaya_mobile_app.settings';
}

/**
 * Implements hook_alshaya_knet_success_route_alter().
 */
function alshaya_mobile_app_alshaya_knet_success_route_alter(string &$route, array $state_data) {
  if (isset($state_data['context']) && $state_data['context'] === 'mobile') {
    $route = 'alshaya_mobile_app.mobile_complete';
  }
}

/**
 * Implements hook_alshaya_acm_product_light_product_data_alter().
 */
function alshaya_mobile_app_alshaya_acm_product_light_product_data_alter(SKU $sku, array &$data, $type) {
  if (!empty($data) && $type == 'light') {
    foreach ($data['promo'] ?? [] as $key => $promo) {
      if (!empty($promo['promo_node'])) {
        $promo_node = \Drupal::entityTypeManager()->getStorage('node')->load($promo['promo_node']);
        $data['promo'][$key]['deeplink'] = \Drupal::service('alshaya_mobile_app.utility')->getDeepLink($promo_node, 'promotion');
        unset($data['promo'][$key]['promo_node']);
      }
    }
  }
  elseif (!empty($data) && $type == 'full') {
    foreach ($data['promotions'] ?? [] as $key => $promo) {
      if (!empty($promo['promo_node'])) {
        $promo_node = \Drupal::entityTypeManager()->getStorage('node')->load($promo['promo_node']);
        $data['promotions'][$key]['deeplink'] = \Drupal::service('alshaya_mobile_app.utility')->getDeepLink($promo_node, 'promotion');
        unset($data['promotions'][$key]['promo_node']);
      }
    }
  }
}

/**
 * Implements hook_alshaya_acm_promo_resource_alter().
 */
function alshaya_mobile_app_alshaya_acm_promo_resource_alter(array &$data, NodeInterface $node) {
  $deeplink = \Drupal::service('alshaya_mobile_app.utility')->getDeepLink($node);
  $data['deeplink'] = $deeplink;
}

/**
 * Implements hook_path_update().
 */
function alshaya_mobile_app_path_update($path) {
  $mobileAppSettings = \Drupal::configFactory()->getEditable('alshaya_mobile_app.settings');
  $pageKey = array_search(ltrim($path['original']['alias'], '/'), $mobileAppSettings->get('static_page_mappings'));

  if ($pageKey) {
    $mobileAppSettings->set('static_page_mappings.' . $pageKey, ltrim($path['alias'], '/'))->save();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_mobile_app_form_webform_submission_alshaya_contact_api_form_alter(&$form, FormStateInterface $form_state) {
  if (\Drupal::routeMatch()->getRouteName() !== 'rest.webform_rest_submit.POST') {
    return;
  }

  // Set default values for new fields so contact form of mobile app
  // keeps working.
  // @TODO: Remove this in MCP-3202.
  $form['elements']['feedback']['#default_value'] = 'feeback_inquiry';
  $form['elements']['type']['#default_value'] = 'inquiry';
  $form['elements']['reason4']['#default_value'] = 'others';
}

/**
 * Implements hook_entity_base_field_info().
 */
function alshaya_mobile_app_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'menu_link_content') {
    $r = \Drupal::service('plugin.manager.field.field_type');
    $fields['social_id'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Social ID'))
      ->setDescription(t('Enter the value for Social ID.'))
      ->setDisplayOptions('form', 
        [ 'type' => 'string',
          'weight' => 20
        ]
      );
  }
  return $fields;
}

/**
 * Implement hook_form_FORM_ID_alter();
 */
function alshaya_mobile_app_form_menu_link_content_menu_link_content_form_alter(&$form, FormStateInterface $form_state) {
  $menu_name = $form_state->getFormObject()->getEntity()->getMenuName();
  if ($menu_name !== 'social-links') {
    $form['social_id']['#access'] = FALSE;
  }
}
