<?php

/**
 * @file
 * Module file for seo.
 */

use Drupal\alshaya_i18n\AlshayaI18nLanguages;
use Drupal\alshaya_seo\AlshayaGtmManager;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;
use Drupal\acq_sku\Entity\SKU;

/**
 * Implements hook_preprocess_HOOK().
 */
function alshaya_seo_preprocess_html(&$variables) {
  /** @var \Drupal\alshaya_seo\AlshayaGtmManager $gtmManager */
  $gtmManager = \Drupal::service('alshaya_seo.gtm_manager');
  $variables['attributes']['gtm-currency'] = \Drupal::config('acq_commerce.currency')->get('currency_code');
  $variables['attributes']['gtm-container'] = $gtmManager->convertCurrentRouteToGtmPageName($gtmManager->getGtmContainer());
  $variables['attributes']['gtm-list-name'] = $gtmManager->convertCurrentRouteToGtmListName($gtmManager->getGtmContainer());
}

/**
 * Implements hook_page_attachments().
 */
function alshaya_seo_page_attachments(array &$attachments) {
  $gkg_config = \Drupal::config('alshaya_seo.google_knowledge_graph');

  $gkg_data = [];

  $gkg_data['@context'] = 'http://schema.org';
  // As checked in current prod, following text is not to be translated.
  $gkg_data['@type'] = 'Organization';
  $gkg_data['name'] = \Drupal::config('system.site')->get('name');
  $gkg_data['url'] = Url::fromRoute('<front>', [], ['absolute' => TRUE])->toString();
  $gkg_data['logo'] = Url::fromUserInput(theme_get_setting('logo.url'), ['absolute' => TRUE])->toString();

  // Add all sameAs links as provided in Config.
  if ($same_as = $gkg_config->get('same_as')) {
    foreach (explode(PHP_EOL, $same_as) as $same_as_link) {
      // Remove \r as well if string contains \r\n.
      $same_as_link = trim($same_as_link, "\r");

      if (!empty($same_as_link)) {
        $gkg_data['sameAs'][] = $same_as_link;
      }
    }
  }

  // Add all contact options. Basic check added to have contact_type set in
  // config to show the whole object.
  if ($gkg_config->get('contact_telephone')) {
    $contact['@type'] = 'ContactPoint';
    $contact['telephone'] = $gkg_config->get('contact_telephone');
    $contact['contactType'] = $gkg_config->get('contact_type');
    $contact['areaServed'] = $gkg_config->get('contact_areaserved');
    $contact['contactOption'] = $gkg_config->get('contact_option');

    // Add all site languages as available language.
    foreach (\Drupal::languageManager()->getLanguages() as $language) {
      $contact['availableLanguage'][] = $language->getName();
    }

    // As required, we want it to be array of objects.
    $gkg_data['contactPoint'][] = $contact;
  }

  // Add/Edit rich snippet for the PDP page.
  $gkg_data = _alshaya_seo_pdp_rich_snippet($gkg_data);

  $attachments['#attached']['html_head']['alshaya_seo'] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#attributes' => [
        'type' => 'application/ld+json',
      ],
      // Adding PHP_EOL on both sides to make it look exactly same as expected.
      '#value' => PHP_EOL . json_encode($gkg_data, JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT) . PHP_EOL,
      '#weight' => 100,
    ],
    'gpg',
  ];
}

/**
 * Implements hook_page_attachments_alter().
 */
function alshaya_seo_page_attachments_alter(&$page) {
  // Attach the gtm library on every page.
  $page['#attached']['library'][] = 'alshaya_seo/gtm';
}

/**
 * Implements hook_robotstxt().
 */
function alshaya_seo_robotstxt() {
  return [
    'User-agent: *',
    'Disallow: /*.js$',
    'Disallow: /*.css$',
    'Disallow: /*.php$',
    'Disallow: /*?p=*&',
    'Disallow: /*?SID=',
    'Disallow: */index.php/*',
    'Disallow: */catalog/category/view/',
    'Disallow: */catalog/product/view/',
    'Disallow: */catalogsearch/',
  ];
}

/**
 * Implements hook_simple_sitemap_links_alter().
 */
function alshaya_seo_simple_sitemap_links_alter(&$links) {
  foreach ($links as &$link) {
    // We don't want to use langcode but want to use the country code for
    // that language. Altering data here.
    if (isset($link['alternate_urls'])) {
      $alternate_urls = $link['alternate_urls'];

      foreach ($alternate_urls as $language_id => $alternate_url) {
        if ($hreflangcode = AlshayaI18nLanguages::getHrefLangCountry($language_id)) {
          unset($link['alternate_urls'][$language_id]);
          $link['alternate_urls'][$hreflangcode] = $alternate_url;
        }
      }
    }
  }
}

/**
 * Implements template_preprocess_node().
 */
function alshaya_seo_preprocess_node(&$variables) {
  $view_mode = $variables['view_mode'];
  /** @var \Drupal\node\Entity\Node $entity */
  $entity = $variables['node'];

  if ($entity->bundle() === 'acq_product') {
    /** @var \Drupal\alshaya_seo\AlshayaGtmManager $alshayaGtmManager */
    $alshayaGtmManager = \Drupal::service('alshaya_seo.gtm_manager');
    $productNode = $alshayaGtmManager->fetchProductGtmAttributes($entity, $view_mode);
    $variables['gtm_attributes']['#markup'] = $alshayaGtmManager->convertAttrsToString($productNode);
  }
}

/**
 * Adding google rich snippet to product.
 *
 * @param array $snippet
 *   Rich snippet array.
 *
 * @return array
 *   Rich snippet array.
 */
function _alshaya_seo_pdp_rich_snippet(array $snippet = []) {
  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() == 'entity.node.canonical') {
    /* @var \Drupal\node\Entity\Node $node */
    $node = $route_match->getParameter('node');
    // If 'product' node.
    if ($node && $node->getType() == 'acq_product') {
      if ($sku_field = $node->get('field_skus')) {
        $sku_id = $sku_field->first()->getString();
        $sku_entity = SKU::loadFromSku($sku_id);
        $product_title = "";

        // Including the utility file.
        \Drupal::moduleHandler()->loadInclude('alshaya_acm_product', 'inc', 'alshaya_acm_product.utility');
        $product_image = _alshaya_acm_get_product_display_image_url($sku_entity);

        $product_description = _alshaya_seo_get_node_meta_description();
        $final_price = "";
        $currency = \Drupal::configFactory()->get('acq_commerce.currency')->get('currency_code');

        // If sku name is available.
        if ($sku_entity->get('name')) {
          $product_title = $sku_entity->get('name')->getString();
        }

        // If final price is available.
        if ($sku_entity->get('final_price')) {
          $final_price = (float) $sku_entity->get('final_price')->getString();
        }

        // Prepare rich snippet.
        $snippet['@type'] = 'Product';
        $snippet['name'] = $product_title;
        $snippet['description'] = $product_description;
        $snippet['image'] = $product_image;
        // @Todo: Change this once brand field is available.
        $snippet['brand'] = [
          '@type' => 'Thing',
          'name' => \Drupal::config('system.site')->get('name'),
        ];
        $snippet['offers'] = [
          '@type' => "Offer",
          'priceCurrency' => $currency,
          'price' => $final_price,
        ];
      }
    }
  }

  return $snippet;
}

/**
 * Get the meta tag description.
 *
 * @return string
 *   Meta tag description.
 */
function _alshaya_seo_get_node_meta_description() {
  $meta_description = '';
  // Get meta tag for the route.
  $meta_tags = metatag_get_tags_from_route();
  if (!empty($meta_tags)) {
    $tags = $meta_tags['#attached']['html_head'];
    if (!empty($tags)) {
      foreach ($tags as $tag) {
        // If meta description tag.
        if ($tag[1] == 'description') {
          $meta_description = $tag[0]['#attributes']['content'];
        }
      }
    }
  }

  return $meta_description;
}

/**
 * Implements hook_theme().
 */
function alshaya_seo_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_sitemap' => [
      'template' => 'alshaya-sitemap',
      'variables' => [
        'term_tree' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_datalayer_alter().
 */
function alshaya_seo_datalayer_alter(&$data_layer) {
  /** @var \Drupal\alshaya_seo\AlshayaGtmManager $gtmManager */
  $gtmManager = \Drupal::service('alshaya_seo.gtm_manager');

  $currentRoute = $gtmManager->getGtmContainer();
  switch ($currentRoute['route_name']) {
    case 'entity.node.canonical':
      if (isset($currentRoute['route_params'], $currentRoute['route_params']['node'])) {
        /** @var \Drupal\node\Entity\Node $node */
        $node = $currentRoute['route_params']['node'];
        if ($node->bundle() === 'acq_product') {
          $attributes = $gtmManager->fetchProductGtmAttributes($node, 'full');
          $processedAttributes = $gtmManager->processAttributesForPdp($attributes);
          foreach ($data_layer as $key => $value) {
            if (!in_array($key, AlshayaGtmManager::GTM_GLOBALS, TRUE)) {
              unset($data_layer[$key]);
            }
          }

          // Should not be set until product added to the cart.
          $processedAttributes['dimension1'] = '';
          $processedAttributes['dimension2'] = '';

          $data_layer = array_merge($data_layer, $processedAttributes);
          $data_layer['pageType'] = $gtmManager->convertCurrentRouteToGtmPageName($gtmManager->getGtmContainer());
        }
      }
      break;

    case 'acq_checkout.form':
      if ($currentRoute['route_params']['step'] === 'login') {
        $cartItemAttributes = $gtmManager->fetchCartItemAttributes();
        foreach ($cartItemAttributes as $key => $cartItem) {
          $products[] = $gtmManager->convertHtmlAttributesToDatalayer($cartItem);
        }
      }
      $currencyCode = \Drupal::config('acq_commerce.currency')->get('currency_code');

      $data_layer = [
        'event' => 'checkout',
        'ecommerce' => [
          'currencyCode' => $currencyCode,
          'checkout' => [
            'actionField' => [
              'step' => 1,
            ],
            'products' => $products,
          ],
        ],
      ];
      break;
  }
}

/**
 * Implements template preprocess_input().
 */
function alshaya_seo_preprocess_input(&$variables) {
  if ($variables['element']['#type'] === 'submit') {
    $value = $variables['element']['#value'];
    if (($value instanceof TranslatableMarkup) && ($value->getUntranslatedString() === 'Add to cart')) {
      $variables['attributes']['gtm-type'] = 'add-cart-link';
    }
  }
}

/**
 * Implements template_preprocess_alshaya_cart_product_name().
 */
function alshaya_seo_preprocess_alshaya_cart_product_name(&$variables) {
  /** @var \Drupal\alshaya_seo\AlshayaGtmManager $gtmManager */
  $gtmManager = \Drupal::service('alshaya_seo.gtm_manager');
  $skuAtributes = $gtmManager->fetchSkuAtttributes($variables['item_code']);

  // Fetch product for this sku to get the category.
  $productNode = alshaya_acm_product_get_display_node($variables['item_code']);

  $attributes['gtm-category'] = $gtmManager->fetchProductCategories($productNode);;

  $skuAtributes['gtm-type'] = 'gtm-remove-cart-wrapper';
  $skuAtributes['gtm-size'] = $variables['sku_attributes']['attr_size']['value'];

  $variables['gtm_attributes']['#markup'] = $gtmManager->convertAttrsToString($skuAtributes);
}
