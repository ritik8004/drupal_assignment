<?php

/**
 * @file
 * Module file for seo.
 */

use Drupal\alshaya_i18n\AlshayaI18nLanguages;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_simple_sitemap_links_alter().
 */
function alshaya_seo_simple_sitemap_links_alter(&$links) {
  foreach ($links as &$link) {
    // We don't want to use langcode but want to use the country code for
    // that language. Altering data here.
    if (isset($link['alternate_urls'])) {
      $alternate_urls = $link['alternate_urls'];

      foreach ($alternate_urls as $language_id => $alternate_url) {
        if ($hreflangcode = AlshayaI18nLanguages::getHrefLangCountry($language_id)) {
          unset($link['alternate_urls'][$language_id]);
          $link['alternate_urls'][$hreflangcode] = $alternate_url;
        }
      }
    }
  }
}

/**
 * Get the meta tag description.
 *
 * @return string
 *   Meta tag description.
 */
function _alshaya_seo_get_node_meta_description() {
  $meta_description = '';
  // Get meta tag for the route.
  $meta_tags = metatag_get_tags_from_route();
  if (!empty($meta_tags)) {
    $tags = $meta_tags['#attached']['html_head'];
    if (!empty($tags)) {
      foreach ($tags as $tag) {
        // If meta description tag.
        if ($tag[1] == 'description') {
          $meta_description = $tag[0]['#attributes']['content'];
        }
      }
    }
  }

  return $meta_description;
}

/**
 * Implements hook_theme().
 */
function alshaya_seo_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_sitemap' => [
      'template' => 'alshaya-sitemap',
      'variables' => [
        'term_tree' => NULL,
      ],
    ],
  ];
}

/**
 * Implements template preprocess_input().
 */
function alshaya_seo_preprocess_input(&$variables) {
  if ($variables['element']['#type'] === 'submit') {
    $value = $variables['element']['#value'];
    if (($value instanceof TranslatableMarkup) && (Unicode::strcasecmp($value->getUntranslatedString(), 'Add to cart') === 0)) {
      $variables['attributes']['gtm-type'] = 'add-cart-link';
    }
  }
}

/**
 * Implements template_preprocess_menu().
 */
function alshaya_seo_preprocess_menu(&$variables) {
  if ($variables['menu_name'] === 'account') {
    foreach ($variables['items'] as $key => $item) {
      $my_account_menu_item_options['attributes']['class'] = [];
      $my_account_menu_item_options['attributes']['class'][] = strtolower(str_replace(' ', '', $item['title'])) . '-link';
      if (Unicode::strcasecmp($item['title'], t('Sign in')) === 0) {
        $my_account_menu_item_options['attributes']['class'][] = 'gtm-sign-in';
        $my_account_menu_item_options['attributes']['set_active_class'] = 1;
      }
      $variables['items'][$key]['url']->setOptions($my_account_menu_item_options);
    }
  }
  elseif ($variables['menu_name'] === 'footer') {
    foreach ($variables['items'] as $key => $item) {
      $footer_url_options = [
        'attributes' => [
          'class' => ['c-footer-menu__link'],
        ],
      ];

      $variables['items'][$key]['url']->setOptions($footer_url_options);
    }
  }
}

/**
 * Implements template_preprocess_alshaya_main_menu_level2().
 */
function alshaya_seo_preprocess_alshaya_main_menu_level2(&$variables) {
  $sub_nav_label = str_replace(' ', '-', strtolower($variables['data']['label']));
  $sub_nav_class = 'sub-nav-' . $sub_nav_label;
  $variables['data']['sub_nav_class'] = 'sub-nav-' . $sub_nav_label;
  foreach ($variables['data']['child'] as $key1 => $value) {
    $variables['data']['child'][$key1]['sub_nav_class'] = $sub_nav_class;
    foreach ($value['child'] as $key2 => $value2) {
      $variables['data']['child'][$key1]['child'][$key2]['sub_nav_class'] = $sub_nav_class;
    }
  }
}

/**
 * Implements template_preprocess_views_view_field().
 */
function alshaya_seo_preprocess_views_view_field(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();

  $field = $variables['field'];
  $view = $variables['view'];

  $is_product_level_3_view = ((($view->id() === 'product_category_level_3') && ($view->current_display === 'block_1')) ||
      ($view->id() === 'product_category_level_2_3') && ($view->current_display === 'block_2'));
  if (($is_product_level_3_view) &&
    ($field->getPluginId() === 'term_name')) {
    $args = $view->args;
    $parents = \Drupal::entityManager()->getStorage('taxonomy_term')->loadParents($args[0]);
    $parent_term = array_shift($parents);
    $term_classes = [];
    if ($parent_term) {
      $parent_term_name = $parent_term->getName();
      $term_classes[] = 'vert-nav-' . str_replace(' ', '-', strtolower($parent_term_name));
    }

    /** @var \Drupal\taxonomy\Entity\Term $term */
    $term = $variables['row']->_entity;
    $term_class_name = str_replace(' ', '-', strtolower(preg_replace('/[^A-Za-z0-9-\s]/', '', $term->getName())));
    $term_classes[] = 'left-nav-' . $term_class_name;

    $options = [
      'attributes' => [
        'class' => $term_classes,
      ],
    ];

    if ($term->hasTranslation($langcode)) {
      $term = $term->getTranslation($langcode);
    }

    $variables['output'] = $term->toLink($term->getName(), '', $options)->toString();
  }
}

/**
 * Implements hook_entity_presave().
 */
function alshaya_seo_entity_presave(EntityInterface $entity) {
  try {
    if ($entity->getEntityTypeId() === 'user' &&
      $entity->get('field_subscribe_newsletter')->getString()) {
      $original_entity = $entity->original;

      // Check if the user updated his subscription status from 0 to 1.
      if (($original_entity) &&
        ($original_entity->get('field_subscribe_newsletter')->getString() !== "1") &&
        ($entity->get('field_subscribe_newsletter')->getString() === "1")) {
        user_cookie_save(['alshaya_gtm_update_user_lead' => $entity->id()]);
      }
      // Handle registrations with subscrition checked.
      elseif (($original_entity === NULL) &&
        ($entity->get('field_subscribe_newsletter')->getString() === "1")) {
        user_cookie_save(['alshaya_gtm_update_user_lead' => $entity->id()]);
      }
    }
  }
  catch (Exception $e) {
    \Drupal::logger('alshaya_seo')->critical('Field subscribe newsletter not found.');
  }
}

/**
 * Implements hook_entity_insert().
 */
function alshaya_seo_entity_insert(EntityInterface $entity) {
  if ($entity->getEntityTypeId() === 'user') {
    $path_info = \Drupal::request()->getPathInfo();

    try {
      if ($entity->get('field_subscribe_newsletter')->getString()) {
        user_cookie_save(['alshaya_gtm_create_user_lead' => $entity->id()]);
        user_cookie_save(['alshaya_gtm_create_user_pagename' => $path_info]);
      }
    }
    catch (Exception $e) {
      \Drupal::logger('alshaya_seo')->warning('Field subscribe newsletter not found.');
    }

    try {
      if ($entity->get('field_privilege_card_number')->getString()) {
        user_cookie_save([
          'alshaya_gtm_create_user_pc' => $entity->get('field_privilege_card_number')->getString(),
        ]);
      }
    }
    catch (Exception $e) {
      // Do nothing, loyalty might by off.
    }
  }
}
