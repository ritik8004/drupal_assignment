<?php

/**
 * @file
 * Contains install, update, uninstall hooks for alshaya_api module.
 */

use Drupal\consumers\Entity\Consumer;
use Drupal\Core\Site\Settings;
use Drupal\user\Entity\User;

/**
 * Implements hook_update_N().
 *
 * Create role, enable resource, create user and consumer for Alshaya API.
 */
function alshaya_api_update_8001() {
  $configs = [
    'user.role.alshaya_api_consumer',
    'rest.resource.sku_images',
  ];

  alshaya_config_install_configs($configs, 'alshaya_api');

  _alshaya_api_create_user();
  _alshaya_api_create_consumer();
}

/**
 * Implements hook_install().
 */
function alshaya_api_install() {
  // Configure alshaya_api settings.
  $config = \Drupal::configFactory()->getEditable('alshaya_api.settings');

  $alshaya_api_settings = Settings::get('alshaya_api.settings');

  foreach ($alshaya_api_settings as $key => $value) {
    $config->set($key, $value);
  }

  $config->save();

  _alshaya_api_create_user();
  _alshaya_api_create_consumer();
}

/**
 * Wrapper function create alshaya api user if not exists.
 */
function _alshaya_api_create_user() {
  $user = user_load_by_name(Settings::get('alshaya_api_user_username'));

  if ($user instanceof User) {
    // User is already created. Log message and return.
    \Drupal::logger('alshaya_api')->warning('User already created with name @name.', [
      '@name' => Settings::get('alshaya_api_user_username'),
    ]);
    return;
  }

  // Create a user that will be used by Alshaya API Consumers.
  $user = User::create();
  $user->setPassword(Settings::get('alshaya_api_user_password'));
  $user->enforceIsNew();
  $user->setEmail(Settings::get('alshaya_api_user_email'));
  $user->setUsername(Settings::get('alshaya_api_user_username'));
  $user->activate();
  $user->addRole('alshaya_api_consumer');
  $user->save();
}

/**
 * Wrapper function create alshaya api consumer if not exists.
 */
function _alshaya_api_create_consumer() {
  /** @var \Drupal\Core\Entity\EntityRepositoryInterface $repository */
  $repository = \Drupal::service('entity.repository');
  $consumer = $repository->loadEntityByUuid('consumer', Settings::get('alshaya_api_soauth_client_uuid'));

  if ($consumer instanceof Consumer) {
    // Consumer is already created. Log message and return.
    \Drupal::logger('alshaya_api')->warning('Consumer already created for uuid @uuid.', [
      '@uuid' => Settings::get('alshaya_api_soauth_client_uuid'),
    ]);

    return;
  }

  // Add Simple Oauth - Consumer client.
  $client = Consumer::create([]);
  $client->set('label', 'Alshaya API Consumer');
  $client->set('secret', Settings::get('alshaya_api_soauth_client_secret'));
  $client->set('roles', ['alshaya_api_consumer']);
  $client->set('uuid', Settings::get('alshaya_api_soauth_client_uuid'));
  $client->save();
}
