<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_acq_checkout_pane_pane_info_alter().
 */
function alshaya_acm_checkout_acq_checkout_pane_pane_info_alter(array &$definitions) {
  // Remove all default panes.
  unset($definitions['billing_information']);
  unset($definitions['shipping_information']);
  unset($definitions['review']);
  unset($definitions['completion_message']);
  unset($definitions['payment_methods']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_acm_checkout_form_multistep_checkout_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add markup to show selected card type.
  if (isset($form['payment_methods'], $form['payment_methods']['payment_details'], $form['payment_methods']['payment_details']['cc_number'])) {
    $form['payment_methods']['payment_details']['cc_number']['#weight'] = 0;
    $form['payment_methods']['payment_details']['cc_number']['#suffix'] = '
      <div class="card-types-wrapper">
        <span class="card-type card-type-visa"></span>
        <span class="card-type card-type-mastercard"></span>
        <span class="card-type card-type-diners-club"></span>
      </div>
    ';
    $form['payment_methods']['payment_details']['cc_cvv']['#weight'] = 1;
    $form['payment_methods']['payment_details']['cc_cvv']['#suffix'] = '<div class="cc_cvv_help_text">' . t('This code is a three or four digit number printed on the front or back of the credit card') . '</div>';
    $form['payment_methods']['payment_details']['cc_exp_month']['#weight'] = 2;
    $form['payment_methods']['payment_details']['cc_exp_year']['#weight'] = 2;
  }
}

/**
 * Helper function to clean address array.
 *
 * @param mixed $address
 *   Address array or object.
 *
 * @return array
 *   Cleaned address array.
 */
function _alshaya_acm_checkout_clean_address($address) {
  $address = (array) $address;

  $allowed_fields = [
    'firstname',
    'first_name',
    'lastname',
    'last_name',
    'email',
    'phone',
    'street',
    'street2',
    'city',
    'region',
    'postcode',
    'country',
  ];

  foreach ($address as $key => $value) {
    if (!in_array($key, $allowed_fields)) {
      unset($address[$key]);
    }
  }

  if (!empty($address['phone'])) {
    $address['phone'] = _alshaya_acm_checkout_clean_address_phone($address['phone']);
  }

  return $address;
}

/**
 * Helper function to clean address phone number.
 *
 * @param mixed $phone
 *   Phone string, array or object.
 *
 * @return string
 *   Phone number in string.
 */
function _alshaya_acm_checkout_clean_address_phone($phone) {
  $phone_string = '';

  if (is_string($phone)) {
    $phone_string = $phone;
  }
  elseif (is_object($phone)) {
    $phone_string = \Drupal::service('mobile_number.util')->libUtil()->format($phone, 1);
  }
  elseif (is_array($phone)) {
    $phone_string = $phone['value'];
  }

  return $phone_string;
}

/**
 * Implements hook_alshaya_profile_installed().
 */
function alshaya_acm_checkout_alshaya_profile_installed(array $modules) {
  if (in_array('alshaya_i18n', $modules)) {
    // Array of language translation strings.
    $strings = [
      'CUSTOMER SERVICE' => [
        'ar' => 'خدمة العملاء',
      ],
      '<p>For Kuwait <span class="light">+965 XXX XX XX</span></p><p>For other regions <span class="light">8 (800) XXX XX X</span></p><p><span class="light">We are open from 9:30am to 8:30pm Monday to Sunday</span></p>' => [
        'ar' => '<p>الكويت <span class="light">+965 XXX XX XX</span></p><p>المناطق الأخرى <span class="light">8 (800) XXX XX X</span></p><p><span class="light">نحن منفتحون من 9:30 صباحا إلى 8:30 مساء من الاثنين إلى الأحد</span></p>',
      ],
    ];

    alshaya_i18n_save_translations($strings);
  }
}
