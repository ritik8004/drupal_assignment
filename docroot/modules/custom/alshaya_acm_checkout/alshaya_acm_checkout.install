<?php

/**
 * @file
 * Contains install, update, uninstall hooks for alshaya_acm_checkout module.
 */

use Drupal\alshaya_config\AlshayaConfigManager;
use Drupal\Core\Entity\Sql\DefaultTableMapping;
use Drupal\field\Entity\FieldConfig;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_update_N().
 *
 * Update taxonomy term definition to fix
 * Mismatched entity and/or field definitions.
 */
function alshaya_acm_checkout_update_8014() {
  // Clear cached definitions.
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type_manager->clearCachedDefinitions();

  // Apply pending taxonomy updates.
  $entity_type = $entity_type_manager->getDefinition('taxonomy_term');
  \Drupal::entityDefinitionUpdateManager()->installEntityType($entity_type);

  // Apply pending user entity updates.
  $entity_type = $entity_type_manager->getDefinition('user');
  \Drupal::entityDefinitionUpdateManager()->installEntityType($entity_type);
}

/**
 * Implements hook_update_N().
 *
 * [6.7.0] Update checkout config to include cache time for cnc store info.
 */
function alshaya_acm_checkout_update_8013() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING,
  );
}

/**
 * Implements hook_update_N().
 *
 * Update checkout config to include card bin numbers for bin validation.
 */
function alshaya_acm_checkout_update_8012() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING,
  );
}

/**
 * Implements hook_update_N().
 *
 * Update checkout config to include bin validation config and add translations.
 */
function alshaya_acm_checkout_update_8011() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING,
  );

  // Add string for tranlsation of bin validation error.
  $strings = [];
  $strings['Your card details are valid for NAPS Debit Card. Please select NAPS Debit Card as a payment method or enter different credit/debit card details to proceed.'] = [
    'ar' => 'بيانات بطاقتك صالحة للدفع باستخدام بطاقات السحب الآلي NAPS. يُرجى اختيار بطاقات السحب الآلي NAPS كطريقة دفع أو إدخال تفاصيل بطاقة ائتمان / سحب آلي مختلفة للمتابعة.',
    'context' => 'qpay',
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * [6.2.4] Add new configuration for AB Testing.
 */
function alshaya_acm_checkout_update_8010() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.ab_testing'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_REPLACE,
  );
}

/**
 * Implements hook_update_N().
 *
 * Update checkout config to include refund details and added translations.
 */
function alshaya_acm_checkout_update_8009() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING,
  );

  $strings = [
    'The refund for cancelled items will be made to your account within 14 working days if you have paid for your order.' => [
      'ar' => 'سوف يتم استرجاع المبلغ المدفوع على المنتجات الملغية في حسابك خلال 14 يوم عمل إذا كنت قد دفعت قيمة الطلبية.',
    ],
    '@count Cancelled' => [
      'ar' => 'إلغاء 1',
    ],
    'Cancelled' => [
      'ar' => 'تم الإلغاء',
    ],
    'Cancelled Items' => [
      'ar' => 'المنتجات الملغاه',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Increase size of shipping method description fields.
 *
 * This is a temporary solution. We will stop using this taxonomy once we move
 * to SPC - CORE-10070.
 */
function alshaya_acm_checkout_update_8008() {
  $entity_type = 'taxonomy_term';
  $bundle = 'shipping_method';
  $field_length = 510;

  $fields = [
    'field_shipping_method_cart_desc',
    'field_shipping_method_desc',
  ];

  foreach ($fields as $field_name) {
    $database = \Drupal::database();

    $field = FieldConfig::loadByName($entity_type, $bundle, $field_name);
    $mapping = DefaultTableMapping::create(\Drupal::entityTypeManager()->getDefinition('taxonomy_term'), [$field->getFieldStorageDefinition()]);
    $main_table = $mapping->getDedicatedDataTableName($field->getFieldStorageDefinition());
    $revision_table = $mapping->getDedicatedRevisionTableName($field->getFieldStorageDefinition());

    // Resize the main field data table.
    $database->query("ALTER TABLE {$main_table} MODIFY {$field_name}_value VARCHAR({$field_length})");
    $database->query("ALTER TABLE {$revision_table} MODIFY {$field_name}_value VARCHAR({$field_length})");

    // Update storage schema.
    $storage_key = $entity_type . '.field_schema_data.' . $field_name;
    $storage_schema = \Drupal::keyValue('entity.storage_schema.sql');
    $field_schema = $storage_schema->get($storage_key);
    $field_schema[$main_table]['fields'][$field_name . '_value']['length'] = $field_length;
    $field_schema[$revision_table]['fields'][$field_name . '_value']['length'] = $field_length;
    $storage_schema->set($storage_key, $field_schema);

    // Update field configuration.
    $config = \Drupal::configFactory()->getEditable("field.storage.{$entity_type}.{$field_name}");
    $config->set('settings.max_length', $field_length);
    $config->save(TRUE);
  }
}

/**
 * Implements hook_update_N().
 *
 * Update Knet payment label for Arabic.
 */
function alshaya_acm_checkout_update_8007() {
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['field_payment_code' => 'knet']);

  $titles = [
    'ar' => 'كي-نت',
  ];

  foreach ($terms as $term) {
    if ($term instanceof Term) {
      foreach ($titles as $langcode => $title) {
        $translated_term = $term->hasTranslation($langcode) ? $term->getTranslation($langcode) : NULL;
        if (isset($translated_term)) {
          $translated_term->set('name', $title);
          $translated_term->save();
        }
      }
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Update Knet payment label.
 */
function alshaya_acm_checkout_update_8006() {
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['field_payment_code' => 'knet']);

  $titles = [
    'en' => 'K-NET',
    'ar' => 'K-NET',
  ];

  foreach ($terms as $term) {
    if ($term instanceof Term) {
      foreach ($titles as $langcode => $title) {
        $translated_term = $term->hasTranslation($langcode) ? $term->getTranslation($langcode) : NULL;
        if (isset($translated_term)) {
          $translated_term->set('name', $title);
          $translated_term->save();
        }
      }
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Enable alshaya_acm_checkoutcom module.
 */
function alshaya_acm_checkout_update_8005() {
  \Drupal::service('module_installer')->install(['alshaya_acm_checkoutcom']);
}

/**
 * Implements hook_update_N().
 *
 * Delete default texts for checkout_guest_summary, checkout_guest_email_usage
 * and checkout_guest_login.
 */
function alshaya_acm_checkout_update_8004() {
  $remove_values = [
    'checkout_guest_summary',
    'checkout_guest_email_usage',
    'checkout_guest_login',
  ];
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_REPLACE_KEY,
    [
      'replace_keys' => $remove_values,
    ]
  );

  // Remove any existing arabic translations.
  $config = \Drupal::languageManager()->getLanguageConfigOverride('ar', 'alshaya_acm_checkout.settings');
  foreach ($remove_values as $key) {
    $config->set("{$key}.value", '');
  }
  $config->save();

  $strings = [
    'sign in with email address' => [
      'ar' => 'تسجيل الدخول عن طريق البريد الإلكتروني',
    ],
    'continue as a guest' => [
      'ar' => 'إتمام عملية الشراء كزبون زائر',
    ],
  ];
  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add default settings for cod_surcharge.
 */
function alshaya_acm_checkout_update_8003() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_acm_checkout.settings'],
    'alshaya_acm_checkout',
    'install',
    AlshayaConfigManager::MODE_ADD_MISSING
  );
}

/**
 * Implements hook_update_N().
 *
 * Update config to remove/hide tax info.
 */
function alshaya_acm_checkout_update_8002() {
  // Remove/hide tax config.
  $configFactory = \Drupal::configFactory()->getEditable('alshaya_acm_checkout.settings');
  $configFactory->set('checkout_show_tax_info', FALSE);
  $configFactory->save();
}

/**
 * Implements hook_update_N().
 *
 * Add config to show tax info.
 */
function alshaya_acm_checkout_update_8001() {
  // Show tax config to all sites.
  $configFactory = \Drupal::configFactory()->getEditable('alshaya_acm_checkout.settings');
  $configFactory->set('checkout_show_tax_info', TRUE);
  $configFactory->save();
}

/**
 * Implements hook_install().
 */
function alshaya_acm_checkout_install() {
  // Configure multistep_checkout as checkout_flow_plugin.
  $configFactory = \Drupal::configFactory()->getEditable('acq_checkout.settings');
  $configFactory->set('checkout_flow_plugin', 'multistep_checkout');
  $configFactory->save();

  // Adding translations.
  $strings = [
    'The refund for cancelled items will be made to your account within 14 working days if you have paid for your order.' => [
      'ar' => 'سوف يتم استرجاع المبلغ المدفوع على المنتجات الملغية في حسابك خلال 14 يوم عمل إذا كنت قد دفعت قيمة الطلبية.',
    ],
    '@count Cancelled' => [
      'ar' => 'إلغاء 1',
    ],
    'Cancelled' => [
      'ar' => 'تم الإلغاء',
    ],
    'Cancelled Items' => [
      'ar' => 'المنتجات الملغاه',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}
