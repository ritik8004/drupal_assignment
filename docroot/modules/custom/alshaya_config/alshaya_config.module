<?php

/**
 * @file
 * Contains general hooks and alters.
 */

use Drupal\Core\Config\FileStorage;

/**
 * Helper function to update / install configs.
 *
 * @param array $configs
 *   The name of configs to import.
 * @param string $module_name
 *   Name of the module, where files resides.
 * @param string $path
 *   Path where configs reside. Defaults to install.
 */
function alshaya_config_install_configs(array $configs, $module_name, $path = 'install') {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs($configs, $module_name, $path);
}

/**
 * Helper function to delete configs.
 *
 * @param array $configs
 *   The name of configs to delete.
 */
function alshaya_config_delete_configs(array $configs) {
  if (empty($configs)) {
    return;
  }

  foreach ($configs as $config) {
    \Drupal::configFactory()->getEditable($config)->delete();
  }
}

/**
 * Scan and return the yml file names inside subdirectory of config of module.
 *
 * @param string $module_name
 *   Module name.
 * @param string $directory
 *   Directory name to scan.
 *
 * @return array
 *   Array of yml file names.
 */
function _alshaya_config_get_config_yml($module_name, $directory) {
  $files = [];
  $directory_path = drupal_get_path('module', $module_name) . '/config/' . $directory;
  // Get all yml files inside the directory.
  $ymls = file_scan_directory($directory_path, '/[(.yml)]$/');
  if (!empty($ymls)) {
    foreach ($ymls as $yml) {
      $files[] = $yml->name;
    }
  }

  return $files;
}

/**
 * Save the overridden configs of the module.
 *
 * @param string $module_name
 *   Module name.
 */
function _alshaya_config_save_overridden_configs($module_name) {
  foreach (_alshaya_config_get_config_yml($module_name, 'override') as $config_name) {
    if ($config = \Drupal::configFactory()->getEditable($config_name)) {
      $config->save();
    }
  }
}

/**
 * Implements hook_modules_installed().
 */
function alshaya_config_modules_installed($modules) {
  foreach ($modules as $module) {
    $override_path = \Drupal::root() . '/' . drupal_get_path('module', $module) . '/config/override/';

    // Check if the module has overrides & install those configs.
    if (file_exists($override_path)) {
      $storage = new FileStorage($override_path);
      $overrides = $storage->listAll();

      if ($overrides) {
        // Re-save configs for which overrides are available.
        foreach ($overrides as $override) {
          try {
            $config = \Drupal::configFactory()->getEditable($override);

            if ($config && $config->getRawData()) {
              $config->save();
            }
          }
          catch (\Exception $e) {
            \Drupal::logger($module)->warning('Error while saving config for override: @override from module @module. Message: @message', [
              '@override' => $override,
              '@module' => $module,
              '@message' => $e->getMessage(),
            ]);
          }
        }
      }
    }
  }
}
