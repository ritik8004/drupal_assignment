<?php

/**
 * @file
 * Contains install, update, uninstall hooks for alshaya_master module.
 */

use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_update_N().
 *
 * Add string translation for strings in v2.
 */
function alshaya_master_update_8023() {
  alshaya_i18n_save_translations(alshaya_master_get_strings_to_translate('v2'));
}

/**
 * Implements hook_update_N().
 *
 * Update context for strings.
 */
function alshaya_master_update_8021() {
  $strings = [
    'Please select a payment option to continue.' => 'alshaya_static_text|empty_payment_option',
    'Please agree to the Terms and Conditions.' => 'alshaya_static_text|agree_terms_and_condition',
    'Your account has not been activated or is blocked.' => 'alshaya_static_text|account_already_exists',
    'Customers also bought' => 'alshaya_static_text|pdp_crosssell_title',
    'You may also like' => 'alshaya_static_text|pdp_upsell_title',
    'Related' => 'alshaya_static_text|pdp_related_title',
  ];
  alshaya_i18n_update_context($strings);
}

/**
 * Implements hook_update_N().
 *
 * Turning off the seckit referrer policy.
 */
function alshaya_master_update_8020() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['seckit.settings'],
    'seckit',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Update context for strings.
 */
function alshaya_master_update_8019() {
  $strings = [
    'Please select a payment option to continue.' => 'alshaya_error_message|empty_payment_option',
    'Please agree to the Terms and Conditions.' => 'alshaya_error_message|agree_terms_and_condition',
    'Your account has not been activated or is blocked.' => 'alshaya_error_message|account_already_exists',
  ];
  alshaya_i18n_update_context($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add default PLP settings.
 */
function alshaya_master_update_8018() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_master.plp_settings'],
    'alshaya_master',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Add allowed classes for rich text.
 */
function alshaya_master_update_8017() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['filter.format.rich_text'],
    'lightning_media',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Add new string translations.
 */
function alshaya_master_update_8016() {
  $strings = [
    "We're sorry, the entered credit card is not supported. Please use a different credit card to proceed." => [
      'ar' => 'نأسف، البطاقة الائتمانية المستخدمة غير مدعومة. يرجى ادخال بطاقة ائتمانية أخرى للمتابعة.',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Enable seckit module with header configuration.
 */
function alshaya_master_update_8015() {
  \Drupal::service('module_installer')->install(['seckit']);

  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['seckit.settings.yml'],
    'seckit',
    'install'
  );
}

/**
 * Implements hook_update().
 *
 * Update configuration file for progress loader.
 */
function alshaya_master_update_8014() {
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['alshaya_master.loader_settings'],
    'alshaya_master',
    'install'
  );
}

/**
 * Implements hook_update_N().
 *
 * Add new string translations.
 */
function alshaya_master_update_8013() {
  $strings = [
    'Returning customer? SIGN IN' => [
      'ar' => 'زبون مشترك؟ سجل دخولك',
    ],
    'Sign In' => [
      'ar' => 'تسجيل الدخول',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Update the 'checkout_guest_summary' config value.
 */
function alshaya_master_update_8012() {
  $config = \Drupal::configFactory()->getEditable('alshaya_acm_checkout.settings');
  $val = '<p>You will have the opportunity to create an account during checkout to take advantage of features and benefits that makes shopping easier, faster and personalized<p>';
  $config->set('checkout_guest_summary.value', $val);
  $config->save();

  $config = \Drupal::languageManager()->getLanguageConfigOverride('ar', 'alshaya_acm_checkout.settings');
  $val = '<p> بإمكانك إنشاء حساب جديد عند إتمام عملية الشراء لكي تحصل على خصائص ومزايا تسهل عليك التسوق<p>';
  $config->set('checkout_guest_summary.value', $val);
  $config->save();
}

/**
 * Implements hook_update_N().
 *
 * Add string translation.
 */
function alshaya_master_update_8011() {
  $strings = [
    'Select your preferred pickup store' => [
      'ar' => 'يرجى اختيار المحل الذي ترغب في الاستلام منه',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add string translation.
 */
function alshaya_master_update_8010() {
  $strings = [
    'deliver to' => [
      'ar' => 'التوصيل إلى',
    ],
    'Payment Methods' => [
      'ar' => 'طرق الدفع',
    ],
    'delivery information' => [
      'ar' => 'معلومات التوصيل',
    ],
    'Where do you want to collect from?' => [
      'ar' => 'يرجى اختيار المحل الذي ترغب في الاستلام منه',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add string translation for 'Download'.
 */
function alshaya_master_update_8009() {
  $strings = [
    'Download Invoice' => [
      'ar' => 'تحميل الفاتورة',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add string translation for - address related strings.
 */
function alshaya_master_update_8008() {
  $strings = [
    ',' => [
      'ar' => '،',
    ],
    '@area Area' => [
      'ar' => 'المنطقة @area',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add string translation for - Free and Shipping.
 */
function alshaya_master_update_8007() {
  $strings = [
    'Free' => [
      'ar' => 'مجاناً',
    ],
    'Shipping' => [
      'ar' => 'التوصيل',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Add string translation for - Tax.
 */
function alshaya_master_update_8006() {
  $strings = [
    'Tax' => [
      'ar' => 'الضريبة',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_update_N().
 *
 * Override rich text config to allow div & classes and target in <a>.
 */
function alshaya_master_update_8005() {
  $config_path = drupal_get_path('module', 'alshaya_master') . '/config/install';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write('filter.format.rich_text', $source->read('filter.format.rich_text'));
}

/**
 * Implements hook_update_N().
 *
 * Add new string translations.
 */
function alshaya_master_update_8004() {
  $strings = [
    'not available' => [
      'ar' => 'غير متوفر',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Update mobile number maxlength to 8 as per new fe implementation.
 */
function alshaya_master_update_8003() {
  $settings = \Drupal::configFactory()->getEditable('alshaya_master.mobile_number_settings');
  $settings->set('maxlength', 8);
  $settings->save();
}

/**
 * Implements hook_update_N().
 *
 * Add new string translations.
 */
function alshaya_master_update_8001() {
  $strings = [
    'Please select a size.' => [
      'ar' => 'يرجى اختيار المقاس',
    ],
  ];

  alshaya_i18n_save_translations($strings);
}

/**
 * Implements hook_install().
 */
function alshaya_master_install() {
  // Set initial translation string for en language.
  alshaya_i18n_save_translations(alshaya_master_get_strings_to_translate());

  // Get config factory object.
  $config_factory = \Drupal::configFactory();

  // Set /home page as site front page.
  $site_config = $config_factory->getEditable('system.site')->get();
  $site_config['page']['front'] = '/home';
  $config_factory->getEditable('system.site')->setData($site_config)->save();

  // Set '/en' as english language prefix.
  $lang_config = $config_factory->getEditable('language.negotiation')->get();
  $lang_config['url']['prefixes']['en'] = 'en';
  $config_factory->getEditable('language.negotiation')->setData($lang_config)->save();

  // Add <i class> for allowed html in rich text.
  \Drupal::configFactory()->getEditable('filter.format.rich_text')
    ->set('filters.filter_html.settings.allowed_html', '<a href hreflang target _target> <em> <strong> <cite> <blockquote cite> <code> <ul type> <ol start type> <li> <dl> <dt> <dd> <h2 id> <h2 class> <h3 id> <h4 id> <h5 id> <h6 id> <s> <sup> <sub> <img src alt data-entity-type data-entity-uuid data-align data-caption> <table> <caption> <tbody> <thead> <tfoot> <th> <td> <tr> <hr> <p> <p class> <br> <h1> <h1 class> <pre> <drupal-entity data-*> <i class> <span class> <style> <div class>')
    ->save();

  // Get config for rich text editor.
  $editor_config = \Drupal::configFactory()->getEditable('editor.editor.rich_text')->get('settings.toolbar.rows.0');
  if (is_array($editor_config)) {
    foreach ($editor_config as &$setting) {
      if ($setting['name'] == 'Block Formatting') {
        $setting['items'][] = 'Styles';
        break;
      }
    }
  }

  // Enable the style combo for rich text.
  \Drupal::configFactory()->getEditable('editor.editor.rich_text')
    ->set('settings.toolbar.rows.0', $editor_config)
    ->set('settings.plugins.stylescombo.styles', "p.normal|Normal\r\nh1.title|Heading\r\nh1.title--arabic| Heading Arabic\r\nh2.subhead|Sub Heading\r\np.arabic|Arabic Text")
    ->save();

  // Settings override of 'back_to_top'.
  \Drupal::configFactory()->getEditable('back_to_top.settings')
    ->set('back_to_top_prevent_on_mobile', FALSE)
    ->set('back_to_top_prevent_in_admin', TRUE)
    ->save();

  // Set basic block type view display.
  $blockConfig = \Drupal::configFactory()->getEditable('core.entity_view_display.block_content.basic.default');
  $content = $blockConfig->get('content');
  $content['field_image'] = [
    'weight' => 1,
    'type' => 'image',
    'label' => 'hidden',
    'settings' => [
      'image_style' => '186x120',
      'image_link' => '',
    ],
    'third_party_settings' => [],
  ];
  $blockConfig->set('content', $content)->save();
  $dependencies = $blockConfig->get('dependencies');
  $dependencies['config'][] = 'field.field.block_content.basic.field_image';
  $blockConfig->set('dependencies', $dependencies)->save();

  // Set basic block type form display.
  $blockConfig = \Drupal::configFactory()->getEditable('core.entity_form_display.block_content.basic.default');
  $content = $blockConfig->get('content');
  $content['field_image'] = [
    'weight' => 11,
    'type' => 'image_image',
    'label' => 'hidden',
    'settings' => [
      'preview_image_style' => 'thumbnail',
      'progress_indicator' => 'throbber',
    ],
    'third_party_settings' => [],
  ];
  $blockConfig->set('content', $content)->save();
  $dependencies = $blockConfig->get('dependencies');
  $dependencies['config'][] = 'field.field.block_content.basic.field_image';
  $blockConfig->set('dependencies', $dependencies)->save();

  // Configure ShareThis defaults.
  $configFactory = \Drupal::configFactory()->getEditable('sharethis.settings');

  // Enable only FB, Twitter, Pinterest.
  // @codingStandardsIgnoreLine
  $configFactory->set('service_option', "'Facebook:facebook','Twitter:twitter','Pinterest:pinterest'");

  // Disable all extras.
  foreach ($configFactory->get('option_extras') as $option => $status) {
    $configFactory->set('option_extras.' . $option, 0);
  }

  // Enable lazy load of JS to enhance performance (rendering time).
  $configFactory->set('late_load', 1);

  // Save the changes.
  $configFactory->save();

  // Set textformat for mail system module configurations.
  \Drupal::configFactory()->getEditable('mimemail.settings')
    ->set('format', 'mail_text')
    ->save();

  // Set default formatter for mime mail configurations.
  \Drupal::configFactory()->getEditable('mailsystem.settings')
    ->set('defaults.formatter', 'mime_mail')
    ->save();

  // Set the access-denied page to '/user'.
  \Drupal::configFactory()->getEditable('system.site')
    ->set('page.403', '/user')
    ->save();

  // Set the access-denied page to '/user'.
  \Drupal::configFactory()->getEditable('r4032login.settings')
    ->set('display_denied_message', FALSE)
    ->set('redirect_authenticated_users_to', '/user')
    ->save();

  // Override seckit configuration.
  /** @var \Drupal\alshaya_config\AlshayaConfigManager $manager */
  $manager = \Drupal::service('alshaya_config.manager');
  $manager->updateConfigs(
    ['seckit.settings.yml'],
    'seckit',
    'install'
  );
}
