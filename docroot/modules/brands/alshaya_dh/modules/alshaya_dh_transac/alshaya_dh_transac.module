<?php

/**
 * @file
 * Module file.
 */

use Drupal\acq_sku\Entity\SKU;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_dh_transac_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() == 'acq_product' && $view_mode == 'full') {
    /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
    $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
    $sku = $skuManager->getSkuForNode($entity);
    $sku_entity = SKU::loadFromSku($sku);

    if ($sku_entity instanceof SKU) {
      if ($product_brand = $sku_entity->get('attr_brand_name')->getString()) {
        $build['product_brand']['#markup'] = $product_brand;
      }

      $return = _alshaya_dh_transac_get_product_description($sku_entity);
      $build['description'] = $return['description'];
      $build['short_desc'] = $return['short_desc'];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_dh_transac_acq_sku_view(array &$build, EntityInterface $sku_entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode == 'modal') {
    if ($product_brand = $sku_entity->get('attr_brand_name')->getString()) {
      $build['product_brand']['#markup'] = $product_brand;
    }
    $return = _alshaya_dh_transac_get_product_description($sku_entity);
    $build['short_desc'] = $return['short_desc'];
    $build['description'] = $return['description'];
  }
}

/**
 * Get product description from SKU.
 */
function _alshaya_dh_transac_get_product_description($sku_entity) {
  $return = [];

  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
  $search_direction = $sku_entity->getType() == 'configurable' ? 'children' : 'self';
  $description_value = '';
  $desc = $skuManager->fetchProductAttribute($sku_entity, 'attr_description', $search_direction);

  if (!empty($desc)) {
    $description_value .= $desc;
  }

  $list_of_attributes = [
    'attr_details_and_care' => '',
    'attr_style_taxonomy' => t('Style'),
    'attr_sleeve_length' => t('Sleeve Length'),
    'attr_length' => t('Length'),
    'attr_neckline' => t('Neckline'),
    'attr_detail' => t('Detail'),
    'attr_design' => t('Design'),
    'attr_fabric' => t('Fabric'),
  ];

  $properties = [];
  $details_and_care_value = '';
  foreach ($list_of_attributes as $key => $title) {
    if ($value = $sku_entity->get($key)->getString()) {
      if ($key === 'attr_details_and_care') {
        $details_and_care_value = '<p>' . $value . '</p>';
        $value = '';
      }
      $properties[] = [
        'label' => $title,
        'value' => $value,
      ];
    }
  }

  if (!empty($properties)) {
    $details_and_care = [
      '#theme' => 'pdp_details_care',
      '#properties' => $properties,
    ];
    $description_value .= '<h2>' . t('Details and care') . '</h2>';
    $description_value .= $details_and_care_value;
    $description_value .= \Drupal::service('renderer')->renderPlain($details_and_care);
  }
  $description = [];
  $description['value'] = [
    '#markup' => $description_value,
  ];

  // Add all variables to $build in the sequence in
  // which they should be displayed.
  $return['description'][] = $description;

  /** @var \Drupal\alshaya_acm_product\ProductHelper $product_helper*/
  $product_helper = \Drupal::service('alshaya_acm_product.helper');
  $short_desc = $product_helper->createShortDescription($description['value']['#markup']);
  $return['short_desc']['value'] = strip_tags($short_desc['html']);

  return $return;
}

/**
 * Implements hook_gtm_product_attributes_alter().
 */
function alshaya_dh_transac_gtm_product_attributes_alter($product, array &$attributes) {
  // Update brand name in data layer.
  $sku = SKU::loadFromSku($attributes['gtm-product-sku'], 'en');
  if ($sku instanceof SKU) {
    $attributes['gtm-brand'] = $sku->get('attr_brand_name')->getString();
  }
}

/**
 * Implements hook_alshaya_performance_preload_alter().
 */
function alshaya_dh_transac_alshaya_performance_preload_alter(array &$preload) {
  $site_preloads = [
    'en' => [
      [
        'as' => 'font',
        'href' => '/themes/custom/transac/alshaya_debenhams/fonts/SofiaPro.woff2',
        'crossorigin' => 'crossorigin',
        'type' => 'font/woff2',
      ],
    ],
    'ar' => [
      [
        'as' => 'font',
        'href' => '/themes/custom/transac/alshaya_debenhams/fonts/Tajawal-Regular.woff2',
        'crossorigin' => 'crossorigin',
        'type' => 'font/woff2',
      ],
      [
        'as' => 'font',
        'href' => '/themes/custom/transac/alshaya_debenhams/fonts/Tajawal-Medium.woff2',
        'crossorigin' => 'crossorigin',
        'type' => 'font/woff2',
      ],
    ],
  ];
  // Preloading fonts here.
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (isset($site_preloads[$language])) {
    $preload = array_merge($site_preloads[$language], $preload);
  }
}
