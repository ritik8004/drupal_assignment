<?php

/**
 * @file
 * Alshaya AY Transac module file.
 */

use Drupal\taxonomy\TermInterface;
use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_library_info_alter().
 */
function alshaya_ay_transac_library_info_alter(&$libraries, $extension) {
  // Attach mobile_menu library wherever the alshaya_algolia_react
  // library is loaded.
  if ($extension === 'alshaya_algolia_react' && isset($libraries['autocomplete'])) {
    $libraries['autocomplete']['dependencies'][] = 'alshaya_ay_transac/mobile_menu';
  }
}

/**
 * Implements hook_preprocess_block().
 */
function alshaya_ay_transac_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] == 'alshaya_rcs_shop_by_block') {
    $variables['#cache']['contexts'][] = 'super_category';
    // Get current super category term from route.
    $term = \Drupal::service('alshaya_acm_product_category.product_category_tree')->getCategoryTermFromRoute();
    if ($term instanceof TermInterface) {
      /** @var \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository */
      $entity_repository = \Drupal::service('entity.repository');
      $term_en = $entity_repository->getTranslationFromContext($term, 'en');
      // Default block label is Shop By.
      // Only update block label for footer menu block as per
      // current super category if not on `Shop` super category.
      if (strtolower($term_en->label()) !== 'shop') {
        $term = $entity_repository->getTranslationFromContext($term);
        $variables['label'] = $term->label();
        $variables['#cache']['tags'] = Cache::mergeTags($variables['#cache']['tags'] ?? [], $term->getCacheTags());
      }
    }
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function alshaya_ay_transac_preprocess_breadcrumb(&$variables) {

  // Get all root terms or super categories.
  $super_category_tree = \Drupal::service('alshaya_acm_product_category.product_category_tree');
  $super_categories = $super_category_tree->getCategoryRootTerms();
  if (empty($super_categories)) {
    return;
  }
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path = \Drupal::request()->getRequestUri();
  // Explode string to array.
  $path_parts = explode('/', trim($current_path, '/'));
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $tid = ($langcode === $path_parts[0])
    ? $path_parts[1]
    : $path_parts[0];
  // Get the product category term from the Path.
  $term_from_route = $super_category_tree->getTermByPath($tid);
  // dump($term_from_route);
  // Checking here category ID available and current value not equal ID.
  if ($term_from_route instanceof TermInterface
    && isset($super_categories[$term_from_route->id()])
    && array_keys($super_categories)[0] != $term_from_route->id()
  ) {
    // Unset the breadcrumb.
    $variables['links'] = [];
  }
  $variables['#cache']['contexts'][] = 'url.path';
}

