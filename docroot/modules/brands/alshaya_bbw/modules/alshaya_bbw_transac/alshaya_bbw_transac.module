<?php

/**
 * @file
 * The Module file.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\acq_sku\Entity\SKU;
use Drupal\acq_commerce\SKUInterface;

/**
 * Implements hook_alshaya_acm_product_build_alter().
 */
function alshaya_bbw_transac_alshaya_acm_product_build_alter(&$build, SKUInterface $sku, $context = 'pdp') {
  $form = $sku->get('attr_form')->getString();

  if ($form) {
    $form = '<span class="content--form">' . $form . '</span>';
  }

  $title = _alshaya_bbw_transac_get_product_title($sku) . $form;

  if ($context == 'search') {
    $build['#product_label'] = [
      '#markup' => $title,
    ];
  }
  else {
    $build['title'] = [
      '#markup' => $title,
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_bbw_transac_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() == 'acq_product') {
    $sku = $entity->get('field_skus')->first()->getString();
    $sku_entity = SKU::loadFromSku($sku);

    if ($sku_entity instanceof SKU) {
      if ($view_mode == 'full' || $view_mode == 'modal') {
        if ($product_brand = $sku_entity->get('attr_brand')->getValue()) {
          $build['product_brand']['#markup'] = $product_brand[0]['value'];
        }

        if ($size_volume = $sku_entity->get('attr_size')->getValue()) {
          $build['size_volume']['#markup'] = $size_volume[0]['value'];
        }
      }

      if ($view_mode == 'full') {
        if ($fragrance_description = $sku_entity->get('attr_fragrance_description')->getString()) {
          $fragrance_desc['label'] = [
            '#markup' => t('Fragrance Description'),
          ];
          $fragrance_desc['value'] = [
            '#markup' => $fragrance_description,
          ];
          // $build['short_desc'] contains the description that should be
          // displayed before 'Read More'.
          $build['short_desc'] = $fragrance_desc;
          $build['description'][] = $fragrance_desc;
        }

        if ($overview = $entity->get('body')->getValue()) {
          $overview_desc['label'] = [
            '#markup' => t('Overview'),
          ];
          $overview_desc['value'] = [
            '#markup' => $overview[0]['value'],
          ];
          $build['description'][] = $overview_desc;
        }

        if ($usage = $sku_entity->get('attr_usage')->getString()) {
          $usage_desc['label'] = [
            '#markup' => t('Usage'),
          ];
          $usage_desc['value'] = [
            '#markup' => $usage,
          ];
          $build['description'][] = $usage_desc;
        }

        if ($more_info = $sku_entity->get('attr_more_info')->getString()) {
          $more_info_desc['label'] = [
            '#markup' => t('More info'),
          ];
          $more_info_desc['value'] = [
            '#markup' => $more_info,
          ];
          $build['description'][] = $more_info_desc;
        }
      }
    }
  }
}

/**
 * A helper function to get the product title.
 *
 * @param Drupal\acq_sku\Entity\SKU $sku
 *   A object contains values for attributes.
 *
 * @return string
 *   Title value.
 */
function _alshaya_bbw_transac_get_product_title(SKU $sku) {
  $title = '';
  if (($fragrance_name = $sku->get('attr_fragrance_name')->getString()) || ($descriptive_name = $sku->get('attr_descriptive_name')->getString())) {
    $title = (!empty($fragrance_name)) ? $fragrance_name : $descriptive_name;
  }
  return $title;
}

/**
 * Implements hook_acq_sku_base_field_additions_alter().
 */
function alshaya_bbw_transac_acq_sku_base_field_additions_alter(array &$fields = []) {
  $alshaya_bbw_transac_fields = \Drupal::config('alshaya_bbw_transac.sku_base_fields')->get('fields');
  $fields = array_merge($fields, $alshaya_bbw_transac_fields);
}
