<?php

/**
 * @file
 * The Module file.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\acq_sku\Entity\SKU;

/**
 * Implements hook_theme_registry_alter().
 */
function alshaya_bbw_transac_theme_registry_alter(&$theme_registry) {
  $theme_registry['sku_teaser']['path'] = drupal_get_path('module', 'alshaya_bbw_transac') . '/templates';
  $theme_registry['sku_teaser']['variables']['form'] = NULL;
}

/**
 * Implements hook_acq_sku_gallery_view_alter().
 */
function alshaya_bbw_transac_acq_sku_gallery_view_alter(&$elements, $skus) {
  foreach ($elements as $delta => $element) {
    $sku = $skus[$delta];
    if ($form = $sku->get('attr_form')->getValue()) {
      $elements[$delta]['#form'] = $form[0]['value'];
    }
    if (($fragrance_name = $sku->get('attr_fragrance_name')->getString()) || ($descriptive_name = $sku->get('attr_descriptive_name')->getString())) {
      $elements[$delta]['#product_label'] = (!empty($fragrance_name)) ? $fragrance_name : $descriptive_name;
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_bbw_transac_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() == 'acq_product') {
    $sku = $entity->get('field_skus')->first()->getString();
    $sku_entity = SKU::loadFromSku($sku);

    if ($sku_entity instanceof SKU) {
      if ($view_mode == 'full' || $view_mode == 'modal' || $view_mode == 'teaser' || $view_mode == 'product_category_carousel') {
        if ($form = $sku_entity->get('attr_form')->getValue()) {
          $build['form']['#markup'] = $form[0]['value'];
        }
      }

      if ($view_mode == 'full' || $view_mode == 'modal') {
        if ($product_brand = $sku_entity->get('attr_product_brand')->getValue()) {
          $build['product_brand']['#markup'] = $product_brand[0]['value'];
        }

        if ($size_volume = $sku_entity->get('attr_size')->getValue()) {
          $build['size_volume']['#markup'] = $size_volume[0]['value'];
        }
      }

      if ($view_mode == 'full') {
        if ($fragrance_description = $sku_entity->get('attr_fragrance_description')->getString()) {
          $fragrance_desc['label'] = [
            '#markup' => t('Fragrance Description'),
          ];
          $fragrance_desc['value'] = [
            '#markup' => $fragrance_description,
          ];
          $build['description'][] = $fragrance_desc;
        }

        if ($more_info = $sku_entity->get('attr_more_info')->getString()) {
          $more_info_desc['label'] = [
            '#markup' => t('More info'),
          ];
          $more_info_desc['value'] = [
            '#markup' => $more_info,
          ];
          $build['description'][] = $more_info_desc;
        }

        if ($usage = $sku_entity->get('attr_usage')->getString()) {
          $usage_desc['label'] = [
            '#markup' => t('Usage'),
          ];
          $usage_desc['value'] = [
            '#markup' => $usage,
          ];
          $build['description'][] = $usage_desc;
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function alshaya_bbw_transac_preprocess_node(&$variables) {
  if ($variables['node']->bundle() == 'acq_product') {
    $sku = $variables['node']->get('field_skus')->first()->getString();
    $sku_entity = SKU::loadFromSku($sku);
    $variables['label'] = _alshaya_bbw_transac_get_product_title($sku_entity);
  }
}

/**
 * A helper function to get the product title.
 *
 * @param Drupal\acq_sku\Entity\SKU $sku
 *   A object contains values for attributes.
 */
function _alshaya_bbw_transac_get_product_title(SKU $sku) {
  $title = '';
  if (($fragrance_name = $sku->get('attr_fragrance_name')->getString()) || ($descriptive_name = $sku->get('attr_descriptive_name')->getString())) {
    $title = (!empty($fragrance_name)) ? $fragrance_name : $descriptive_name;
  }
  return $title;
}
