<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_preprocess_template().
 */
function alshaya_cos_transac_preprocess_product_zoom(&$vars) {
  $pdp_gallery_type = \Drupal::config('alshaya_acm_product.settings')->get('pdp_gallery_type');
  // Set pdp_gallery_type to show swatch images in mobile with classic gallery in magazine layout.
  if ($pdp_gallery_type == 'classic') {
    $vars['pdp_gallery_type'] = $pdp_gallery_type;
  }
}

/**
 * Implements hook_alshaya_search_algolia_object_alter().
 */
function alshaya_cos_transac_alshaya_search_algolia_object_alter(array &$object) {
  $materials = $object['attr_materials'];
  if ($materials) {
    $materials = json_decode(reset($materials), TRUE);
    $object['attr_materials'] = $materials;
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_cos_transac_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() == 'acq_product') {
    /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
    $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
    $sku = $skuManager->getSkuForNode($entity);
    $sku_entity = SKU::loadFromSku($sku);
    $return = _alshaya_cos_transac_get_product_description($sku_entity);
    $build['description'] = $return['description'];
    $build['short_desc'] = $return['short_desc'];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_cos_transac_acq_sku_view(array &$build, EntityInterface $sku_entity, EntityViewDisplayInterface $display, $view_mode) {
  $return = _alshaya_cos_transac_get_product_description($sku_entity);
  $build['short_desc'] = $return['short_desc'];
  $build['description'] = $return['description'];
}

/**
 * Get product description from SKU.
 */
function _alshaya_cos_transac_get_product_description($sku_entity) {
  $return = [];

  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
  $search_direction = $sku_entity->getType() == 'configurable' ? 'children' : 'self';
  $description_value = '';
  $child = $skuManager->fetchProductAttribute($sku_entity, 'attr_description', $search_direction);

  $sku_entity->get('attr_description')->getValue();
  if ($body = $sku_entity->get('attr_description')->getValue()) {
    $description_value .= $body[0]['value'];
  }

  // Render the wrapper div for composition always so that the same can be
  // filled with data on variant selection.
  // Prepare the description variable.
  $composition = $skuManager->fetchProductAttribute($sku_entity, 'attr_composition', $search_direction);
  $washing_instructions = $skuManager->fetchProductAttribute($sku_entity, 'attr_washing_instructions', $search_direction);

  $composition_markup = [
    '#theme' => 'product_composition_markup',
    '#title' => t('Product Detail'),
  ];
  if (!empty($composition)) {
    $composition_markup['#composition']['#markup'] = $composition .' / '. $washing_instructions;
  }

  $description_value .= render($composition_markup);

  // Render the wrapper div for article warning always so that the same
  // can be filled with data on variant selection.
  $warning = $skuManager->fetchProductAttribute($sku_entity, 'attr_article_warning', $search_direction);
  $description_value .= render($warning);

  $description['value'] = [
    '#markup' => $description_value,
  ];


  // Add all variables to $build in the sequence in
  // which they should be displayed.
  $return['description'][] = $description;

  /* @var \Drupal\alshaya_acm_product\ProductHelper $product_helper*/
  $product_helper = \Drupal::service('alshaya_acm_product.helper');
  $short_desc = $product_helper->createShortDescription($description['value']['#markup']);
  $return['short_desc']['value'] = strip_tags($short_desc['html']);

  return $return;
}
