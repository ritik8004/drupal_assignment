<?php

/**
 * @file
 * Module file.
 */

use Drupal\acq_commerce\SKUInterface;
use Drupal\acq_sku\Entity\SKU;
use Drupal\alshaya_hm_images\SkuAssetManager;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_acq_sku_product_sku_alter().
 */
function alshaya_hm_images_acq_sku_product_sku_alter(SKU $sku, array $product) {
  // Process assets data & create attributes which are needed for sorting
  // the assets while displaying them.
  $sku->attr_assets = _alshaya_hm_images_acq_sku_process_assets($product);
}

/**
 * Helper function to process asset attributes & calculate sorting params.
 *
 * @param array $product
 *   Product array containing assets to be processed.
 *
 * @return string
 *   Serialized & processed assets.
 */
function _alshaya_hm_images_acq_sku_process_assets(array $product) {
  $assets = [];
  if (isset($product['extension'], $product['extension']['assets'])) {
    $assets = $product['extension']['assets'];

    foreach ($assets as $key => $asset) {
      if (empty($asset['Data']['AssetType']) && ($asset['is_old_format'] && empty($asset['Type']))) {
        continue;
      }

      $asset_type_parts = (!empty($asset['Data']['AssetType'])) ? explode('/', $asset['Data']['AssetType']) : [];
      $assets[$key]['sortAssetType'] = !empty($asset['is_old_format']) ? $asset['Type'] : end($asset_type_parts);
      $face_type = SkuAssetManager::LP_DEFAULT_ANGLE;

      if (!empty($asset['Data']['Angle']['Facing']) && !empty($asset['Data']['Angle']['Identifier'])) {
        $face_type = $asset['Data']['Angle']['Facing'] . $asset['Data']['Angle']['Identifier'];
      }
      $assets[$key]['sortFacingType'] = $face_type;
    }
  }

  return serialize($assets);
}

/**
 * Implements hook_theme().
 */
function alshaya_hm_images_theme($existing, $type, $theme, $path) {
  return [
    'alshaya_assets_gallery' => [
      'variables' => [
        'mainImage' => '',
        'hoverImage' => '',
        'label' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_alshaya_acm_product_gallery_alter().
 */
function alshaya_hm_images_alshaya_acm_product_gallery_alter(array &$gallery, SKUInterface $sku, $context = 'pdp') {
  /** @var \Drupal\alshaya_hm_images\SkuAssetManager $sku_assets_manager */
  $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');

  // Check if the gallery has a main image. If not, look for assets.
  if ($context == 'search') {
    // Lookup images on current SKU if its a simple SKU.
    $main_image_assets = $sku_assets_manager->getSkuAssets($sku, 'plp', ['plp']);
    $avoid_asset = !empty($main_image_assets) ? [$main_image_assets[0]['sortAssetType']] : [];
    $hover_image_assets = $sku_assets_manager->getSkuAssets($sku, 'plp_hover', ['plp'], '', TRUE, $avoid_asset);

    // If no assets attached & the sku is configurable, try to use the
    // assets attached with first child sku.
    if (empty($main_image_assets) && empty($hover_image_assets) && ($sku->bundle() === 'configurable')) {
      $main_image_assets = $sku_assets_manager->getChildSkuAssets($sku, 'plp', ['plp']);
      $avoid_asset = !empty($main_image_assets) ? [$main_image_assets[0]['sortAssetType']] : [];
      $hover_image_assets = $sku_assets_manager->getChildSkuAssets($sku, 'plp_hover', ['plp'], '', TRUE, $avoid_asset);
    }

    $plp_main_image = !empty($main_image_assets) ? $main_image_assets[0] : NULL;
    $plp_hover_image = !empty($hover_image_assets) ? $hover_image_assets[0] : NULL;

    if ($plp_main_image) {
      $gallery = [
        '#theme' => 'alshaya_assets_gallery',
        '#mainImage' => $plp_main_image,
        '#attached' => [
          'library' => [
            'alshaya_hm_images/hm_images',
          ],
        ],
      ];

      // We don't get alt/title, we use product's title for that.
      $gallery['#label'] = $sku->label();

      if ($plp_hover_image) {
        $gallery['#hoverImage'] = $plp_hover_image;
      }
    }
  }
}

/**
 * Implements hook_alshaya_acm_product_build_alter().
 */
function alshaya_hm_images_alshaya_acm_product_build_alter(array &$build, SKUInterface $sku, $context = 'pdp') {
  /** @var \Drupal\alshaya_hm_images\SkuAssetManager $sku_assets_manager */
  $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');

  if ($context == 'search') {
    $swatches_display_status = \Drupal::config('alshaya_acm_product.display_settings')->get('color_swatches');

    if ($swatches_display_status) {
      $swatches = array_filter($sku_assets_manager->getColorsForSku($sku));
      if ($swatches) {
        $swatch_plp_limit = \Drupal::config('alshaya_hm_images.settings')->get('swatch_plp_limit');
        $build['#swatches'] = array_slice($swatches, 0, $swatch_plp_limit, TRUE);
        $build['#swatch_more_text'] = count($swatches) > $swatch_plp_limit
          ? t('+ @swatch_count more', ['@swatch_count' => count($swatches) - $swatch_plp_limit])
          : FALSE;
      }
    }
  }
  elseif (in_array($context, ['teaser', 'product_category_carousel']) && empty($build['image'])) {
    /** @var \Drupal\alshaya_acm_product\SkuImagesManager $skuImagesManager */
    $skuImagesManager = \Drupal::service('alshaya_acm_product.sku_images_manager');
    $check_parent_child = TRUE;

    try {
      $sku_for_gallery = $skuImagesManager->getSkuForGallery($sku, $check_parent_child);
    }
    catch (\Exception $e) {
      return;
    }

    $teaser_assets = $sku_assets_manager->getSkuAssets($sku_for_gallery, 'teaser', [$context]);

    // Try once with plp assets if nothing found for teaser.
    if (empty($teaser_assets)) {
      $teaser_assets = $sku_assets_manager->getSkuAssets($sku_for_gallery, 'plp', [$context]);
    }

    if (!empty($teaser_assets)) {
      $build['image'] = [
        '#theme' => 'image',
        '#attributes' => [
          'src' => $teaser_assets[0]['url']->toString(),
          'title' => $sku->label(),
          'alt' => $sku->label(),
        ],
      ];
    }
  }
  elseif ($context == 'pdp' && !empty($build['free_gift_promotions']['#free_sku_code']) && empty($build['free_gift_promotions']['#sku_image'])) {
    $free_sku_assets = $sku_assets_manager->getSkuAssets($build['free_gift_promotions']['#free_sku_code'], 'swatch', ['swatch'], 'details', FALSE);

    if (!empty($free_sku_assets)) {
      $build['free_gift_promotions']['#sku_image'] = [
        '#theme' => 'image',
        '#attributes' => [
          'src' => $free_sku_assets[0]['url']->toString(),
          'title' => $sku->label(),
          'alt' => $sku->label(),
        ],
      ];
    }
  }
}

/**
 * Implements hook_acq_sku_pdp_gallery_media_alter().
 */
function alshaya_hm_images_acq_sku_pdp_gallery_media_alter(&$main_image, &$thumb_images, $sku) {
  if (empty($main_image) && ($sku instanceof SKU)) {
    /** @var \Drupal\alshaya_hm_images\SkuAssetManager $sku_assets_manager */
    $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');
    $color = \Drupal::request()->query->get('color');

    // If we have color attribute available from query params & the SKU being
    // rendered is configurable, lookup for a simple SKU with that color.
    // Fallback for the same in case of not a valid color is the parent SKU.
    if (($color) &&
      ($sku->bundle() === 'configurable') &&
      (($sku_color = $sku_assets_manager->getChildSkuFromColor($sku, $color)) instanceof SKU)) {
      $sku = $sku_color;
    }

    if ($sku instanceof SKU) {
      $pdp_images = $sku_assets_manager->getImagesForSku($sku, 'pdp',
        [
          'pdp_thumbnail',
          'pdp_zoom',
          'pdp_fullscreen',
          'pdp_main',
        ],
        FALSE
      );

      foreach ($pdp_images['pdp_thumbnail'] ?? [] as $key => $thumbnail) {
        $thumb_images[$key]['zoomurl'] = $pdp_images['pdp_fullscreen'][$key]['url'];
        $thumb_images[$key]['thumburl'] = $thumbnail['url'];
        $thumb_images[$key]['mediumurl'] = $pdp_images['pdp_main'][$key]['url'];
        $thumb_images[$key]['type'] = 'image';
        $thumb_images[$key]['fullurl'] = $pdp_images['pdp_fullscreen'][$key]['url'];
        $thumb_images[$key]['label'] = $sku->label();
      }

      // Check on main images is sufficient here, since zoom images are
      // variations of main images.
      if (!empty($pdp_images['pdp_main'])) {
        $main_image['zoomurl'] = $pdp_images['pdp_fullscreen'][0]['url'];
        $main_image['mediumurl'] = $pdp_images['pdp_main'][0]['url'];
        $main_image['label'] = $sku->label();
      }
    }
  }
}

/**
 * Implements hook_acq_sku_cart_media_alter().
 */
function alshaya_hm_images_acq_sku_cart_media_alter(array &$sku_image, $sku, $context = 'cart') {
  if (empty($sku_image)) {
    $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');
    $cart_assets = $sku_assets_manager->getSkuAssets($sku, 'cart', [$context]);

    if (!empty($cart_assets)) {
      $sku_image = [
        '#theme' => 'image',
        '#attributes' => [
          'src' => $cart_assets[0]['url']->toString(),
        ],
      ];
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alshaya_hm_images_form_sku_base_form_alter(&$form, FormStateInterface $form_state) {
  $tree = $form_state->get('tree');

  // Check if the product is configurable.
  if (!empty($tree['parent'])) {
    $parent_sku = $tree['parent'];
    $sku_asset_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');
    $swatch_type = $sku_asset_manager->getSkuSwatchType($parent_sku);

    // If the form has color config attribute available.
    if (isset($form['ajax']['configurables']['article_castor_id'])) {
      $options = $form['ajax']['configurables']['article_castor_id']['#options'];
      $form['ajax']['configurables']['article_castor_id']['#title'] = t('Color');
      $form['ajax']['configurables']['article_castor_id']['#attributes']['data-default-title'] = t('Color');

      // Translate color attribute option values to the rgb color values &
      // expose the same in Drupal settings to javascript.
      foreach ($options as $key => $option) {
        if (isset($tree['options']['article_castor_id:' . $key])) {
          $sku_options = $tree['options']['article_castor_id:' . $key];

          foreach ($sku_options as $key_option => $sku) {
            if ($key_option === '#available_config') {
              continue;
            }
            if (!empty($sku)) {
              $sku_entity = $sku;
              break;
            }
          }

          if ($sku_entity instanceof SKU) {
            if (strtoupper($swatch_type) !== SkuAssetManager::LP_SWATCH_RGB) {
              $assets = $sku_asset_manager->getSkuAssets($sku_entity, 'swatch', ['swatch'], $swatch_type, FALSE);
            }

            // If swatch type is not miniature_image or assets were missing from
            // sku, use rgb color code instead.
            $sku_configurable_options_color[$key] = [
              'display_value' => empty($assets) ? $sku_entity->get('attr_rgb_color')->value : '<img src="' . $assets[0]['url']->toString() . '">',
              'display_label' => $sku_entity->get('attr_color_label')->getString(),
              'swatch_type' => empty($assets) ? SkuAssetManager::LP_SWATCH_RGB : $swatch_type,
            ];
          }
        }
      }

      if (!empty($sku_configurable_options_color)) {
        $form['ajax']['configurables']['article_castor_id']['#attached']['drupalSettings']['sku_configurable_options_color'] = $sku_configurable_options_color;
      }
    }
  }
}

/**
 * Implements template_preprocess_product_zoom().
 */
function alshaya_hm_images_preprocess_product_zoom(&$variables) {
  $variables['#cache']['contexts'][] = 'url.query_args:color';
}

/**
 * Implements hook_acq_sku_base_field_additions_alter().
 */
function alshaya_hm_images_acq_sku_base_field_additions_alter(array &$fields = []) {
  $alshaya_acm_product_fields = \Drupal::config('alshaya_hm_images.sku_base_fields')->get('fields');
  $fields = array_merge($fields, $alshaya_acm_product_fields);
}

/**
 * Implements hook_alshaya_master_post_drupal_install().
 */
function alshaya_hm_images_alshaya_master_post_drupal_install() {
  // Add fields to store the values from attributes as fields.
  /** @var \Drupal\acq_sku\SKUFieldsManager $sku_fields_manager */
  $sku_fields_manager = \Drupal::service('acq_sku.fields_manager');

  $sku_fields_manager->updateFieldMetaInfo('color_label', [
    'configurable' => 1,
    'label' => 'Color',
  ]);
}
