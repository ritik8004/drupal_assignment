<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\acq_sku\Entity\SKU;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

/**
 * Implements hook_form_alter().
 */
function alshaya_hm_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-alshaya-product-list-block-1') {
    // Change position label.
    if (isset($form['sort_bef_combine']['#options']['nid ASC']) && $form['sort_bef_combine']['#options']['nid ASC']) {
      $form['sort_bef_combine']['#options']['nid ASC'] = t('Best Seller');
    }
  }

  if ($form_id == 'alshaya_newsletter_subscribe') {
    $form['email']['#prefix'] = '<div class="newsletter-block-label">' . t('Be the first to know about our newest arrivals, special offers and store events near you.') . '</div>';
  }
}

/**
 * Implements hook_acq_sku_product_node_alter().
 */
function alshaya_hm_acq_sku_product_node_alter(Node &$node, array $product) {
  // Set product activation date if available.
  if (isset($product['attributes']['product_activation_date'])) {
    $node->created = strtotime($product['attributes']['product_activation_date']);
  }
}

/**
 * Implements hook_acq_sku_product_sku_alter().
 */
function alshaya_hm_acq_sku_product_sku_alter(&$sku, $product) {
// Set product activation date if available.
  if (isset($product['attributes']['product_activation_date'])) {
    $sku->created = strtotime($product['attributes']['product_activation_date']);
  }
}

/**
 * Implements template_preprocess_block().
 */
function alshaya_hm_preprocess_block(&$variables) {
  // @Todo: Figure out which block needs this preprocess & add a test around plugin id to avoid this being called for all blocks.
  // Set alshaya-private-card image path.
  $image_path = drupal_get_path('module', 'alshaya_hm') . '/images/alshaya-priv-card.svg';
  if ($variables['base_plugin_id'] == 'join_the_club') {
    $variables['content']['image']['#uri'] = $image_path;
  }
}

/**
 * Implements hook_datalayer_alter().
 */
function alshaya_hm_datalayer_alter(&$data_layer) {
  if (!_alshaya_seo_process_gtm()) {
    return;
  }
  try {
    if (isset($data_layer['cartItemsFlocktory'])) {
      $cart_storage = \Drupal::service('acq_cart.cart_storage');
      $cart = $cart_storage->getCart(FALSE);
      if ($cart) {
        $cart_items = $cart->get('items');
        if (\Drupal::moduleHandler()->moduleExists('alshaya_hm_images')) {
          foreach ($cart_items as $key => $item) {
            $sku = SKU::loadFromSku($item['sku']);
            $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');
            $images = $sku_assets_manager->getImagesForSku($sku, 'pdp', ['pdp_main']);
            if (isset($images[0]['url'])) {
              $data_layer['cartItemsFlocktory'][$key]['image'] = $images[0]['url']->toString();
            }
          }
        }
      }
    }
  }
  catch (Exception $e) {
    \Drupal::logger('alshaya_seo')->error('Error while fetching GTM attributes: @message', ['@message' => $e->getMessage()]);
  }
}

/**
 * Implements hook_gtm_product_attributes_alter().
 */
function alshaya_hm_gtm_product_attributes_alter($product, &$attributes, &$skuAttributes) {
  if (\Drupal::moduleHandler()->moduleExists('alshaya_hm_images')) {
    $skuId = $product->get('field_skus')->first()->getString();
    if (isset($skuId)) {
      $sku = SKU::loadFromSku($skuId);
      $sku_assets_manager = \Drupal::service('alshaya_hm_images.skuassetsmanager');
      if ($sku instanceof SKU) {
        $images = $sku_assets_manager->getImagesForSku($sku, 'pdp', ['pdp_main']);
        if (!empty($images)) {
          // Changes for the image count.
          $skuAttributes['gtm-dimension4'] = count($images);
        }
      }
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function alshaya_hm_module_implements_alter(&$implementations, $hook) {
  // To call the alshaya_hm_datalayer_alter at the end for HnM specific changes.
  if ($hook == 'datalayer_alter') {
    $group = $implementations['alshaya_hm'];
    unset($implementations['alshaya_hm']);
    $implementations['alshaya_hm'] = $group;
  }
}

/**
 * Implements hook_language_switch_links_alter().
 */
function alshaya_hm_language_switch_links_alter(array &$links, $type, Url $url) {
  $color_query = \Drupal::request()->query->get('color');
  /** @var \Drupal\Core\Routing\CurrentRouteMatch $current_route_matcher */
  $current_route_matcher = \Drupal::service('current_route_match');

  // Alter block only if we have color query parameter on a PDP.
  if (($color_query) &&
    ($current_route_matcher->getRouteName() == 'entity.node.canonical') &&
    ($node = $current_route_matcher->getParameter('node')) &&
    ($node->getType() == 'acq_product')) {

    // Remove the color parameter in the query string for all except current
    // language.
    foreach ($links as $langcode => $link) {
      if (($langcode != \Drupal::languageManager()->getCurrentLanguage()->getId()) &&
        (isset($links[$langcode]['query']['color']))) {
        unset($links[$langcode]['query']['color']);
      }
    }
  }
}
