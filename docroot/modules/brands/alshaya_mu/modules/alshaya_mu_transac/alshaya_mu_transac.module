<?php

/**
 * @file
 * Alshaya MUJI transac module file.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\acq_sku\Entity\SKU;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_mu_transac_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->bundle() == 'acq_product') {

    if ($view_mode == 'full') {
      /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
      $skuManager = \Drupal::service('alshaya_acm_product.skumanager');
      $sku = $skuManager->getSkuForNode($entity);
      $sku_entity = SKU::loadFromSku($sku);
      if ($sku_entity instanceof SKU) {
        $return = _alshaya_mu_transac_get_product_description($sku_entity);
        $build['short_desc'] = $return['short_desc'];
        $build['description'] = $return['description'];
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_mu_transac_acq_sku_view(array &$build, EntityInterface $sku_entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode == 'modal') {
    $return = _alshaya_mu_transac_get_product_description($sku_entity);
    $build['short_desc'] = $return['short_desc'];
    $build['description'] = $return['description'];
  }
}

/**
 * Get product description from SKU.
 */
function _alshaya_mu_transac_get_product_description($sku_entity) {
  $productHelper = \Drupal::service('alshaya_acm_product.helper');

  $return = [];
  $body = $sku_entity->get('attr_description')->getValue();
  if ($body) {
    $description = [];
    $description['value'] = [
      '#markup' => $body[0]['value'],
    ];
    $return['description'][] = $description;
    $productHelper->updateShortDescription($return, $body[0]['value']);
    if (!empty($return['short_desc'])) {
      $return['short_desc']['value']['#markup'] = $productHelper->processShortDescEllipsis($return['short_desc']['value']['#markup']);
    }
  }

  if ($short_desc_1 = $sku_entity->get('attr_short_description1')->getString()) {
    if (empty($return['short_desc'])) {
      $return['short_desc']['value'] = [
        '#markup' => $short_desc_1,
      ];
    }
  }

  if ($short_desc_2 = $sku_entity->get('attr_short_description2')->getString()) {
    if (empty($return['short_desc'])) {
      $return['short_desc']['value'] = [
        '#markup' => $short_desc_2,
      ];
    }
  }

  if ($short_desc_1 = $sku_entity->get('attr_short_description1')->getString()) {
    $attr_short_description1_desc = [];
    $attr_short_description1_desc['value'] = [
      '#markup' => $short_desc_1,
    ];

    $return['description'][] = $attr_short_description1_desc;
  }

  if ($short_desc_2 = $sku_entity->get('attr_short_description2')->getString()) {
    $attr_short_description2_desc = [];
    $attr_short_description2_desc['value'] = [
      '#markup' => $short_desc_2,
    ];

    $return['description'][] = $attr_short_description2_desc;
  }

  if ($attr_country_important_point = $sku_entity->get('attr_country_important_point')->getString()) {
    $attr_country_important_point_desc = [];
    $attr_country_important_point_desc['label'] = [
      '#markup' => t('Country Important Points'),
    ];
    $attr_country_important_point_desc['value'] = [
      '#markup' => $attr_country_important_point,
    ];

    $return['description'][] = $attr_country_important_point_desc;
  }

  if ($attr_country_of_origin_en = $sku_entity->get('attr_country_of_origin_en')->getString()) {
    $attr_country_of_origin_en_desc = [];
    $attr_country_of_origin_en_desc['label'] = [
      '#markup' => t('Country of Origin'),
    ];
    $attr_country_of_origin_en_desc['value'] = [
      '#markup' => $attr_country_of_origin_en,
    ];

    $return['description'][] = $attr_country_of_origin_en_desc;
  }

  if ($attr_direction_en = $sku_entity->get('attr_direction_en')->getString()) {
    $attr_direction_en_desc = [];
    $attr_direction_en_desc['label'] = [
      '#markup' => t('Direction'),
    ];
    $attr_direction_en_desc['value'] = [
      '#markup' => $attr_direction_en,
    ];

    $return['description'][] = $attr_direction_en_desc;
  }

  if ($attr_material_en = $sku_entity->get('attr_material_en')->getString()) {
    $attr_material_en_desc = [];
    $attr_material_en_desc['label'] = [
      '#markup' => t('Material'),
    ];
    $attr_material_en_desc['value'] = [
      '#markup' => $attr_material_en,
    ];

    $return['description'][] = $attr_material_en_desc;
  }

  // Prepare the specification variable with all attributes.
  $specifications = [];
  $specifications['label'] = [
    '#markup' => t('Specifications'),
  ];

  $specifications['value'] = [
    "#theme" => 'item_list',
    '#items' => [],
  ];

  if ($attr_spec_en = $sku_entity->get('attr_spec_en')->getString()) {
    $specifications['value']['#items'][] = t('Spec: @value', [
      '@value' => $attr_spec_en,
    ]);
  }

  if ($attr_p_depth = $sku_entity->get('attr_p_depth')->getString()) {
    $specifications['value']['#items'][] = t('Depth: @value', [
      '@value' => $attr_p_depth,
    ]);
  }

  if ($attr_p_width = $sku_entity->get('attr_p_width')->getString()) {
    $specifications['value']['#items'][] = t('Width: @value', [
      '@value' => $attr_p_width,
    ]);
  }

  if ($attr_p_height = $sku_entity->get('attr_p_height')->getString()) {
    $specifications['value']['#items'][] = t('Height: @value', [
      '@value' => $attr_p_height,
    ]);
  }

  if ($attr_p_weight = $sku_entity->get('attr_p_weight')->getString()) {
    $specifications['value']['#items'][] = t('Weight: @value', [
      '@value' => $attr_p_weight,
    ]);
  }

  if (!empty($specifications)) {
    $return['description'][] = $specifications;
  }

  return $return;
}

/**
 * Implements hook_alshaya_performance_preload_alter().
 */
function alshaya_mu_transac_alshaya_performance_preload_alter(array &$preload) {
  // WestElm's icon font comes from whitelabel.
  $preload[] = [
    'as' => 'font',
    'href' => '/themes/custom/transac/alshaya_white_label/fonts/alshaya-icons.woff2?D7b5if',
    'crossorigin' => 'crossorigin',
    'type' => 'font/woff2',
  ];
}

/**
 * Implements hook_alshaya_spc_checkout_build_alter().
 *
 * Attach online booking library for Furniture brands.
 */
function alshaya_mu_transac_alshaya_spc_checkout_build_alter(array &$build) {
  $build['#attached']['library'][] = 'alshaya_white_label/online-booking';
}
