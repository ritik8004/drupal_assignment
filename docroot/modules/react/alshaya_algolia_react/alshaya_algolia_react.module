<?php

/**
 * @file
 * Module file.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_algolia_react_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if (($entity->bundle() !== 'acq_product')) {
    return;
  }

  // Add object id in only full and modal views.
  $view_modes = ['full', 'modal'];
  if (in_array($view_mode, $view_modes)) {
    $build['#attributes']['data-insights-object-id'] = 'entity:node/' . $entity->id() . ':' . $entity->language()->getId();
    $build['#attached']['library'][] = 'alshaya_algolia_react/search_insights_detail';
  }
}

/**
 * Implements hook_block_access().
 */
function alshaya_algolia_react_block_access(Block $block, $operation, AccountInterface $account) {
  // Disable solr facets blocks and search views exposed blocks for /search
  // page, which is created for algolia.
  if ($operation == 'view' &&
      (strpos($block->getPluginId(), 'facet') !== FALSE
       || strpos($block->id(), 'exposedformsearchpage') !== FALSE)
  ) {
    $route = \Drupal::routeMatch();
    if ($route->getRouteName() == 'alshaya_algolia_react.search') {
      return AccessResult::forbidden();
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function alshaya_algolia_react_page_attachments(array &$attachments) {
  // This is used in Algolia Analytics to filter data based on admin/non-admin
  // user.
  if (!_alshaya_seo_process_gtm()) {
    $attachments['#attached']['drupalSettings']['user']['isCustomer'] = FALSE;
    return;
  }
  else {
    $attachments['#attached']['drupalSettings']['user']['isCustomer'] = TRUE;
  }
}
