<?php

/**
 * @file
 * Module file.
 */

use Drupal\alshaya_super_category\AlshayaSuperCategoryManager;
use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_algolia_react_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if (!in_array($entity->bundle(), ['acq_product', 'rcs_product'])) {
    return;
  }

  // Add object id in only full and modal views.
  $view_modes = ['full', 'modal'];
  if (in_array($view_mode, $view_modes)) {
    $build['#attributes']['data-insights-object-id'] = 'entity:node/' . $entity->id() . ':' . $entity->language()->getId();
    $build['#attached']['library'][] = 'alshaya_algolia_react/search_insights_detail';
  }
}

/**
 * Implements hook_block_access().
 */
function alshaya_algolia_react_block_access(Block $block, $operation, AccountInterface $account) {
  // Disable solr facets blocks and search views exposed blocks for /search
  // page, which is created for algolia.
  if ($operation == 'view' &&
      (str_contains($block->getPluginId(), 'facet')
       || str_contains($block->id(), 'exposedformsearchpage'))
  ) {
    $route = \Drupal::routeMatch();
    if ($route->getRouteName() == 'alshaya_algolia_react.search') {
      return AccessResult::forbidden();
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function alshaya_algolia_react_page_attachments(array &$attachments) {
  // This is used in Algolia Analytics to filter data based on admin/non-admin
  // user.
  $attachments['#attached']['drupalSettings']['user']['isCustomer'] = _alshaya_seo_process_gtm();
  $attachments['#attached']['drupalSettings']['reactTeaserView']['isPriceModeFromTo'] = _alshaya_acm_product_get_price_helper()->isPriceModeFromTo();
}

/**
 * Implements hook_alshaya_super_category_status_update().
 */
function alshaya_algolia_react_alshaya_super_category_status_update($status, $default_parent, $path_alter) {
  // Add super_category as attribute for faceting if super category is enabled
  // using the Drush command and Algolia modules are already installed.
  if ($status) {
    $index_helper = \Drupal::service('alshaya_search_algolia.index_helper');
    try {
      $index_helper->addCustomFacetToIndex(AlshayaSuperCategoryManager::SEARCH_FACET_NAME);
      \Drupal::logger('alshaya_super_category')
        ->notice('Added @super_category as an attribute for faceting.', [
          '@super_category' => AlshayaSuperCategoryManager::SEARCH_FACET_NAME,
        ]);
    }
    catch (\Exception $e) {
      \Drupal::logger('alshaya_super_category')
        ->error('Error while trying to add facet to index after enabling Super Category. Error: @message', [
          '@message' => $e->getMessage(),
        ]);
    }
  }
}
