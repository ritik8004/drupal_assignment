<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\node\Entity\Node;
use Drupal\acq_commerce\SKUInterface;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function alshaya_sofa_sectional_node_view(array &$build, Node $entity, EntityViewDisplay $display, $view_mode) {
  // Add cache tag.
  $build['#cache']['tags'] = Cache::mergeTags($build['#cache']['tags'] ?? [], ['config:alshaya_sofa_sectional.settings']);

  // Return if the feature is not applicable on the entity and display mode.
  if (!in_array($view_mode, ['modal', 'full']) || !\Drupal::service('alshaya_sofa_sectional.helper')->isSofaSectionalFeatureApplicable($entity)) {
    return;
  }

  // Attach Sofa and Sectional libraries.
  $build['#attached']['library'][] = 'alshaya_sofa_sectional/sofa_sectional_utilities';
  $build['#attached']['library'][] = 'alshaya_sofa_sectional/sofa_sectional';
  $build['#attached']['library'][] = 'alshaya_white_label/sofa-sectional';

  // Attach additional library to dispatch modal load event.
  if ($view_mode == 'modal') {
    $build['#attached']['library'][] = 'alshaya_sofa_sectional/product_modal_view';
  }

  // Attach a unique class with view mode to render form in context.
  $build['#attributes']['class'][] = 'has-sofa-sectional-' . $view_mode . '-form';

  // Add a unique class if PDP has a sofa and sectional form.
  $build['#attributes']['class'][] = 'has-sofa-sectional-form';
}

/**
 * Implements hook_alshaya_acm_product_skubaseform_alter().
 */
function alshaya_sofa_sectional_alshaya_acm_product_skubaseform_alter(&$form, SKUInterface $sku_entity) {
  /** @var \Drupal\alshaya_acm_product\SkuManager $skuManager */
  $skuManager = \Drupal::service('alshaya_acm_product.skumanager');

  // Get the current node from the sku entity.
  $node = $skuManager->getDisplayNode($sku_entity);

  // Return if configurable options are not available for the product
  // and feature isn't applicable for this entity.
  if (!isset($form['#attached']['drupalSettings']['configurableCombinations'])
  || !\Drupal::service('alshaya_sofa_sectional.helper')->isSofaSectionalFeatureApplicable($node)) {
    return;
  }

  /** @var \Drupal\alshaya_acm_product\SkuImagesManager $sku_images_manager */
  $sku_images_manager = \Drupal::service('alshaya_acm_product.sku_images_manager');

  // Get the sku from the Sku entity.
  $sku = $sku_entity->getSku();

  $configurables = $form['#attached']['drupalSettings']['configurableCombinations'][$sku]['configurables'];

  // Get the swatches data.
  $swatches = $sku_images_manager->getAllSwatchData($sku_entity);
  if (!empty($swatches)) {
    foreach ($swatches as $attribute_code => $attribute_values) {
      // Mark the attributes which are swatches.
      if (in_array($attribute_code, array_keys($configurables))
      && !isset($configurables[$attribute_code]['is_swatch'])) {
        $configurables[$attribute_code]['is_swatch'] = TRUE;
        $configurables[$attribute_code]['swatches'] = [];
        foreach ($swatches[$attribute_code] as $swatch) {
          $configurables[$attribute_code]['swatches'][] = [
            'label' => $swatch['display_label'],
            'data' => $swatch['display_value'] ?? $swatch['image_url'] ?? NULL,
            'value' => $swatch['value'],
            'type' => $swatch['swatch_type'],
            'child_sku_code' => $swatch['child_sku_code'],
          ];
        }
      }
    }
  }

  // Reassign with the updates values.
  $form['#attached']['drupalSettings']['configurableCombinations'][$sku]['configurables'] = $configurables;
}
