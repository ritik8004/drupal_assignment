<?php

/**
 * @file
 * Contains alshaya_online_returns.module.
 */

use Drupal\acq_commerce\SKUInterface;
use Drupal\Core\Cache\Cache;

/**
 * Implements hook_preprocess_node().
 */
function alshaya_online_returns_preprocess_node(&$variables) {
  if (in_array($variables['node']->bundle(), ['acq_product', 'rcs_product'])) {
    $variables['online_returns_status'] = \Drupal::service('alshaya_online_returns.online_returns_helper')->isOnlineReturnsEnabled();
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function alshaya_online_returns_page_attachments_alter(array &$page) {
  $online_returns_helper = \Drupal::service('alshaya_online_returns.online_returns_helper');
  $config['enabled'] = $online_returns_helper->isOnlineReturnsEnabled();
  $page['#cache']['tags'] = array_merge(
    $page['#cache']['tags'] ?? [],
    \Drupal::config('alshaya_online_returns.settings')->getCacheTags()
  );

  // Do not proceed if Online returns is not enabled.
  if ($config['enabled'] !== TRUE) {
    return;
  }

  $page['#attached']['drupalSettings']['onlineReturns'] = $config;

  $current_route = \Drupal::routeMatch();
  $current_route_name = $current_route->getRouteName();

  if ($current_route_name === 'entity.node.canonical'
    && in_array($current_route->getParameter('node')->bundle(), [
      'rcs_product',
      'acq_product',
    ])
  ) {
    $page['#attached']['library'][] = 'alshaya_online_returns/alshaya_online_returns_pdp';
    // Attach the theming library.
    $page['#attached']['library'][] = 'alshaya_white_label/online-returns';
  }
  elseif ($current_route_name === 'entity.user.canonical') {
    $page['#attached']['library'][] = 'alshaya_online_returns/alshaya_online_returns_my_accounts';
    // Attach the theming library.
    $page['#attached']['library'][] = 'alshaya_white_label/online-returns';
  }
}

/**
 * Implements hook_sku_variant_info_alter().
 */
function alshaya_online_returns_sku_variant_info_alter(array &$variant, SKUInterface $child, ?SKUInterface $parent) {
  $onlineReturnsHelper = \Drupal::service('alshaya_online_returns.online_returns_helper');

  // Do not process further if feature is disabled.
  if (!$onlineReturnsHelper->isOnlineReturnsEnabled()) {
    return;
  }
  $variant['eligibleForReturn'] = $onlineReturnsHelper->isSkuReturnable($child);
}

/**
 * Implements hook_alshaya_acm_product_build_alter().
 */
function alshaya_online_returns_alshaya_acm_product_build_alter(&$build, SKUInterface $sku, $context = 'pdp') {
  $onlineReturnsHelper = \Drupal::service('alshaya_online_returns.online_returns_helper');

  // Do not process further if feature is disabled.
  if (!$onlineReturnsHelper->isOnlineReturnsEnabled()) {
    return;
  }

  if (isset($build['#attached']['drupalSettings']['productInfo'][$sku->getSku()])) {
    $build['#attached']['drupalSettings']['productInfo'][$sku->getSku()]['eligibleForReturn'] = $onlineReturnsHelper->isSkuReturnable($sku);
  }
}

/**
 * Implements hook_alshaya_acm_customer_recent_order_build_alter().
 */
function alshaya_online_returns_alshaya_acm_customer_recent_order_build_alter(array &$build) {
  $build['#cache']['tags'] = Cache::mergeTags(
    $build['#cache']['tags'] ?? [],
    ['config:alshaya_online_returns.settings']
  );
  $onlineReturnsHelper = \Drupal::service('alshaya_online_returns.online_returns_helper');
  $onlineReturnsStatus = $onlineReturnsHelper->isOnlineReturnsEnabled();

  // Do not process further if feature is disabled.
  if (!$onlineReturnsStatus) {
    return;
  }

  foreach ($build['recent_order'] as $key => $order) {
    $build['recent_order'][$key]['#order']['online_returns_status'] = $onlineReturnsStatus;
    $build['#attached']['drupalSettings']['onlineReturns']['recentOrders'][$order['#order']['id']] = $onlineReturnsHelper->prepareOrderData($order['#order']);
  }
}

/**
 * Implements hook_alshaya_acm_customer_orders_details_build_alter().
 */
function alshaya_online_returns_alshaya_acm_customer_orders_details_build_alter(array &$order, array &$build) {
  $build['#cache']['tags'] = Cache::mergeTags(
    $build['#cache']['tags'] ?? [],
    ['config:alshaya_online_returns.settings']
  );
  $onlineReturnsHelper = \Drupal::service('alshaya_online_returns.online_returns_helper');
  $build['#order']['online_returns_status'] = $onlineReturnsHelper->isOnlineReturnsEnabled();

  // Do not process further if feature is disabled.
  if (!$build['#order']['online_returns_status']) {
    return;
  }

  // Remove the full product item if the refunded item is equal to ordered
  // items.
  foreach ($build['#products'] as $key => &$value) {
    if ($value['refunded'] === $value['ordered']) {
      unset($build['#products'][$key]);
      continue;
    }

    if ($value['refunded'] > 0 && $value['refunded'] < $value['ordered']) {
      $value['ordered'] -= $value['refunded'];
    }

    // Get the new total based the the available quantity.
    $value['total'] = alshaya_acm_price_format($value['ordered'] * $value['price_incl_tax']);
  }
  // Rebuilding the array as after unsetting key, array
  // gets converted to object in react if first index missing.
  $build['#products'] = array_values($build['#products']);

  $build['#attached']['drupalSettings']['onlineReturns'] = $onlineReturnsHelper->prepareOrderData($order);
  $build['#attached']['drupalSettings']['onlineReturns']['products'] = $onlineReturnsHelper->prepareProductsData($build["#products"]);
  // Attach the theming library.
  $build['#attached']['library'][] = 'alshaya_white_label/online-returns';
}
