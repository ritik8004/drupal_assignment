<?php

/**
 * @file
 * Module file.
 */

use Drupal\acq_sku\Entity\SKU;

/**
 * Implements hook_acq_sku_product_sku_alter().
 */
function acq_sku_stock_acq_sku_product_sku_alter(SKU $sku, $product) {
  // Update stock info from product.
  if (isset($product['extension']['stock_item'])) {

    /** @var \Drupal\acq_sku\StockManager $manager */
    $manager = \Drupal::service('acq_sku.stock_manager');

    $stock = $product['extension']['stock_item'];
    $stock_status = isset($stock['is_in_stock']) ? (int) $stock['is_in_stock'] : 1;

    $quantity = array_key_exists('qty', $stock) ? $stock['qty'] : $stock['quantity'];
    // Ensure it is a number and not null. For configurable we can get null
    // from API.
    $quantity = (float) $quantity;
    $use_config_max_sale_qty = $stock['use_config_max_sale_qty'] ?? FALSE;
    $changed = $manager->updateStock($product['sku'], $quantity, $stock_status, $stock['max_sale_qty'], $use_config_max_sale_qty);

    \Drupal::logger('acq_sku_stock')->info('@operation stock for sku @sku. Message: @message', [
      '@operation' => $changed ? 'Updated' : 'Processed',
      '@sku' => $product['sku'],
      '@message' => json_encode($stock),
    ]);
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function acq_sku_stock_acq_sku_delete(SKU $entity) {
  /** @var \Drupal\acq_sku\StockManager $manager */
  $manager = \Drupal::service('acq_sku.stock_manager');
  $manager->removeStockEntry($entity->getSku());
}
