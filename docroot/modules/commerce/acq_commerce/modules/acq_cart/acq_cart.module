<?php

/**
 * @file
 * Provides base hooks to the cart functionality of Acquia Commerce connector.
 */

use Drupal\acq_cart\CartInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function acq_cart_preprocess_acq_sku(&$variables) {
  // We would rather allow modules to implement the preprocess hook directly,
  // however the main issue there is that we can't disable cart separately so
  // we provide a hook that's only called if this module is enabled on display.
  \Drupal::moduleHandler()->alter('add_to_cart_display', $variables);
}

/**
 * Implements hook_theme().
 */
function acq_cart_theme($existing, $type, $theme, $path) {
  // Fetch the config.
  $config = \Drupal::configFactory()
    ->get('acq_commerce.currency');

  // Fetch the currency format from the config factor.
  $currency_format = $config->get('currency_code');

  // Fetch the currency code position.
  $currency_code_position = $config->get('currency_code_position');

  return [
    'acq_cart_mini_cart' => [
      'variables' => [
        'quantity' => 0,
        'total' => NULL,
        'currency_format' => $currency_format,
        'currency_code_position' => $currency_code_position,
      ],
      'template' => 'block--acqminicart',
    ],
  ];
}

/**
 * Remove items from cart having 0 quantity.
 *
 * @param \Drupal\acq_cart\CartInterface $cart
 *   Cart object.
 */
function _acq_cart_remove_zero_quantity_item(CartInterface $cart) {
  $cart_items = $cart->items();
  // If item has 0 quantity, remove it.
  if (!empty($cart_items)) {
    foreach ($cart_items as $item) {
      if ($item['qty'] < 1) {
        $cart->removeItemFromCart($item['sku']);
      }
    }
  }
}
