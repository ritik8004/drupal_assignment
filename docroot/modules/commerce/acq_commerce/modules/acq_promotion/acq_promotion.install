<?php

/**
 * @file
 * Contains install hooks for acq_promotion.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_update_N().
 *
 * Remove products key and its values from field_acq_promotion_data.
 */
function acq_promotion_update_8002() {
  $table_mapping = \Drupal::entityTypeManager()->getStorage('node')->getTableMapping();
  $storage_definitions = \Drupal::service('entity_field.manager')->getFieldStorageDefinitions('node');

  // Get table names for "field_acq_promotion_data".
  $tables = [
    $table_mapping->getDedicatedDataTableName($storage_definitions['field_acq_promotion_data']),
    $table_mapping->getDedicatedRevisionTableName($storage_definitions['field_acq_promotion_data'])
  ];

  // Update field tables to remove products key, as we are not using it
  // anywhere, and that is creating unnecessary load on promotion node load.
  $connection = \Drupal::database();
  foreach($tables as $promotion_table) {
    $records = $connection->select($promotion_table)->fields($promotion_table)->execute()->fetchAll(PDO::FETCH_ASSOC);
    foreach($records as $record) {
      $data = unserialize($record['field_acq_promotion_data_value']);
      unset($data['products']);
      $connection->update($promotion_table)
      ->fields([
        'field_acq_promotion_data_value' => serialize($data),
      ])
      ->condition('entity_id', $record['entity_id'])
      ->condition('revision_id', $record['revision_id'])
      ->execute();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Add field to store sort_order.
 */
function acq_promotion_update_8001() {
  $module_path = drupal_get_path('module', 'acq_promotion');

  // Create the field storage.
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.field_acq_promotion_sort_order.yml'));
  if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
    FieldStorageConfig::create($yml)->save();
  }

  // Create the field.
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.acq_promotion.field_acq_promotion_sort_order.yml'));
  if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
    FieldConfig::create($yml)->save();
  }

  // Show the field in form display.
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/core.entity_form_display.node.acq_promotion.default.yml'));
  $config = \Drupal::configFactory()->getEditable('core.entity_form_display.node.acq_promotion.default');
  $content = $config->get('content');
  $content['field_acq_promotion_sort_order'] = $yml['content']['field_acq_promotion_sort_order'];
  $config->set('content', $content);
  $config->save();
}
