<?php

/**
 * @file
 * Acquia Commerce promotions module file.
 *
 * Provides base hooks to the promotions functionality of Acquia Commerce
 * connector.
 */

use Drupal\acq_sku\Entity\SKU;
use Drupal\node\NodeInterface;

/**
 * Implements hook_acq_sku_clean_synced_data_alter().
 */
function acq_promotion_acq_sku_clean_synced_data_alter(&$context) {
  $query = \Drupal::entityQuery('node');
  $query->addTag('node');
  $query->condition('type', 'acq_promotion');
  $entities = $query->execute();
  foreach ($entities as $entity_id) {
    $context['sandbox']['results'][] = [
      'type' => 'node',
      'entity_id' => $entity_id,
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function acq_promotion_node_delete(NodeInterface $node) {
  if ($node->bundle() == 'acq_promotion') {
    /* @var \Drupal\acq_promotion\AcqPromotionsManager $promotion_manager*/
    $promotion_manager = \Drupal::service('acq_promotion.promotions_manager');
    // Get SKUs attached to the promotion node.
    $attached_promotion_skus = $promotion_manager->getSkusForPromotion($node);

    if (!empty($attached_promotion_skus)) {
      foreach ($attached_promotion_skus as $sku) {
        if (($sku_entity = SKU::loadFromSku($sku)) &&
          ($sku_entity instanceof SKU)) {
          $promotion_manager->removeOrphanPromotionFromSku($sku_entity, $node->id());
        }
      }
    }
  }
}
