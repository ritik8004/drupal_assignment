name: Validate

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == false }}
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
      composer: ${{ steps.changes.outputs.composer}}
      docroot: ${{ steps.changes.outputs.docroot}}
      blt: ${{ steps.changes.outputs.blt}}
      js: ${{ steps.changes.outputs.js }}
      scss: ${{ steps.changes.outputs.scss }}
    steps:
      # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          # Outputs the list of files changed on a temporary file to be shared with other jobs.
          echo "$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | wc -l | xargs)" > /tmp/changed_files.tmp
          # Store the number of files changed.
          echo all=$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | wc -l | xargs) >> $GITHUB_OUTPUT
          echo composer=$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep composer | xargs) >> $GITHUB_OUTPUT
          echo docroot=$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep docroot | xargs) >> $GITHUB_OUTPUT
          echo blt=$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep blt | xargs) >> $GITHUB_OUTPUT
          echo js=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .js$ | xargs) >> $GITHUB_OUTPUT
          echo scss=$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .scss$ | xargs) >> $GITHUB_OUTPUT

      - name: Check if there are changes.
        run: |
          echo "No changes found in PR. This could also mean your branch is not updated, please rebase."
          exit 1
        if: ${{ !(steps.changes.outputs.all) }}

      - uses: actions/upload-artifact@v2
        with:
          # Make changed files available for other jobs.
          name: changed_files
          path: /tmp/changed_files.tmp

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: changedfiles
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == false && (needs.changedfiles.outputs.composer || needs.changedfiles.outputs.docroot || needs.changedfiles.outputs.blt) }}

    container:
      image: devwithlando/php:8.0-fpm-4

    services:
      database:
        image: mariadb
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      memcache:
        image: memcached:latest

    env:
      CI: GITHUB_ACTIONS
      COMPOSER_MEMORY_LIMIT: -1
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER_PASSWORD: drupal
      MYSQL_USER_NAME: drupal
      MYSQL_DATABASE_NAME: drupal
      MYSQL_HOST: database
      INSTALL_TYPE: install

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: changed_files

      - name: Repo check
        run: |
          echo "We should not run actions in forks."
          exit 1
        if: ${{ github.repository_owner != 'marcelovani' }}

      - name: echo changed files
        run: |
          echo ${{needs.changedfiles.outputs.composer}}
          echo ${{needs.changedfiles.outputs.blt}}
          echo ${{needs.changedfiles.outputs.docroot}}
          echo ${{needs.changedfiles.outputs.js}}
          echo ${{needs.changedfiles.outputs.scss}}

      - name: Prepare environment variables
        run: |
          echo GITHUB_REF_NAME=$(echo ${GITHUB_REF##*/}) >> $GITHUB_ENV
          echo COMPOSER_BIN=$(echo ${GITHUB_WORKSPACE}/vendor/bin) >> $GITHUB_ENV
          echo BLT_DIR=$(echo ${GITHUB_WORKSPACE}/vendor/acquia/blt) >> $GITHUB_ENV
          echo SCRIPT_DIR=$(echo ${GITHUB_WORKSPACE}/blt/scripts/github_actions) >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          bash $SCRIPT_DIR/run_tests.sh /tmp/changed_files.tmp
        if: ${{ needs.changedfiles.outputs.all }}

      - name: Run Composer install
        run: |
          composer self-update
          composer self-update --2
          composer validate --no-check-all --ansi
          composer install --no-interaction || composer install --no-interaction || composer install --no-interaction

      - name: Prepare bin executables
        run: |
          ln -s ${GITHUB_WORKSPACE}/vendor/acquia/blt/bin/blt /usr/local/bin/blt
          ln -s ${GITHUB_WORKSPACE}/vendor/drush/drush/drush /usr/local/bin/drush

      - name: Cache dependencies installed with Composer
        id: composer-cache
        run: |
          echo dir=$(composer config cache-files-dir) >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: |
            "${{ steps.composer-cache.outputs.dir }}"
            ~/.drush/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: Setup environment
        run: |
          bash $SCRIPT_DIR/setup_env.sh
          bash $SCRIPT_DIR/setup_mysql.sh

      - name: Install Node
        uses: actions/setup-node@v3
        if: ${{ needs.changedfiles.outputs.js || needs.changedfiles.outputs.scss }}
        with:
          node-version: "14.19.0"
          cache: "npm"
          cache-dependency-path: |
            docroot/package-lock.json
            docroot/modules/custom/package-lock.json
            docroot/modules/react/package-lock.json
            docroot/themes/custom/package-lock.json

      - name: Install Gulp
        if: ${{ needs.changedfiles.outputs.js || needs.changedfiles.outputs.scss }}
        run: npm install -g gulp-cli

      - name: Cache node modules
        id: npm-cache-dir
        if: ${{ needs.changedfiles.outputs.js || needs.changedfiles.outputs.scss }}
        run: |
          echo dir=$(npm config get cache) >> $GITHUB_OUTPUT

      # @todo check if this really works or we need one step per directory
      - uses: actions/cache@v3
        with:
          path: |
            "${{ steps.npm-cache-dir.outputs.dir }}"
            ~/.npm
            ~/.nvm
          key: ${{ runner.os }}-node

      - name: React validate
        if: ${{ needs.changedfiles.outputs.js }}
        run: |
          echo 'Changed JS files are - ${{ needs.changedfiles.outputs.js }}'
          blt alshayafe:setup-react
          blt alshayafe:test-react:changed-files "${{ needs.changedfiles.outputs.js }}"

      - name: Frontend validate
        if: ${{ needs.changedfiles.outputs.scss }}
        run: |
          echo 'Changed CSS files are - ${{ needs.changedfiles.outputs.scss }}'
          blt alshayafe:setup-themes
          blt alshayafe:test-themes

      - name: Run Tests
        run: |
          bash $SCRIPT_DIR/run_tests.sh ${{ needs.changedfiles.outputs.all }}
        if: ${{ needs.changedfiles.outputs.all }}
