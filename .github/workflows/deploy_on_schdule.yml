name: Deploy on Schedule

on:
#  pull_request:
  schedule:
    # Run every day at 2AM, 8AM, 2PM and 8PM IST.
    - cron: '30 2,8,14,20 * * *'

concurrency: deploy-${{ github.ref }}

defaults:
  run:
    shell: bash

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'acquia-pso' }}

    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all }}
      themes: ${{ steps.changes.outputs.themes }}
      react: ${{ steps.changes.outputs.react }}

    strategy:
      matrix:
        branch:
          - develop
          - develop-brand-rollout

    steps:
      - name: Check for commits in branch
        id: check-new-commits
        uses: adriangl/check-new-commits-action@v1
        with:
          token: 'your_github_token'
          seconds: 25200 # 7 hours in seconds
          branch: ${{ matrix.branch }}

      # Make sure we have some code to diff.
      - name: Checkout ${{ matrix.branch }} repository
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 2

      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.before }} ${{ github.event.after }} | xargs)"
          echo "::set-output name=themes::$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.before }} ${{ github.event.after }} | grep docroot/themes/custom | xargs)"
          echo "::set-output name=react::$(git diff --name-only --diff-filter=ACMRTD ${{ github.event.before }} ${{ github.event.after }} | grep docroot/modules/react | xargs)"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: changedfiles
    if: ${{ needs.changedfiles.steps.check-new-commits.outputs.has-new-commits == 'true' && github.repository_owner == 'acquia-pso' }}

    container:
      image: devwithlando/php:8.0-fpm-4

    env:
      CI: GITHUB_ACTIONS
      COMPOSER_MEMORY_LIMIT: -1
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      SSH_DEPLOYMENT_KEY: ${{ secrets.BLT_SSH_DEPLOYMENT_KEY }}

    strategy:
      matrix:
        branch:
          - develop
          - develop-brand-rollout

    steps:
      - name: Checkout ${{ matrix.branch }} repository
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}

      - name: Artifact Build
        uses: ./.github/actions/deploy_build
        with:
          SCRIPT_DIR: ${SCRIPT_DIR}
          SSH_AUTH_SOCK: ${SSH_AUTH_SOCK}
          SSH_DEPLOYMENT_KEY: ${SSH_DEPLOYMENT_KEY}
          CHANGED_THEMES_FILES: ${{ needs.changedfiles.outputs.themes }}
          CHANGED_REACT_FILES: ${{ needs.changedfiles.outputs.react }}
          CHANGED_ALL_FILES: ${{ needs.changedfiles.outputs.all }}

      - name: Deploy ${{ matrix.branch }} branch
        run: bash $SCRIPT_DIR/deploy_branch.sh ${{ matrix.branch }}
        if: ${{ env.SSH_DEPLOYMENT_KEY && contains(github.ref, 'refs/heads') }}
