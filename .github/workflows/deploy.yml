name: Deploy

on:
  push:
    branches:
      - develop
      - qa
      - uat
      - master
  create:
    tags:

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    if: ${{ github.event_name == 'push' || github.event_name == 'create' }}

    container:
      image: devwithlando/php:7.4-fpm-4

    env:
      CI: GITHUB_ACTIONS
      COMPOSER_MEMORY_LIMIT: -1
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      SSH_DEPLOYMENT_KEY: ${{ secrets.BLT_SSH_DEPLOYMENT_KEY }}

    steps:
      - name: Repo check
        run: |
          echo "We should not run actions in forks."
          exit 1
        if: ${{ github.repository_owner != 'acquia-pso' }}

      - name: Prepare environment variables
        run: |
          echo "GITHUB_REF_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "COMPOSER_BIN=$(echo ${GITHUB_WORKSPACE}/vendor/bin)" >> $GITHUB_ENV
          echo "BLT_DIR=$(echo ${GITHUB_WORKSPACE}/vendor/acquia/blt)" >> $GITHUB_ENV
          echo "SCRIPT_DIR=$(echo ${GITHUB_WORKSPACE}/blt/scripts/github_actions)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Composer install
        run: |
          composer self-update
          composer self-update --1
          composer global require hirak/prestissimo
          composer validate --no-check-all --ansi
          composer install --no-interaction || composer install --no-interaction || composer install --no-interaction

      - name: Prepare bin executables
        run: |
          ln -s ${GITHUB_WORKSPACE}/vendor/acquia/blt/bin/blt /usr/local/bin/blt
          ln -s ${GITHUB_WORKSPACE}/vendor/drush/drush/drush /usr/local/bin/drush

      - name: Build all middleware
        run: bash ${GITHUB_WORKSPACE}/blt/scripts/middleware-build.sh "${GITHUB_WORKSPACE}"

      - name: Cache dependencies installed with Composer
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: |
            "${{ steps.composer-cache.outputs.dir }}"
            ~/.drush/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: Setup environment
        run: bash $SCRIPT_DIR/setup_env.sh

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14.19.0"

      - name: Install Gulp
        run: npm install -g gulp-cli

      - name: Cache node modules
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      # @todo check if this really works or we need one step per directory
      - uses: actions/cache@v2
        with:
          path: |
            "${{ steps.npm-cache-dir.outputs.dir }}"
            ~/.npm
            ~/.nvm
          key: ${{ runner.os }}-node

      - name: Prepare deployment key
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ env.SSH_DEPLOYMENT_KEY }}"
        if: ${{ env.SSH_DEPLOYMENT_KEY }}

      - name: Deploy branch
        run: bash $SCRIPT_DIR/deploy_branch.sh
        if: ${{ env.SSH_DEPLOYMENT_KEY && contains(github.ref, 'refs/heads') }}

      - name: Deploy tag
        run: bash $SCRIPT_DIR/deploy_tag.sh
        if: ${{ env.SSH_DEPLOYMENT_KEY && contains(github.ref, 'refs/tags') }}
